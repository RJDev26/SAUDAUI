{"version":3,"file":"src_app_Forms_Reports_reports_module_ts.js","mappings":"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","sources":["./src/app/Forms/Reports/ledger-report/ledger-report.component.ts","./src/app/Forms/Reports/ledger-report/ledger-report.component.html","./src/app/Forms/Reports/reports.module.ts","./src/app/Forms/Reports/reports.service.ts","./src/app/Forms/Reports/sub-ledger-report/sub-ledger-report.component.ts","./src/app/Forms/Reports/sub-ledger-report/sub-ledger-report.component.html","./src/app/Forms/Reports/trade-register/trade-register.component.ts","./src/app/Forms/Reports/trade-register/trade-register.component.html","./src/app/Forms/Reports/trail-balance/trail-balance.component.ts","./src/app/Forms/Reports/trail-balance/trail-balance.component.html"],"sourcesContent":["import { Component, OnInit, Inject, ViewChild } from '@angular/core';\r\nimport { AppSettings } from \"src/app/app.settings\";\r\nimport { Settings } from \"src/app/app.settings.model\";\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSelect } from '@angular/material/select';\r\nimport { MatOption } from '@angular/material/core';\r\nimport { AppService } from 'src/app/service/app.service';\r\nimport { ConfirmationDialog } from '../../Dialog/confirmation-dialog/confirmation-dialog.component';\r\nimport { CommonUtility } from 'src/app/shared/common-utility';\r\nimport { forkJoin, map } from 'rxjs';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MasterService } from '../../Master/master.service';\r\nimport { ReportsService } from '../reports.service';\r\nimport { EntryService } from '../../Entry/entry.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-ledger-report',\r\n  templateUrl: './ledger-report.component.html',\r\n  styleUrls: ['./ledger-report.component.scss']\r\n})\r\nexport class LedgerReportComponent implements OnInit {\r\n\r\n  @ViewChild('select') select: MatSelect;\r\n  @ViewChild('selectAccount') selectAccount: MatSelect;\r\n  @ViewChild('selectVouType') selectVouType: MatSelect;\r\n  public settings: Settings;\r\n  slabId: number;\r\n  slabList: any[];\r\n  includeOpBal: boolean = true;\r\n  withinterest: boolean = true;\r\n  fromDt: any;\r\n  toDt: any;\r\n  accountList: any[];\r\n  branchList: any[];\r\n  instrumentList: any[];\r\n  instrumentType: any;\r\n  itemGroupIds: any;\r\n  filteredItemGroup: any;\r\n  itemGroupIdList: any;\r\n\r\n  searchedData: any;\r\n  branchIds: Array<string>;\r\n  accountIds: any[] = ['-1'];\r\n  filteredProviders: any[];\r\n  filteredAccountList: any[];\r\n  brokeragesetupList: any = [];\r\n  branchAllSellected: boolean = false;\r\n  vouTypeList: any\r\n  filteredVouTypeList: any;\r\n  vouTypeIds: any;\r\n\r\n  constructor(private router: Router, private _entryService: EntryService, private datePipe: DatePipe, public snackBar: MatSnackBar, public appSettings: AppSettings, private _appService: AppService, public dialog: MatDialog, private _masterService: MasterService, private _reportsService: ReportsService) {\r\n    this.settings = this.appSettings.settings;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.fetchDropdownData();\r\n  //   this.getBrokerageSetupList({\r\n  //     \"account\": \"7,6,5,4\",\r\n  //     \"fromDate\": \"2023-09-02\",\r\n  //     \"toDate\": \"2023-09-07\"\r\n  // });\r\n  }\r\n\r\n  calculateTotalDebit(): number {\r\n    let totalDebit = 0;\r\n    for (const item of this.brokeragesetupList) {\r\n      if (item.debit < 0) {\r\n        totalDebit += item.debit;\r\n      }\r\n    }\r\n    return totalDebit;\r\n  }\r\n  \r\n  calculateTotalCredit(): number {\r\n    let totalCredit = 0;\r\n    for (const item of this.brokeragesetupList) {\r\n      if (item.credit > 0) {\r\n        totalCredit += item.credit;\r\n      }\r\n    }\r\n    return totalCredit;\r\n  }\r\n\r\n  agGridOptions: any = {\r\n    defaultColDef: {\r\n      filter: true,\r\n       flex:1,\r\n      sortable: true,\r\n      wraptext: true,\r\n      resizable: true,\r\n      minWidth: 100,\r\n    \r\n    },\r\n    autoGroupColumnDef: {\r\n      headerName: 'Account',\r\n      field: 'account',\r\n      minWidth: 200,\r\n      cellRenderer: 'agGroupCellRenderer',\r\n      cellRendererParams: {\r\n        suppressCount: true,\r\n      },\r\n      aggFunc: (params) => {\r\n        const debitTotal = params.values.reduce((total, value) => total + (value.debit || 0), 0);\r\n        const creditTotal = params.values.reduce((total, value) => total + (value.credit || 0), 0);\r\n        return {\r\n          account: params.key, \r\n          debit: debitTotal,   \r\n          credit: creditTotal, \r\n        };\r\n      },\r\n    },\r\n    animateRows: true,\r\n    groupUseEntireRow: true,\r\n    groupRowAggNodes: (nodes) => {\r\n      const debitTotal = nodes.reduce((total, node) => total + (node.data.debit || 0), 0);\r\n      const creditTotal = nodes.reduce((total, node) => total + (node.data.credit || 0), 0);\r\n      return {\r\n        debit: debitTotal,\r\n        credit: creditTotal,\r\n      };\r\n    },\r\n    suppressRowHoverHighlight: true,\r\n    domLayout: 'autoHeight',\r\n    \r\n    //suppressSizeToFit: true,\r\n    \r\n  }\r\n  onGridReady(event) { }\r\n\r\n  columnDefs = [ \r\n    { headerName: 'Account', field: 'name', filter: true, sorting: true, resizable: true, rowGroup: true, hide: false},    \r\n    { headerName: 'Balance', field: 'netAmt',  filter: true, sorting: true, resizable: true, valueFormatter: this.formatCurrency , cellClass: (params) => {\r\n      return 'green-text';\r\n    } },\r\n    \r\n  ];\r\n\r\n  onCellClicked(event) {\r\n    if (event.column && event.column.getColDef().field === 'name') {\r\n      const rowData = event.data;\r\n      this.openRouteInNewWindow(rowData);\r\n  \r\n    }\r\n  }\r\n\r\n  getBrokerageSetupList() {\r\n    const accountIds = this.accountIds.filter((val) => val != \"-1\");\r\n    const vouTypeIds = this.vouTypeIds.filter((val) => val != \"-1\");\r\n    var req = {\r\n      \"account\": accountIds.join(','),\r\n      \"fromDate\": this.datePipe.transform(this.fromDt, 'yyyy-MM-dd'),\r\n      \"toDate\": this.datePipe.transform(this.toDt, 'yyyy-MM-dd'),\r\n      \"vouType\": vouTypeIds.join(','),\r\n      \"includeOpBal\": this.includeOpBal,\r\n      \"withinterest\": this.withinterest\r\n    };\r\n    this._reportsService.getLedgerSummary(req).subscribe((results) => {\r\n      console.log('first', results)\r\n      this.searchedData = req;\r\n      this.brokeragesetupList = results.data;   \r\n      // this.brokeragesetupList.push({\r\n      //   drShortCode: 'Total Debit',\r\n      //   drAmt: this.calculateTotalDebit(),\r\n      //   crShortCode: 'Total Credit',\r\n      //   crAmt: this.calculateTotalCredit(),\r\n      // });    \r\n    });\r\n  }\r\n\r\n  formatCurrency(params) {\r\n    const value = Math.abs(params.value); // Get the absolute value\r\n    const formattedValue = value.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 });\r\n    return params.value < 0 ? `${formattedValue}` : formattedValue;\r\n  }\r\n  \r\n\r\n  \r\n\r\n  showToaster(message, isError = false) {\r\n    const panelClass = isError ? ['red-text'] : undefined;\r\n    const label = isError ? \"Error\" : \"Success\";\r\n    const time = isError? 6000 : 3000;\r\n  \r\n    this.snackBar.open(message, label, {\r\n      duration: time,\r\n      panelClass: panelClass,\r\n    });\r\n  }\r\n\r\n  areRequiredValuesSelected(): boolean {\r\n    return this.accountIds && this.fromDt && this.toDt && this.vouTypeIds;\r\n  }\r\n\r\n  fetchDropdownData() {\r\n    forkJoin([\r\n      this._masterService.getAccount(),\r\n      this._masterService.getBranchDDLList(), \r\n      this._entryService.getVouType(),\r\n    ]).pipe(map(response => {\r\n      this.accountList = response[0];\r\n      this.filteredAccountList = response[0];\r\n      this.branchList = response[1];\r\n      this.filteredProviders = response[1];\r\n      this.vouTypeList = response[2];\r\n      this.filteredVouTypeList = response[2];\r\n      this.vouTypeAllSelection();\r\n    })).subscribe(res => {\r\n      this.selectAllAccountValues();\r\n    });\r\n\r\n    \r\n  }\r\n\r\n  selectAllAccountValues() {\r\n    this.filteredAccountList.forEach(option => {\r\n      this.accountIds.push(option.id);\r\n    });\r\n\r\n    this.selectAccount.value = this.accountIds;\r\n  }\r\n\r\n  openRouteInNewWindow(rowData) {\r\n    const route = '/reports/single-ledger-report';\r\n    const queryParams = { \r\n      account: rowData.accountId, \r\n      fromDate: this.searchedData.fromDate,\r\n      toDate: this.searchedData.toDate,\r\n      vouType: this.searchedData.vouType,\r\n      includeOpBal: this.searchedData.includeOpBal,\r\n      withinterest: this.searchedData.withinterest,\r\n     }; \r\n\r\n    const url = this.router.serializeUrl(this.router.createUrlTree([route], { queryParams }));\r\n\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  onBranchChange(event: any, isLastIndex?: boolean) {\r\n    if(this.branchAllSellected && !isLastIndex){\r\n      return;\r\n    }\r\n    if(!this.branchIds){\r\n      this._masterService.getAccount().subscribe(\r\n        response => {\r\n          this.accountList = response;\r\n          this.filteredAccountList = response;\r\n        }\r\n      );\r\n    }\r\n    if(this.branchIds.length < 2 && this.branchIds[0] == '-1'){\r\n      return;\r\n    }\r\n    if (this.branchIds) {\r\n      this._masterService.getFilterBranchAccounts(this.branchIds).subscribe(\r\n        response => {\r\n          this.accountList = response;\r\n          this.filteredAccountList = response;\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  onInputChange(event: any) {\r\n    const searchInput = event.target.value.toLowerCase();\r\n\r\n    this.filteredProviders = this.branchList.filter((data) => {\r\n      const prov = data.name.toLowerCase();\r\n      return prov.includes(searchInput);\r\n    });\r\n  }\r\n\r\n  \r\n\r\n  onKey(value) {\r\n    this.branchList = this.search(value);\r\n}\r\n\r\n\r\n  search(value: string) {\r\n  let filter = value.toLowerCase();\r\n  return this.branchList.filter(option => option.toLowerCase().startsWith(filter));\r\n}\r\n\r\n  addBrokerage(event: any) { }\r\n\r\n  accountAllSelection()\r\n  {\r\n    var isAllChecked = this.selectAccount.options.first.selected;\r\n    this.selectAccount.options.forEach(\r\n      (item: MatOption) => {\r\n\r\n        if (isAllChecked) { item.select(); }\r\n        else { item.deselect() }\r\n      }\r\n\r\n    );\r\n\r\n  }\r\n\r\n  vouTypeAllSelection()\r\n  {\r\n    var isAllChecked = this.selectVouType.options.first.selected;\r\n    this.selectVouType.options.forEach(\r\n      (item: MatOption) => {\r\n\r\n        if (isAllChecked) { item.select(); }\r\n        else { item.deselect() }\r\n      }\r\n\r\n    );\r\n\r\n  }\r\n\r\n  onInputVouTypeListChange(event: any) {\r\n    const searchInput = event.target.value.toLowerCase();\r\n\r\n    this.filteredVouTypeList = this.vouTypeList.filter((data) => {\r\n      const prov = data.name.toLowerCase();\r\n      return prov.includes(searchInput);\r\n    });\r\n  }\r\n\r\n  onInputAccountListChange(event: any) {\r\n    const searchInput = event.target.value.toLowerCase();\r\n\r\n    this.filteredAccountList = this.accountList.filter((data) => {\r\n      const prov = data.name.toLowerCase();\r\n      return prov.includes(searchInput);\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"row trail-balance\">\r\n  <div class=\"mt-2\">\r\n    <div fxFlex=\"100\" fxFlex.gt-sm=\"15\" fxFlex.sm=\"15\">\r\n      <div class=\"dropdown-container\">\r\n        <div class=\"dropdown-wrapper\">\r\n          <mat-form-field appearance=\"outline\" class=\"calendar\">\r\n            <mat-label>From</mat-label>\r\n            <input matInput [matDatepicker]=\"picker1\" [(ngModel)]=\"fromDt\" />\r\n            <mat-datepicker-toggle\r\n              matSuffix\r\n              [for]=\"picker1\"\r\n            ></mat-datepicker-toggle>\r\n            <mat-datepicker #picker1></mat-datepicker>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div fxFlex=\"100\" fxFlex.gt-sm=\"15\" fxFlex.sm=\"15\">\r\n      <div class=\"dropdown-container\">\r\n        <div class=\"dropdown-wrapper\">\r\n          <mat-form-field appearance=\"outline\" class=\"calendar\">\r\n            <mat-label>To</mat-label>\r\n            <input\r\n              matInput\r\n              [matDatepicker]=\"picker2\"\r\n              placeholder=\"To\"\r\n              [(ngModel)]=\"toDt\"\r\n            />\r\n            <mat-datepicker-toggle\r\n              matSuffix\r\n              [for]=\"picker2\"\r\n            ></mat-datepicker-toggle>\r\n            <mat-datepicker #picker2></mat-datepicker>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div fxFlex=\"100\" fxFlex.gt-sm=\"15\" fxFlex.sm=\"15\">\r\n      <div class=\"dropdown-container\">\r\n        <div class=\"dropdown-wrapper\">\r\n          <mat-form-field class=\"select-slab-mat\" appearance=\"outline\">\r\n            <mat-label>Select Branch</mat-label>\r\n            <mat-select\r\n              #select\r\n              [(ngModel)]=\"branchIds\"\r\n              placeholder=\"Select Branch\"\r\n              (selectionChange)=\"onBranchChange($event)\"\r\n              panelClass=\"custom-select-panel\"\r\n            >\r\n              <input\r\n                class=\"milti-search-box\"\r\n                #multiUserSearch\r\n                type=\"text\"\r\n                autocomplete=\"off\"\r\n                matInput\r\n                placeholder=\"Search Branch\"\r\n                (input)=\"onInputChange($event)\"\r\n              />\r\n              <mat-option>None</mat-option>\r\n              <mat-option\r\n                *ngFor=\"let option of filteredProviders\"\r\n                [value]=\"option.id\"\r\n              >\r\n                {{ option.name }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div fxFlex=\"100\" fxFlex.gt-sm=\"15\" fxFlex.sm=\"15\">\r\n      <div class=\"dropdown-container\">\r\n        <div class=\"dropdown-wrapper\">\r\n          <mat-form-field class=\"select-slab-mat\" appearance=\"outline\">\r\n            <mat-label>Select Account</mat-label>\r\n            <mat-select\r\n              #selectAccount\r\n              [(ngModel)]=\"accountIds\"\r\n              multiple\r\n              placeholder=\"Select Account\"\r\n              panelClass=\"custom-select-panel\"\r\n            >\r\n              <input\r\n                class=\"milti-search-box\"\r\n                #multiUserSearch\r\n                type=\"text\"\r\n                autocomplete=\"off\"\r\n                matInput\r\n                placeholder=\"Search Account\"\r\n                (input)=\"onInputAccountListChange($event)\"\r\n              />\r\n              <mat-option value=\"-1\" (click)=\"accountAllSelection()\"\r\n                >Select All</mat-option\r\n              >\r\n              <mat-option\r\n                *ngFor=\"let option of filteredAccountList\"\r\n                [value]=\"option.id\"\r\n              >\r\n                {{ option.name }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div fxFlex=\"100\" fxFlex.gt-sm=\"15\" fxFlex.sm=\"15\">\r\n        <div class=\"dropdown-container\">\r\n            <div class=\"dropdown-wrapper\">\r\n                <mat-form-field class=\"select-slab-mat\" appearance=\"outline\">\r\n                  <mat-label>Vou Type</mat-label>  \r\n                  <mat-select #selectVouType  [(ngModel)]=\"vouTypeIds\" multiple placeholder=\"Select VouType\" panelClass=\"custom-select-panel\">\r\n                    <input class=\"milti-search-box\" #multiUserSearch type=\"text\" autocomplete=\"off\" matInput placeholder=\"Search Voutype\" (input)=\"onInputVouTypeListChange($event)\"/>\r\n                    <mat-option value=-1 (click)=\"vouTypeAllSelection()\">Select All</mat-option>\r\n                    <mat-option *ngFor=\"let option of filteredVouTypeList\" [value]=\"option.id\">\r\n                      {{ option.name }}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n        </div>\r\n      </div>\r\n      <div fxFlex=\"100\" fxFlex.gt-sm=\"15\" fxFlex.sm=\"15\">\r\n        <mat-slide-toggle [(ngModel)]=\"includeOpBal\" color=\"primary\">Include OpBal</mat-slide-toggle>\r\n        <mat-slide-toggle [(ngModel)]=\"withinterest\" color=\"primary\">With Interest</mat-slide-toggle>\r\n      </div>\r\n    <div fxFlex=\"100\" fxFlex.gt-sm=\"7\" fxFlex.sm=\"7\">\r\n      <button\r\n        mat-raised-button\r\n        color=\"primary\"\r\n        (click)=\"getBrokerageSetupList()\"\r\n        [disabled]=\"!areRequiredValuesSelected()\"\r\n        class=\"search-icon-btn\"\r\n      >\r\n        <mat-icon>search</mat-icon>\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-xl-12 mt-2\">\r\n    <ag-grid-angular\r\n      style=\"height: 735px\"\r\n      class=\"ag-theme-material\"\r\n      [rowData]=\"brokeragesetupList\"\r\n      [pagination]=\"true\"\r\n      [rowHeight]=\"31\"\r\n      [columnDefs]=\"columnDefs\"\r\n      [defaultColDef]=\"agGridOptions.defaultColDef\"\r\n      (gridReady)=\"onGridReady($event)\"\r\n      (cellClicked)=\"onCellClicked($event)\"\r\n      headerHeight=\"34\"\r\n      [groupUseEntireRow]=\"agGridOptions.groupUseEntireRow\"\r\n      [groupRowAggNodes]=\"agGridOptions.groupRowAggNodes\"\r\n      [autoGroupColumnDef]=\"agGridOptions.autoGroupColumnDef\"\r\n      domLayout=\"autoHeight\"\r\n    >\r\n    </ag-grid-angular>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule, DatePipe } from '@angular/common';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { AgGridModule } from 'ag-grid-angular';\r\nimport { MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport { TrailBalanceComponent } from './trail-balance/trail-balance.component';\r\nimport { LedgerReportComponent } from './ledger-report/ledger-report.component';\r\nimport { SubLedgerReportComponent } from './sub-ledger-report/sub-ledger-report.component';\r\nimport { TradeRegisterComponent } from './trade-register/trade-register.component';\r\n\r\nexport const routes: Routes = [\r\n  { path: '', redirectTo: 'reports', pathMatch: 'full' },\r\n  { path: 'trail-balance', component: TrailBalanceComponent, data: { breadcrumb: 'Trail Balance' } },\r\n  { path: 'ledger-report', component: LedgerReportComponent, data: { breadcrumb: 'Ledger Report' } },\r\n  { path: 'trade-register', component: TradeRegisterComponent, data: { breadcrumb: 'Trade Register' } },\r\n  { path: 'single-ledger-report',pathMatch: 'prefix', component: SubLedgerReportComponent, data: { breadcrumb: 'Single Ledger Report' } },\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    AgGridModule\r\n  ],\r\n  declarations: [\r\n  \r\n    TrailBalanceComponent,\r\n        LedgerReportComponent,\r\n        SubLedgerReportComponent,\r\n        TradeRegisterComponent\r\n  ],\r\n  providers: [\r\n    DatePipe,\r\n    { provide: MAT_DATE_LOCALE, useValue: 'en-GB' }\r\n  ],\r\n})\r\nexport class ReportsModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ReportsService {\r\n  headers = new HttpHeaders()\r\n  .set('content-type', 'application/json')\r\n  .set('Access-Control-Allow-Origin', '*')\r\n  .set('Access-Control-Allow-Methods', 'GET,POST,OPTIONS,DELETE,PUT');\r\n  \r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  getTrialBalance(data):Observable<any>{\r\n    return this.httpClient.post<any>(environment.apiBaseUrl + 'Report/getTrialBalance', data, {headers:this.headers});\r\n  }\r\n\r\n  getLedger(data):Observable<any>{\r\n    return this.httpClient.post<any>(environment.apiBaseUrl + 'Report/getLedger', data, {headers:this.headers});\r\n  }\r\n\r\n  getTradeRegister(data):Observable<any>{\r\n    return this.httpClient.post<any>(environment.apiBaseUrl + 'Trade/getTradeRegister', data, {headers:this.headers});\r\n  }\r\n\r\n  getLedgerSummary(data):Observable<any>{\r\n    return this.httpClient.post<any>(environment.apiBaseUrl + 'Report/getLedgerSummary', data, {headers:this.headers});\r\n  }\r\n\r\n  deleteContract(tradeNo: string): Observable<any> {\r\n    const url = `${environment.apiBaseUrl}Trade/deleteContractById`;\r\n    return this.httpClient.delete(url, { headers: this.headers, body: {tradeNo:tradeNo} });\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ReportsService } from '../reports.service';\r\ndeclare let jsPDF;\r\ndeclare let $;\r\n\r\n@Component({\r\n  selector: 'app-sub-ledger-report',\r\n  templateUrl: './sub-ledger-report.component.html',\r\n  styleUrls: ['./sub-ledger-report.component.scss']\r\n})\r\nexport class SubLedgerReportComponent implements OnInit {\r\n  searchedData:any;\r\n  brokeragesetupList: any;\r\n  paginationPageSize = 10;\r\n  margins = {\r\n      top: 80,\r\n      bottom: 20,\r\n      left: 10,\r\n      width: 830\r\n  };\r\n  companydata = {\r\n    Name:\"Accounts\",\r\n  };\r\n  agGridOptions: any = {\r\n    defaultColDef: {\r\n      filter: true,\r\n       flex:1,\r\n      sortable: true,\r\n      wraptext: true,\r\n      resizable: true,\r\n      minWidth: 100,\r\n    \r\n    },\r\n    suppressRowHoverHighlight: true,\r\n    domLayout: 'autoHeight', \r\n    rowClass: (params) => {\r\n      // Check if the row is a total row (you can use your own criteria)\r\n      if (params.data && (params.data.drShortCode === 'Total Debit' || params.data.crShortCode === 'Total Credit')) {\r\n        return 'total-row'; // Apply the CSS class for total rows\r\n      }\r\n      return ''; // Return an empty string for other rows\r\n    },\r\n    //suppressSizeToFit: true,\r\n    \r\n  }\r\n  onGridReady(event) { }\r\n\r\n  columnDefs = [\r\n    { headerName: 'Vou No',  field: 'vouNo', filter: true, sorting: true, resizable: true },\r\n    { headerName: 'Date',  field: 'vouDate', filter: true, sorting: true, resizable: true },\r\n    { headerName: 'Narration', field: 'narration', filter: true, sorting: true, resizable: true},    \r\n    { headerName: 'Account', field: 'account', filter: true, sorting: true, resizable: true},    \r\n    { field: 'debit',   headerName: 'Debit', filter: true, sorting: true, resizable: true, valueFormatter: this.formatCurrency , cellClass: (params) => {\r\n      return 'red-text';\r\n    }},\r\n    { headerName: 'Credit', field: 'credit',  filter: true, sorting: true, resizable: true, valueFormatter: this.formatCurrency , cellClass: (params) => {\r\n      return 'green-text';\r\n    } },\r\n    { headerName: 'Balance', field: 'balance',  filter: true, sorting: true, resizable: true, valueFormatter: this.formatCurrency , cellClass: (params) => {\r\n      return 'green-text';\r\n    } },\r\n    \r\n  ];\r\n\r\n  formatCurrency(params) {\r\n    const value = Math.abs(params.value); // Get the absolute value\r\n    const formattedValue = value.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 });\r\n    return params.value < 0 ? `${formattedValue}` : formattedValue;\r\n  }\r\n\r\n  constructor(private route: ActivatedRoute, private _reportsService: ReportsService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getQueryPramsData();\r\n    this.getBrokerageSetupList();\r\n  }\r\n\r\n  getQueryPramsData() {\r\n    this.route.queryParams.subscribe(params => {\r\n      // Access and use the query parameters here\r\n      this.searchedData = params;\r\n      console.log(this.searchedData);\r\n  \r\n      // Now you can use these parameters in your component logic\r\n    });\r\n  }\r\n\r\n  getBrokerageSetupList() {\r\n    const req = {\r\n      withinterest: this.searchedData.withinterest==='true',\r\n      includeOpBal: this.searchedData.includeOpBal==='true',\r\n      vouType: this.searchedData.vouType,\r\n      fromDate: this.searchedData.fromDate,\r\n      account: this.searchedData.account,\r\n      toDate: this.searchedData.toDate,\r\n    }\r\n    this._reportsService.getLedger(req).subscribe((results) => {\r\n      this.brokeragesetupList = results.data;    \r\n      this.brokeragesetupList.push({\r\n        vouNo: 'Total',\r\n        debit: this.calculateTotalDebit(),\r\n        credit: this.calculateTotalCredit(),\r\n        balance: this.calculateTotalBalance(),\r\n      });  \r\n    });\r\n  }\r\n\r\n  calculateTotalBalance(): number {\r\n    let totalDebit = 0;\r\n    for (const item of this.brokeragesetupList) {\r\n        totalDebit += item.balance;\r\n    }\r\n    return totalDebit;\r\n  }\r\n\r\n  calculateTotalDebit(): number {\r\n    let totalDebit = 0;\r\n    for (const item of this.brokeragesetupList) {\r\n        totalDebit += item.debit;\r\n    }\r\n    return totalDebit;\r\n  }\r\n  \r\n  calculateTotalCredit(): number {\r\n    let totalCredit = 0;\r\n    for (const item of this.brokeragesetupList) {\r\n        totalCredit += item.credit;\r\n    }\r\n    return totalCredit;\r\n  }\r\n\r\n  downloadAsPDF() {\r\n    var self = this;\r\n    var doc = new jsPDF('l', 'pt', \"a4\");\r\n    var col = this.columnDefs.map(columns=>columns.headerName);\r\n    var colFields = this.columnDefs.map(columns=>columns.field);\r\n    var rows = [];\r\n    for (var i = 0; i < this.brokeragesetupList.length; i++) {\r\n      var temp = [];\r\n      for(var j = 0; j < colFields.length; j++){\r\n        if(this.brokeragesetupList[i][colFields[j]]){\r\n          temp.push(this.brokeragesetupList[i][colFields[j]])\r\n        } else {\r\n          temp.push('');\r\n        }\r\n      }\r\n      rows.push(temp);\r\n    }\r\n    console.log(rows, col);\r\n    doc.setFont(\"calibari\");\r\n    doc.setFontSize(18);\r\n    doc.setFontStyle('bold');\r\n    var mainHeader = this.companydata.Name, xOffset = (doc.internal.pageSize.width / 2) - (doc.getStringUnitWidth(mainHeader) * doc.internal.getFontSize() / 2);\r\n    doc.text(mainHeader, xOffset, 30);\r\n\r\n    doc.setDrawColor(0, 0, 0);\r\n    doc.setLineCap(2);\r\n    doc.line(this.margins.left, 50, this.margins.width, 50);\r\n\r\n    doc.setFontSize(12);\r\n    doc.setFontStyle('bold');\r\n    var secondHeaderText = \"Trial Balance as on  \" , xOffset = (doc.internal.pageSize.width / 2) - (doc.getStringUnitWidth(secondHeaderText) * doc.internal.getFontSize() / 2);\r\n    doc.text(secondHeaderText, xOffset, 60);\r\n    doc.setDrawColor(0, 0, 0);\r\n    doc.setLineCap(2);\r\n    doc.line(self.margins.left, 70, self.margins.width, 70);\r\n\r\n    doc.autoTable(col, rows, {\r\n      html: '#brokerSetupGridId',\r\n      tableLineColor: [0, 0, 0],\r\n      tableLineWidth: 0.75,\r\n      theme: \"plain\",\r\n      willDrawCell: function (data) { \r\n        console.log('willDrawCell is called:', data);\r\n      },\r\n      // Use to draw additional content such as images in table cells\r\n      didDrawCell: function (data) {\r\n        console.log('didDrawCell is called:', data);\r\n      },\r\n      didDrawRow: (data) => {\r\n        console.log('didDrawRow is called:', data);\r\n        if (data.row.index === data.table.rows.length - 1) {\r\n            doc.setFillColor(255, 0, 0); // Red color\r\n            doc.rect(\r\n                data.table.width + data.table.settings.margin.left,\r\n                data.row.y,\r\n                data.table.width,\r\n                data.row.height,\r\n                'F' // 'F' for fill\r\n            );\r\n        }\r\n      },\r\n      didParseCell: (data) => {\r\n          console.log('didParseCell is called:', data);\r\n          if (data.section === 'body' && data.cell.raw.cellIndex == 3) {\r\n              data.cell.styles.textColor = [255, 72, 72];\r\n          }\r\n          if (data.section === 'body' && data.cell.raw.cellIndex == 5) {\r\n              data.cell.styles.textColor = [0, 0, 255];\r\n          }\r\n          if (data.section === 'body' && data.cell.raw.cellIndex == 6) {\r\n              data.cell.styles.textColor = [0, 0, 255];\r\n          }\r\n          if (data.section === 'foot' && data.cell.raw.cellIndex == 4) {\r\n              data.cell.styles.textColor = [255, 72, 72];\r\n          }\r\n          if (data.section === 'foot' && data.cell.raw.cellIndex == 5) {\r\n              data.cell.styles.textColor = [0, 128, 0];\r\n          }\r\n          if (data.section === 'foot' && data.cell.raw.cellIndex == 6) {\r\n              data.cell.styles.textColor = [0, 128, 0];\r\n          }\r\n      },\r\n      tableWidth: this.margins.width,\r\n      bodyStyles: { valign: 'top' },\r\n      styles: {\r\n          overflow: 'linebreak', fontSize: 9,\r\n          font: 'calibari', width: this.margins.width, lineWidth: 1, minCellWidth: 32,\r\n      },\r\n      columnStyles: {\r\n          0: { cellWidth: '1%' }, 4: { halign: 'right' }, 5: { halign: 'right' }, 6: { halign: 'right' }\r\n      },\r\n      footStyles: {\r\n          cellWidth: 'wrap',\r\n          fontSize: 10,\r\n          lineWidth: 0,\r\n          lineColor: [0, 0, 0],\r\n          textColor: [0, 0, 0],\r\n          fillColor: [211, 211, 211],\r\n          halign: 'right'\r\n      },\r\n      margin: {\r\n          top: this.margins.top,\r\n          left: this.margins.left\r\n      },\r\n      headerStyles: {\r\n          fontSize: 9,\r\n          font: 'arial'\r\n      },\r\n      drawRow: (row, data) => {\r\n        console.log('drawRow::', data);\r\n        data.doc.setDrawColor(0,0,0);\r\n        let firstCell = row.cells[0];\r\n        let secondCell = row.cells[1];\r\n        data.doc.setLineWidth(0.7);\r\n      },\r\n      drawHeaderRow: (head, data) => {\r\n        console.log('drawHeaderRow::', data);\r\n        data.doc.setLineWidth(0.7);\r\n        data.doc.setDrawColor(0,0,0);\r\n        data.doc.line(data.cursor.x,data.cursor.y,data.cursor.x+data.table.width,data.cursor.y)\r\n        data.doc.line(data.cursor.x, data.cursor.y + head.height, data.cursor.x + data.table.width, data.cursor.y + head.height);\r\n      }\r\n    });\r\n\r\n    const pageCount = doc.internal.getNumberOfPages();\r\n    for (var i = 1; i <= pageCount; i++) {\r\n        doc.setFontSize(10);\r\n        doc.setPage(i);\r\n        doc.text('Page ' + String(i) + ' of ' + String(pageCount), this.margins.left, doc.internal.pageSize.height - 20);\r\n    }\r\n\r\n    var iframe = document.createElement('iframe');\r\n    iframe.setAttribute('style', 'position:absolute;right:0; top:0; bottom:0; height:100%; width:100%;');\r\n        doc.output('datauristring');\r\n        doc.save('TrialBalance.PDF');\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n  <div fxLayout=\"row\" class=\"mt-2 flex-end\">\r\n    <button mat-raised-button color=\"primary\" (click)=\"downloadAsPDF()\" class=\"delete-slab icon-btn\" >\r\n      <mat-icon>\r\n        <span class=\"material-icons-outlined\">        \r\n          file_download\r\n        </span>\r\n      </mat-icon> \r\n      PDF\r\n    </button>\r\n</div>\r\n<div class=\"col-xl-12 mt-2 sub-ledger-report\">\r\n    <ag-grid-angular #agGrid style=\" height: 535px;\"\r\n                    id=\"brokerSetupGridId\"\r\n                     class=\"ag-theme-material\"\r\n                     [rowData]=\"brokeragesetupList\"\r\n                     [pagination]=\"true\"\r\n                     [rowHeight]=\"31\"\r\n                     [columnDefs]=\"columnDefs\"\r\n                     [defaultColDef]=\"agGridOptions.defaultColDef\"\r\n                     (gridReady)=\"onGridReady($event)\"\r\n                     [paginationPageSize]=\"paginationPageSize\"\r\n                      headerHeight=\"34\"\r\n                      domLayout=\"autoHeight\">\r\n    </ag-grid-angular>\r\n  </div>\r\n  </div>","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { DatatableComponent } from \"@swimlane/ngx-datatable\";\nimport { AppSettings } from \"src/app/app.settings\";\nimport { Settings } from \"src/app/app.settings.model\";\nimport { ConfirmationDialog } from \"../../Dialog/confirmation-dialog/confirmation-dialog.component\";\nimport { AppService } from \"src/app/service/app.service\";\nimport { forkJoin, Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from \"@angular/forms\";\nimport { MasterService } from \"../../Master/master.service\";\nimport { MasterSecondService } from \"../../Master/master-second.service\";\nimport { DatePipe, DecimalPipe } from \"@angular/common\";\nimport { ErrorDialog } from \"../../Dialog/confirmation-dialog/error-dialog.component\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { ReportsService } from \"../reports.service\";\nimport { MatSelect } from \"@angular/material/select\";\nimport { MatOption } from \"@angular/material/core\";\n\n@Component({\n  selector: 'app-trade-register',\n  templateUrl: './trade-register.component.html',\n  styleUrls: ['./trade-register.component.scss']\n})\nexport class TradeRegisterComponent implements OnInit {\n  @ViewChild(DatatableComponent) table: DatatableComponent;\n  @ViewChild('selectAccount') selectAccount: MatSelect;\n  @ViewChild('selectSauda') selectSauda: MatSelect;\n  public itemForm: UntypedFormGroup;\n  editing = {};\n  rows = [];\n  temp = [];\n  accountList: any[];\n  filteredAccountList: any[];\n  brokerList: any;\n  filterBrokerList: any[] = [];\n  clientList: any;\n  filterClientList: any[] = [];\n  selected = [];\n  loadingIndicator: boolean = true;\n  reorderable: boolean = true;\n  conTypeList = [{ 'id': 'B', 'name': 'Buy' }, { 'id': 'S', 'name': 'Sell' }]\n  saudaList: any[] = [];\n  filterSaudaList: any[] = [];\n  contractDateVal: any;\n  decimalPipe: any = new DecimalPipe('en-US');\n  exchangeList: any[];\n  conDate: any;\n  exId: any;\n  gridApi: any;\n  saudaIds: any;\n  accountIds: any;\n  fromDt: any;\n  toDt: any;\n\n  public settings: Settings;\n  symbolMappingList: any[] = [];\n  constructor(public snackBar: MatSnackBar, private datePipe: DatePipe, public appSettings: AppSettings, private formBuilder: UntypedFormBuilder, private _reportServices: ReportsService,\n    public dialog: MatDialog, private _appService: AppService, private _masterService: MasterService) {\n    this.settings = this.appSettings.settings;\n  }\n\n  ngOnInit() {\n    this.initialApiCalls();\n  }\n\n  agGridOptions: any = {\n    defaultColDef: {\n      filter: true,\n      sortable: true,\n      wraptext: true,\n      resizable: true,\n      columnSize: \"sizeToFit\",\n    }\n\n  }\n\n  columnDefs = [{\n    headerName: 'Contract Trades',\n    children: [\n      {\n        headerName: '', editable: false, minwidth: 25, width: 25, maxwidth: 25, resizable: false, sortable: false, filter: false, checkboxSelection: true, headerCheckboxSelection: true,\n      },\n      {\n        headerName: 'ConDate', field: 'condate', minwidth: 110, width: 110, maxwidth: 120, suppressSizeToFit: true, cellRenderer: (params) => {\n          return this.datePipe.transform(params.value, 'YYYY-MM-dd')\n        }\n      },\n      { headerName: 'Account', field: 'account',  suppressSizeToFit: true,flex:2 },\n      { headerName: 'Sauda Code', field: 'saudaCode',  suppressSizeToFit: true,flex:2 },\n\n      {\n        headerName: 'B/S', field: 'contype', minwidth: 80, width: 80, maxwidth: 80,cellRenderer: (params) => {\n        return params.value === 'B' ? 'Buy' : (params.value === 'S' ? 'Sell' : params.value);\n        }\n      },\n      {\n          headerName: 'QTY', field: 'qty',  minwidth: 100, width: 100, maxwidth: 100, sorting: true, resizable: true, cellRenderer: (params) => {\n          return this.decimalPipe.transform(params.value, '1.2-2');\n        },type: 'rightAligned'\n      },\n      {\n          headerName: 'Rate', field: 'rate', minwidth: 100, width: 100, maxwidth: 100, type: 'rightAligned', cellRenderer: (params) => {\n          return params.value.toFixed(2);\n        },\n      },\n      {\n          headerName: 'Created Date', field: 'createdDate', minwidth: 110, width: 110, maxwidth: 110, cellRenderer: (params) => {\n          return this.datePipe.transform(params.value, 'YYYY-MM-dd')\n        }\n      },\n      { headerName: 'Trade No', field: 'tradeNo', minwidth: 100, width: 100, maxwidth: 100, suppressSizeToFit: true },\n      { headerName: 'Broker', field: 'brokerName', suppressSizeToFit: true, flex: 1 },\n    ]\n\n  }\n  ];\n\n  initialApiCalls() {\n    forkJoin([this._masterService.getAccount(), this._masterService.getExchangeName()]).pipe(map(response => {\n      this.filteredAccountList = response[0];\n      this.accountList = response[0];\n      this.brokerList = response[0];\n      this.filterBrokerList = response[0];\n      this.exchangeList = response[1];\n    })).subscribe(res => {\n    });\n  }\n\n  onGridDoubleClick(params: any)\n  {\n  }\n\n  onExchangeInputChange(event: any) {\n    this._masterService.getExchangeSaudaListDDL(this.exId).subscribe(res => {\n      this.saudaList = res;\n      this.filterSaudaList = res;\n    });\n  }\n\n  onInputSaudaChange(event: any) {\n    const searchInput = event.target.value.toLowerCase();\n\n    this.filterSaudaList = this.saudaList.filter((data) => {\n      const prov = data.name.toLowerCase();\n      return prov.includes(searchInput);\n    });\n\n    if (searchInput === '') {\n      this.filterSaudaList = [...this.saudaList];\n    }\n  }\n\n  onInputChange(event: any) {\n    const searchInput = event.target.value.toLowerCase();\n\n    this.filteredAccountList = this.accountList.filter((data) => {\n      const prov = data.itemCode.toLowerCase();\n      return prov.includes(searchInput);\n    });\n\n    if (searchInput === '') {\n      this.filteredAccountList = [...this.accountList];\n    }\n  }\n\n  onInputAccountListChange(event: any) {\n    const searchInput = event.target.value.toLowerCase();\n\n    this.filteredAccountList = this.accountList.filter((data) => {\n      const prov = data.name.toLowerCase();\n      return prov.includes(searchInput);\n    });\n  }\n\n  onInputBrokerChange(event: any) {\n    const searchInput = event.target.value.toLowerCase();\n\n    this.filterBrokerList = this.brokerList.filter((data) => {\n      const prov = data.name.toLowerCase();\n      return prov.includes(searchInput);\n    });\n\n    if (searchInput === '') {\n      this.filterBrokerList = [...this.brokerList];\n    }\n  }\n\n  onInputClientChange(event: any) {\n    const searchInput = event.target.value.toLowerCase();\n\n    this.filterClientList = this.clientList.filter((data) => {\n      const prov = data.name.toLowerCase();\n      return prov.includes(searchInput);\n    });\n\n    if (searchInput === '') {\n      this.filterClientList = [...this.clientList];\n    }\n  }\n\n  getTradeFileListData() {\n    var accountIds = this.accountIds.filter((val)=> val != -1);\n    var saudaIds = this.saudaIds.filter((val)=> val != -1);\n    const req = {\n      \"fromDate\": this.datePipe.transform(this.fromDt, 'yyyy-MM-dd'),\n        \"toDate\": this.datePipe.transform(this.toDt, 'yyyy-MM-dd'),\n      \"account\":accountIds.join(','),\n      \"sauda\": saudaIds.join(','),\n    };\n      this._reportServices.getTradeRegister(req).subscribe((results) => {\n        this.symbolMappingList = results.data;\n      });\n  }\n\n  accountAllSelection()\n  {\n    var isAllChecked = this.selectAccount.options.first.selected;\n    this.selectAccount.options.forEach(\n      (item: MatOption) => {\n\n        if (isAllChecked) { item.select(); }\n        else { item.deselect() }\n      }\n\n    );\n\n  }\n\n  saudaAllSelection()\n  {\n    var isAllChecked = this.selectSauda.options.first.selected;\n    this.selectSauda.options.forEach(\n      (item: MatOption) => {\n\n        if (isAllChecked) { item.select(); }\n        else { item.deselect() }\n      }\n\n    );\n\n  }\n\n  public actionCellRenderer(params: any) {\n    let eGui = document.createElement(\"div\");\n    let editingCells = params.api.getEditingCells();\n    let isCurrentRowEditing = editingCells.some((cell: any) => {\n      return cell.rowIndex === params.node.rowIndex;\n    });\n    eGui.innerHTML = `<button class=\"material-icons action-button-edit\" data-action=\"edit\">edit </button>`;\n    return eGui;\n  }\n\n  onGridClick(params: any) {\n    \n  }\n\n  onGridReady(event) { this.gridApi = event.api; }\n\n  deleteContractTrades() {\n    var selectedRecord = this.gridApi.getSelectedRows();\n    if (selectedRecord.length == 0) {\n      const dialogRef = this.dialog.open(ErrorDialog, {\n        data: {\n          message: 'Please select record to delete',\n          buttonText: {\n            ok: 'OK',\n\n          }\n        }\n\n      });\n\n    }\n    else {\n      const idList = selectedRecord.map(record => record.id).join(', ');\n      this._reportServices.deleteContract(idList).subscribe((res) => {\n        this.getTradeFileListData();\n        this.showToaster(res.message, !res.isSuccess);\n      });\n    }\n  }\n\n  showToaster(message, isError = false) {\n    const panelClass = isError ? ['red-text'] : undefined;\n    const label = isError ? \"Error\" : \"Success\";\n    const time = isError? 6000 : 3000;\n  \n    this.snackBar.open(message, label, {\n      duration: time,\n      panelClass: panelClass,\n    });\n  }\n\n  isSaveButtonDisabled() {\n    return this.itemForm.invalid;\n  }\n}\n","<div class=\"row\">\n    <div class=\"mt-2\">\n                <div class=\"tab-party-details-parent\">\n                    <div fxFlex=\"100\" fxFlex.gt-sm=\"15\" fxFlex.sm=\"15\">\n                        <div class=\"dropdown-container\">\n                          <div class=\"dropdown-wrapper\">\n                            <mat-form-field appearance=\"outline\" class=\"calendar\">\n                              <mat-label>From</mat-label>\n                              <input matInput [matDatepicker]=\"picker1\" [(ngModel)]=\"fromDt\">\n                              <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\n                              <mat-datepicker #picker1></mat-datepicker>\n                            </mat-form-field>\n                          </div>\n                        </div>\n                      </div>\n                      <div fxFlex=\"100\" fxFlex.gt-sm=\"15\" fxFlex.sm=\"15\">\n                        <div class=\"dropdown-container\">\n                          <div class=\"dropdown-wrapper\">\n                            <mat-form-field appearance=\"outline\" class=\"calendar\">\n                                <mat-label>To</mat-label>\n                              <input matInput [matDatepicker]=\"picker2\" placeholder=\"To\" [(ngModel)]=\"toDt\">\n                              <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\n                              <mat-datepicker #picker2></mat-datepicker>\n                            </mat-form-field>\n                          </div>\n                        </div>\n                      </div>\n                    <div fxFlex=\"100\" fxFlex.gt-sm=\"15\" fxFlex.sm=\"50\">\n                        <div class=\"dropdown-container\">\n                            <div class=\"dropdown-wrapper\">\n                        <mat-form-field class=\"example-full-width remove-bottom\" appearance=\"outline\">\n                          <mat-label>Exchange </mat-label>\n                          <mat-select placeholder=\"Select Exchange\" [(ngModel)]=\"exId\" (ngModelChange)=\"onExchangeInputChange($event)\">\n                            <mat-option *ngFor=\"let exchange of exchangeList\" [value]=\"exchange.id\">\n                              {{exchange.name}}\n                            </mat-option>\n                          </mat-select>\n                        </mat-form-field>\n                        </div>\n                        </div>\n                      </div>\n                      <div fxFlex=\"100\" fxFlex.gt-sm=\"15\" fxFlex.sm=\"15\">\n                        <div class=\"dropdown-container\">\n                          <div class=\"dropdown-wrapper\">\n                            <mat-form-field class=\"select-slab-mat\" appearance=\"outline\">\n                              <mat-label>Select Account</mat-label>          \n                              <mat-select #selectAccount [(ngModel)]=\"accountIds\" multiple placeholder=\"Select Account\" panelClass=\"custom-select-panel\">\n                                <input class=\"milti-search-box\" #multiUserSearch type=\"text\" autocomplete=\"off\" matInput placeholder=\"Search Account\" (input)=\"onInputAccountListChange($event)\"/>\n                                <mat-option value=-1 (click)=\"accountAllSelection()\">Select All</mat-option>\n                                <mat-option *ngFor=\"let option of filteredAccountList\" [value]=\"option.id\">\n                                  {{ option.name }}\n                                </mat-option>\n                              </mat-select>\n                            </mat-form-field>\n                          </div>\n                        </div>\n                      </div>\n                    <div fxFlex=\"100\" fxFlex.gt-sm=\"15\" fxFlex.sm=\"50\">\n                        <div class=\"dropdown-container\">\n                        <div class=\"dropdown-wrapper\">\n                            <mat-form-field class=\"select-slab-mat\" appearance=\"outline\">\n                              <mat-label>Select Sauda</mat-label>\n                              <mat-select #selectSauda placeholder=\"Select Sauda\" multiple panelClass=\"custom-select-panel\" [(ngModel)]=\"saudaIds\">\n                                <input class=\"milti-search-box\" #multiUserSearch type=\"text\" autocomplete=\"off\" matInput placeholder=\"Search Sauda\" (input)=\"onInputSaudaChange($event)\" />\n                                <mat-option value=-1 (click)=\"saudaAllSelection()\">Select All</mat-option>\n                                <mat-option *ngFor=\"let option of filterSaudaList\" [value]=\"option.id\">\n                                  {{ option.name }}\n                                </mat-option>\n                              </mat-select>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    </div>\n                      <div fxFlex=\"100\" fxFlex.gt-sm=\"13\" space-between fxFlex.sm=\"50\">\n                        <button mat-raised-button color=\"primary\" class=\"uppercase save-btn\" (click)=\"getTradeFileListData()\" type=\"submit\">Search</button> \n                    </div>\n                </div>\n    </div>\n    <div class=\"col-xl-12 mt-2 position-relative\">\n        <span class=\"material-symbols-outlined delete-icon\" (click)=\"deleteContractTrades()\">\n            <mat-icon>delete_sweep</mat-icon>\n          </span>\n        <ag-grid-angular style=\" height: 535px;\"\n                         class=\"ag-theme-material\"\n                           [rowHeight]=\"31\"\n                         [rowData]=\"symbolMappingList\"\n                         [pagination]=\"true\"\n                         [columnDefs]=\"columnDefs\"\n                         [rowMultiSelectWithClick]=\"true\"\n                         [rowSelection]=\"'multiple'\"\n                         (gridReady)=\"onGridReady($event)\"\n                         [defaultColDef]=\"agGridOptions.defaultColDef\"\n                         (cellClicked)=\"onGridClick($event)\"\n                         (cellDoubleClicked)=\"onGridDoubleClick($event)\"\n                         headerHeight=\"34\">\n        </ag-grid-angular>\n      </div>\n  </div>\n","import { Component, OnInit, Inject, ViewChild } from '@angular/core';\r\nimport { AppSettings } from \"src/app/app.settings\";\r\nimport { Settings } from \"src/app/app.settings.model\";\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSelect } from '@angular/material/select';\r\nimport { MatOption } from '@angular/material/core';\r\nimport { AppService } from 'src/app/service/app.service';\r\nimport { ConfirmationDialog } from '../../Dialog/confirmation-dialog/confirmation-dialog.component';\r\nimport { CommonUtility } from 'src/app/shared/common-utility';\r\nimport { forkJoin, map } from 'rxjs';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MasterService } from '../../Master/master.service';\r\nimport { ReportsService } from '../reports.service';\r\n\r\n@Component({\r\n  selector: 'app-trail-balance',\r\n  templateUrl: './trail-balance.component.html',\r\n  styleUrls: ['./trail-balance.component.scss']\r\n})\r\nexport class TrailBalanceComponent implements OnInit {\r\n\r\n  @ViewChild('select') select: MatSelect;\r\n  @ViewChild('selectAccount') selectAccount: MatSelect;\r\n  public settings: Settings;\r\n  slabId: number;\r\n  slabList: any[];\r\n  fromDt: any = new Date();\r\n  toDt: any;\r\n  accountList: any[];\r\n  branchList: any[];\r\n  instrumentList: any[];\r\n  instrumentType: any;\r\n  itemGroupIds: any;\r\n  filteredItemGroup: any;\r\n  itemGroupIdList: any;\r\n\r\n  searchedData: any;\r\n  branchIds: Array<string>;\r\n  accountIds: any[];\r\n  filteredProviders: any[];\r\n  filteredAccountList: any[];\r\n  brokeragesetupList: any = [];\r\n  branchAllSellected: boolean = false;\r\n\r\n  constructor(private datePipe: DatePipe, public snackBar: MatSnackBar, public appSettings: AppSettings, private _appService: AppService, public dialog: MatDialog, private _masterService: MasterService, private _reportsService: ReportsService) {\r\n    this.settings = this.appSettings.settings;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.fetchDropdownData();\r\n    // this.getBrokerageSetupList();\r\n  }\r\n\r\n  calculateTotalDebit(): number {\r\n    // Replace this logic with your actual calculation logic\r\n    let totalDebit = 0;\r\n    for (const item of this.brokeragesetupList) {\r\n        totalDebit += item.drAmt;\r\n    }\r\n    return totalDebit;\r\n  }\r\n  \r\n  calculateTotalCredit(): number {\r\n    // Replace this logic with your actual calculation logic\r\n    let totalCredit = 0;\r\n    for (const item of this.brokeragesetupList) {\r\n        totalCredit += item.crAmt;\r\n    }\r\n    return totalCredit;\r\n  }\r\n\r\n  agGridOptions: any = {\r\n    defaultColDef: {\r\n      filter: true,\r\n       flex:1,\r\n      sortable: true,\r\n      wraptext: true,\r\n      resizable: true,\r\n      minWidth: 100,\r\n    \r\n    },\r\n    suppressRowHoverHighlight: true,\r\n    domLayout: 'autoHeight', \r\n    rowClass: (params) => {\r\n      // Check if the row is a total row (you can use your own criteria)\r\n      if (params.data && (params.data.drShortCode === 'Total Debit' || params.data.crShortCode === 'Total Credit')) {\r\n        return 'total-row'; // Apply the CSS class for total rows\r\n      }\r\n      return ''; // Return an empty string for other rows\r\n    },\r\n    //suppressSizeToFit: true,\r\n    \r\n  }\r\n  onGridReady(event) { }\r\n\r\n  columnDefs = [\r\n    { headerName: 'Code',  field: 'drShortCode', filter: true, sorting: true, resizable: true },\r\n    { headerName: 'Account',  field: 'drName', filter: true, sorting: true, resizable: true },\r\n    { field: 'drAmt',   headerName: 'Debit', filter: true, sorting: true, resizable: true, valueFormatter: this.formatCurrency , cellClass: (params) => {\r\n      return 'red-text';\r\n    }},\r\n    { headerName: 'No.', field: 'drAcId', filter: true, sorting: true, resizable: true},    \r\n    { headerName: 'Code',   field: 'crShortCode', filter: true, sorting: true, resizable: true },\r\n    { headerName: 'Account', field: 'crName',   filter: true, sorting: true, resizable: true },\r\n    { headerName: 'Credit', field: 'crAmt',  filter: true, sorting: true, resizable: true, valueFormatter: this.formatCurrency , cellClass: (params) => {\r\n      return 'green-text';\r\n    } },\r\n    { headerName: 'No.', field: 'crAcId',  filter: true, sorting: true, resizable: true },\r\n    \r\n  ];\r\n\r\n  getBrokerageSetupList() {\r\n    var req = {\r\n      \"branch\": String(this.branchIds),\r\n      \"asOnDate\": this.datePipe.transform(this.fromDt, 'yyyy-MM-dd'),\r\n    };\r\n    this._reportsService.getTrialBalance(req).subscribe((results) => {\r\n      console.log('first', results)\r\n      this.brokeragesetupList = results.data;   \r\n      this.brokeragesetupList.push({\r\n        drShortCode: 'Total Debit',\r\n        drAmt: this.calculateTotalDebit(),\r\n        crShortCode: 'Total Credit',\r\n        crAmt: this.calculateTotalCredit(),\r\n      });    \r\n    });\r\n  }\r\n\r\n  formatCurrency(params) {\r\n    const value = Math.abs(params.value); // Get the absolute value\r\n    const formattedValue = value.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 });\r\n    return params.value < 0 ? `${formattedValue}` : formattedValue;\r\n  }\r\n  \r\n\r\n  \r\n\r\n  showToaster(message, isError = false) {\r\n    const panelClass = isError ? ['red-text'] : undefined;\r\n    const label = isError ? \"Error\" : \"Success\";\r\n    const time = isError? 6000 : 3000;\r\n  \r\n    this.snackBar.open(message, label, {\r\n      duration: time,\r\n      panelClass: panelClass,\r\n    });\r\n  }\r\n\r\n  areRequiredValuesSelected(): boolean {\r\n    return this.fromDt;\r\n  }\r\n\r\n  fetchDropdownData() {\r\n    forkJoin([\r\n      this._masterService.getBranchDDLList(), \r\n    ]).pipe(map(response => {\r\n      this.branchList = response[0];\r\n      this.filteredProviders = response[0];\r\n    })).subscribe(res => {\r\n      \r\n    });\r\n\r\n    \r\n  }\r\n\r\n  onInputChange(event: any) {\r\n    const searchInput = event.target.value.toLowerCase();\r\n\r\n    this.filteredProviders = this.branchList.filter((data) => {\r\n      const prov = data.name.toLowerCase();\r\n      return prov.includes(searchInput);\r\n    });\r\n  }\r\n\r\n  \r\n\r\n  onKey(value) {\r\n    this.branchList = this.search(value);\r\n}\r\n\r\n\r\n  search(value: string) {\r\n  let filter = value.toLowerCase();\r\n  return this.branchList.filter(option => option.toLowerCase().startsWith(filter));\r\n}\r\n\r\n  addBrokerage(event: any) { }\r\n\r\n}\r\n","<div class=\"row trail-balance\">\r\n    <div class=\"mt-2\">\r\n        <div fxFlex=\"100\" fxFlex.gt-sm=\"15\" fxFlex.sm=\"15\">\r\n            <div class=\"dropdown-container\">\r\n              <div class=\"dropdown-wrapper\">\r\n                <mat-form-field appearance=\"outline\" class=\"calendar\">\r\n                  <mat-label>As On Date</mat-label>\r\n                  <input matInput [matDatepicker]=\"picker1\" [(ngModel)]=\"fromDt\">\r\n                  <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\r\n                  <mat-datepicker #picker1></mat-datepicker>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n          </div>\r\n      <div fxFlex=\"100\" fxFlex.gt-sm=\"15\" fxFlex.sm=\"15\">\r\n        <div class=\"dropdown-container\">\r\n          <div class=\"dropdown-wrapper\">\r\n            <mat-form-field class=\"select-slab-mat\" appearance=\"outline\">\r\n              <mat-label>Select Branch</mat-label>\r\n              <mat-select #select  [(ngModel)]=\"branchIds\" placeholder=\"Select Branch\" panelClass=\"custom-select-panel\">\r\n                <input class=\"milti-search-box\" #multiUserSearch type=\"text\" autocomplete=\"off\" matInput placeholder=\"Search Branch\" (input)=\"onInputChange($event)\"/>\r\n                <mat-option *ngFor=\"let option of filteredProviders\" [value]=\"option.id\">\r\n                  {{ option.name }}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div fxFlex=\"100\" fxFlex.gt-sm=\"7\" fxFlex.sm=\"7\">\r\n        <button mat-raised-button color=\"primary\" (click)=\"getBrokerageSetupList()\" [disabled]=\"!areRequiredValuesSelected()\" class=\"search-icon-btn\">\r\n          <mat-icon>search</mat-icon>\r\n        </button>\r\n      </div>\r\n    </div>\r\n      <div class=\"col-xl-12 mt-2\">\r\n        <ag-grid-angular style=\" height: 535px;\"\r\n                         class=\"ag-theme-material\"\r\n                         [rowData]=\"brokeragesetupList\"\r\n                         [pagination]=\"true\"\r\n                         [rowHeight]=\"31\"\r\n                         [columnDefs]=\"columnDefs\"\r\n                         [defaultColDef]=\"agGridOptions.defaultColDef\"\r\n                         (gridReady)=\"onGridReady($event)\"\r\n                          headerHeight=\"34\"\r\n                          domLayout=\"autoHeight\">\r\n        </ag-grid-angular>\r\n      </div>\r\n    </div>  \r\n  "],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}