{"version":3,"file":"src_app_pages_dynamic-menu_dynamic-menu_module_ts.js","mappings":"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","sources":["./src/app/pages/dynamic-menu/dynamic-menu.component.ts","./src/app/pages/dynamic-menu/dynamic-menu.component.html","./src/app/pages/dynamic-menu/dynamic-menu.module.ts","./src/app/pages/dynamic-menu/dynamic-menu.service.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { UntypedFormGroup, UntypedFormBuilder, Validators} from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { debounceTime } from 'rxjs/operators';\r\nimport { Menu } from '../../theme/components/menu/menu.model';\r\nimport { MenuService } from '../../theme/components/menu/menu.service';\r\nimport { DynamicMenuService } from './dynamic-menu.service';\r\nimport { AppSettings } from '../../app.settings';\r\nimport { Settings } from '../../app.settings.model';\r\nimport { VerticalMenuComponent } from '../../theme/components/menu/vertical-menu/vertical-menu.component';\r\nimport { listTransition } from '../../theme/utils/app-animation';\r\n\r\n@Component({\r\n  selector: 'app-dynamic-menu',\r\n  templateUrl: './dynamic-menu.component.html',\r\n  providers: [ DynamicMenuService, MenuService ],\r\n  animations: [ listTransition ],\r\n  host: {\r\n    '[@listTransition]': ''\r\n  }\r\n})\r\nexport class DynamicMenuComponent implements OnInit {\r\n  public settings: Settings;\r\n  public menuItems:Array<Menu>;\r\n  public icons = ['home','person', 'card_travel', 'delete', 'event', 'favorite', 'help' ]\r\n  public form:UntypedFormGroup;\r\n  constructor(public appSettings:AppSettings, \r\n              public formBuilder: UntypedFormBuilder, \r\n              public snackBar: MatSnackBar,\r\n              private menuService:MenuService,\r\n              private dynamicMenuService:DynamicMenuService) {\r\n    this.settings = this.appSettings.settings; \r\n    this.menuItems = this.menuService.getVerticalMenuItems();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group({\r\n      'title': ['', Validators.compose([Validators.required, Validators.minLength(3)])],\r\n      'icon': null,\r\n      'routerLink': ['', Validators.required],    \r\n      'href': ['', Validators.required],            \r\n      'target': null,\r\n      'hasSubMenu': false,\r\n      'parentId': 0\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.form.valueChanges.pipe(debounceTime(500)).subscribe((menu:Menu) => {  \r\n      if(menu.routerLink && menu.routerLink != ''){\r\n        this.form.controls['href'].setValue(null);\r\n        this.form.controls['href'].disable();\r\n        this.form.controls['href'].clearValidators();\r\n        this.form.controls['target'].setValue(null);\r\n        this.form.controls['target'].disable();\r\n      }\r\n      else{\r\n        this.form.controls['href'].enable();\r\n        this.form.controls['href'].setValidators([Validators.required]);\r\n        this.form.controls['target'].enable();\r\n      }\r\n      this.form.controls['href'].updateValueAndValidity();\r\n\r\n      if(menu.href && menu.href != ''){\r\n        this.form.controls['routerLink'].setValue(null);\r\n        this.form.controls['routerLink'].disable();\r\n        this.form.controls['routerLink'].clearValidators();\r\n        this.form.controls['hasSubMenu'].setValue(false);\r\n        this.form.controls['hasSubMenu'].disable();\r\n      }\r\n      else{\r\n        this.form.controls['routerLink'].enable();\r\n        this.form.controls['routerLink'].setValidators([Validators.required]);\r\n        this.form.controls['hasSubMenu'].enable();\r\n      }\r\n      this.form.controls['routerLink'].updateValueAndValidity();\r\n    })\r\n  }\r\n\r\n  onSubmit(menu:Menu):void {\r\n    if (this.form.valid) {\r\n      this.dynamicMenuService.addNewMenuItem(VerticalMenuComponent, this.menuItems, menu);\r\n      this.snackBar.open('New menu item added successfully!', null, {\r\n        duration: 2000,\r\n      });\r\n      this.form.reset({\r\n        hasSubMenu:false,\r\n        parentId:0\r\n      });     \r\n    }\r\n  } \r\n\r\n}","<div fxLayout=\"row wrap\" fxLayoutAlign=\"center\">\r\n    <div fxFlex=\"100\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"60\" class=\"flex-p\">\r\n        <mat-card class=\"list\">\r\n            <mat-card-content>\r\n                <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit(form.value)\">      \r\n                    <mat-form-field class=\"w-100\">\r\n                        <input matInput placeholder=\"Title\" formControlName=\"title\">\r\n                        <mat-error *ngIf=\"form.controls.title.errors?.required\">Menu title is required</mat-error>\r\n                        <mat-error *ngIf=\"form.controls.title.hasError('minlength')\">Menu title isn't long enough, minimum of 3 characters</mat-error>\r\n                    </mat-form-field> \r\n                    <mat-form-field class=\"w-100\">\r\n                        <mat-select placeholder=\"Icon\" formControlName=\"icon\">\r\n                            <mat-option *ngFor=\"let icon of icons\" [value]=\"icon\">\r\n                                <mat-icon>{{ icon }}</mat-icon>\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                    <mat-form-field class=\"w-100\" >\r\n                        <input matInput placeholder=\"RouterLink\" formControlName=\"routerLink\" matTooltip=\"e.g. /dashboard\" matTooltipPosition=\"after\">\r\n                        <mat-error *ngIf=\"form.controls.routerLink.errors?.required\">Routerlink or href is required</mat-error>\r\n                    </mat-form-field>\r\n                    <mat-checkbox formControlName=\"hasSubMenu\">Has sub menu</mat-checkbox>\r\n                    <mat-form-field class=\"w-100\" >\r\n                        <input matInput placeholder=\"Href\" formControlName=\"href\" matTooltip=\"e.g. http://themeseason.com\" matTooltipPosition=\"after\">\r\n                        <mat-error *ngIf=\"form.controls.href.errors?.required\">Href or routerlink is required</mat-error>\r\n                    </mat-form-field>\r\n                    <mat-radio-group formControlName=\"target\">\r\n                        <mat-radio-button value=\"_blank\">_blank</mat-radio-button>\r\n                        <mat-radio-button value=\"_self\" class=\"mx-1\">_self</mat-radio-button>\r\n                    </mat-radio-group>\r\n                    <mat-form-field class=\"w-100\">\r\n                        <mat-select placeholder=\"Parent menu\" formControlName=\"parentId\">\r\n                            <mat-option value=\"0\">-- Select Parent Menu --</mat-option>\r\n                            <mat-option *ngFor=\"let menuItem of menuItems\" [value]=\"menuItem.id\">\r\n                                {{menuItem.title}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                    <div fxLayout=\"row\" fxLayoutAlign=\"center\">\r\n                        <button mat-raised-button color=\"primary\" [disabled]=\"!form.valid\" type=\"submit\">Add New Menu Item</button>\r\n                    </div>\r\n                </form>\r\n            </mat-card-content>\r\n        </mat-card>\r\n      </div> \r\n</div> ","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { DynamicMenuComponent } from './dynamic-menu.component';\r\n\r\nexport const routes: Routes = [\r\n  { path: '', component: DynamicMenuComponent, pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule, \r\n    ReactiveFormsModule,\r\n    RouterModule.forChild(routes),\r\n    SharedModule\r\n  ],\r\n  declarations: [\r\n    DynamicMenuComponent\r\n  ]\r\n})\r\nexport class DynamicMenuModule { }","import { Injectable, Injector, ComponentFactoryResolver, ApplicationRef, EmbeddedViewRef } from '@angular/core';\r\nimport { VerticalMenuComponent } from '../../theme/components/menu/vertical-menu/vertical-menu.component';\r\nimport { Menu } from '../../theme/components/menu/menu.model';\r\n\r\n@Injectable()\r\nexport class DynamicMenuService {\r\n\r\n    constructor(private componentFactoryResolver: ComponentFactoryResolver,\r\n                private applicationRef: ApplicationRef,\r\n                private injector: Injector) { }     \r\n    \r\n    addNewMenuItem(component: any, menuItems:Array<Menu>, menuItem) {\r\n\r\n        const lastId = menuItems[menuItems.length-1].id;\r\n        const newMenuItem = new Menu(lastId+1, menuItem['title'], menuItem['routerLink'], menuItem['href'], menuItem['icon'], menuItem['target'], menuItem['hasSubMenu'], parseInt(menuItem['parentId']));\r\n                \r\n        menuItems.push(newMenuItem);\r\n        let item = menuItems.filter(item=>item.id == newMenuItem.parentId)[0];\r\n        if(item) item.hasSubMenu = true;  \r\n\r\n        const componentRef = this.componentFactoryResolver\r\n            .resolveComponentFactory(component)\r\n            .create(this.injector);        \r\n        \r\n        this.applicationRef.attachView(componentRef.hostView);\r\n        \r\n        let instance = <VerticalMenuComponent>componentRef.instance;\r\n        instance.menuItems = menuItems;\r\n        instance.menuParentId = 0;\r\n\r\n        const elem = (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\r\n                \r\n        const verticalMenu = document.getElementById('vertical-menu');        \r\n        verticalMenu.replaceChild(elem, verticalMenu.children[0]);  \r\n        \r\n    } \r\n}"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}