{"version":3,"file":"src_app_Forms_Master_master_module_ts.js","mappings":"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","sources":["./src/app/Forms/Dialog/confirmation-dialog/confirmation-account-dialog.component.ts","./src/app/Forms/Dialog/confirmation-dialog/confirmation-account-dialog.component.html","./src/app/Forms/Master/account-head/account-head.component.ts","./src/app/Forms/Master/account-head/account-head.component.html","./src/app/Forms/Master/account-head/add-account-head/add-account-head.component.ts","./src/app/Forms/Master/account-head/add-account-head/add-account-head.component.html","./src/app/Forms/Master/account/account-dialog/add-account.component.ts","./src/app/Forms/Master/account/account-dialog/add-account.component.html","./src/app/Forms/Master/account/account-dialog/add-intereset/add-intereset.component.ts","./src/app/Forms/Master/account/account-dialog/add-intereset/add-intereset.component.html","./src/app/Forms/Master/account/account-dialog/brokerage-tab/brokerage-tab.component.ts","./src/app/Forms/Master/account/account-dialog/brokerage-tab/brokerage-tab.component.html","./src/app/Forms/Master/account/account-dialog/file-code-tab/file-code-tab.component.ts","./src/app/Forms/Master/account/account-dialog/file-code-tab/file-code-tab.component.html","./src/app/Forms/Master/account/account-dialog/self-share-tab/self-share-tab.component.ts","./src/app/Forms/Master/account/account-dialog/self-share-tab/self-share-tab.component.html","./src/app/Forms/Master/account/account.component.ts","./src/app/Forms/Master/account/account.component.html","./src/app/Forms/Master/account/account.model.ts","./src/app/Forms/Master/branch/add-branch-account/add-branch-account.component.ts","./src/app/Forms/Master/branch/add-branch-account/add-branch-account.component.html","./src/app/Forms/Master/branch/branch.component.ts","./src/app/Forms/Master/branch/branch.component.html","./src/app/Forms/Master/brokerage-setup/add-setup-details/add-setup-details.component.ts","./src/app/Forms/Master/brokerage-setup/add-setup-details/add-setup-details.component.html","./src/app/Forms/Master/brokerage-setup/brokerage-setup.component.ts","./src/app/Forms/Master/brokerage-setup/brokerage-setup.component.html","./src/app/Forms/Master/brokerage-setup/lock-brokerage/lock-brokerage.component.ts","./src/app/Forms/Master/brokerage-setup/lock-brokerage/lock-brokerage.component.html","./src/app/Forms/Master/brokerage-setup/view-item-group/view-item-group.component.ts","./src/app/Forms/Master/brokerage-setup/view-item-group/view-item-group.component.html","./src/app/Forms/Master/brokerage-slab/add-slab-details/add-slab-details.component.ts","./src/app/Forms/Master/brokerage-slab/add-slab-details/add-slab-details.component.html","./src/app/Forms/Master/brokerage-slab/add-slab/add-slab.component.ts","./src/app/Forms/Master/brokerage-slab/add-slab/add-slab.component.html","./src/app/Forms/Master/brokerage-slab/brokerage-slab.component.ts","./src/app/Forms/Master/brokerage-slab/brokerage-slab.component.html","./src/app/Forms/Master/company/company-dialog/add-company.component.ts","./src/app/Forms/Master/company/company-dialog/add-company.component.html","./src/app/Forms/Master/company/company.component.ts","./src/app/Forms/Master/company/company.component.html","./src/app/Forms/Master/contract-master/contract-master-dialog/add-contract-master.component.ts","./src/app/Forms/Master/contract-master/contract-master-dialog/add-contract-master.component.html","./src/app/Forms/Master/contract-master/contract-master.component.ts","./src/app/Forms/Master/contract-master/contract-master.component.html","./src/app/Forms/Master/interest-master/add-interest-master/add-interest-master.component.ts","./src/app/Forms/Master/interest-master/add-interest-master/add-interest-master.component.html","./src/app/Forms/Master/interest-master/interest-master.component.ts","./src/app/Forms/Master/interest-master/interest-master.component.html","./src/app/Forms/Master/item-group/add-item-group/add-item-group.component.ts","./src/app/Forms/Master/item-group/add-item-group/add-item-group.component.html","./src/app/Forms/Master/item-group/item-group.component.ts","./src/app/Forms/Master/item-group/item-group.component.html","./src/app/Forms/Master/item/contract-dialog/contract-dialog.component.ts","./src/app/Forms/Master/item/contract-dialog/contract-dialog.component.html","./src/app/Forms/Master/item/item-dialog/add-item.component.ts","./src/app/Forms/Master/item/item-dialog/add-item.component.html","./src/app/Forms/Master/item/item.component.ts","./src/app/Forms/Master/item/item.component.html","./src/app/Forms/Master/master.module.ts","./src/app/Forms/Master/product/product-dialog/add-product.component.ts","./src/app/Forms/Master/product/product-dialog/add-product.component.html","./src/app/Forms/Master/product/product.component.ts","./src/app/Forms/Master/product/product.component.html","./src/app/Forms/Master/sauda/sauda-dialog/add-sauda.component.ts","./src/app/Forms/Master/sauda/sauda-dialog/add-sauda.component.html","./src/app/Forms/Master/sauda/sauda.component.ts","./src/app/Forms/Master/sauda/sauda.component.html","./src/app/Forms/Master/sharing-setup/add-sharing-setup/add-sharing-setup.component.ts","./src/app/Forms/Master/sharing-setup/add-sharing-setup/add-sharing-setup.component.html","./src/app/Forms/Master/sharing-setup/lock-sharing-setup/lock-sharing-setup.component.ts","./src/app/Forms/Master/sharing-setup/lock-sharing-setup/lock-sharing-setup.component.html","./src/app/Forms/Master/sharing-setup/sharing-setup.component.ts","./src/app/Forms/Master/sharing-setup/sharing-setup.component.html","./src/app/Forms/Master/sub-brokerage-setup/sub-add-setup-details/sub-add-setup-details.component.ts","./src/app/Forms/Master/sub-brokerage-setup/sub-add-setup-details/sub-add-setup-details.component.html","./src/app/Forms/Master/sub-brokerage-setup/sub-brokerage-setup.component.ts","./src/app/Forms/Master/sub-brokerage-setup/sub-brokerage-setup.component.html","./src/app/Forms/Master/sub-brokerage-setup/sub-lock-brokerage/sub-lock-brokerage.component.ts","./src/app/Forms/Master/sub-brokerage-setup/sub-lock-brokerage/sub-lock-brokerage.component.html","./src/app/Forms/Master/symbol-mapping/symbol-mapping.component.ts","./src/app/Forms/Master/symbol-mapping/symbol-mapping.component.html","./src/app/Forms/Master/tax-master/tax-dialog/add-tax-master.component.ts","./src/app/Forms/Master/tax-master/tax-dialog/add-tax-master.component.html","./src/app/Forms/Master/tax-master/tax-master.component.ts","./src/app/Forms/Master/tax-master/tax-master.component.html","./src/app/Forms/Master/trade-file/trade-file.component.ts","./src/app/Forms/Master/trade-file/trade-file.component.html","./src/app/Forms/Master/transporter/transporter-dialog/add-transporter.component.ts","./src/app/Forms/Master/transporter/transporter-dialog/add-transporter.component.html","./src/app/Forms/Master/transporter/transporter.component.ts","./src/app/Forms/Master/transporter/transporter.component.html","./src/app/Forms/Master/transporter/transporter.model.ts"],"sourcesContent":["import { Component, Inject, EventEmitter, Output } from \"@angular/core\";\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from \"@angular/material/dialog\";\r\n\r\n\r\n@Component({\r\n    selector: 'confirmation-account-dialog',\r\n    templateUrl: 'confirmation-account-dialog.component.html',\r\n})\r\n\r\nexport class ConfirmationAccountDialog {\r\n    message: string = \"Are you sure?\"\r\n    content: any\r\n    confirmButtonText = \"Yes\"\r\n    cancelButtonText = \"Cancel\"\r\n    checked: boolean = false\r\n    MTM: boolean = false\r\n    @Output() submitClicked = new EventEmitter<{checked: boolean, MTM: boolean}>();\r\n\r\n  // Other component code  \r\n    constructor(\r\n      @Inject(MAT_DIALOG_DATA) private data: any,\r\n      private dialogRef: MatDialogRef<ConfirmationAccountDialog>) {\r\n      if (data) {        \r\n        this.message = data.message || this.message;\r\n        if (data.buttonText) {\r\n          this.confirmButtonText = data.buttonText.ok || this.confirmButtonText;\r\n          this.cancelButtonText = data.buttonText.cancel || this.cancelButtonText;\r\n        }\r\n      }\r\n    }\r\n\r\n    onConfirmClick() {\r\n      this.dialogRef.close(true);\r\n      this.submitClicked.emit({checked: this.checked, MTM: this.MTM});\r\n    }  \r\n}","<div class=\"error-message\">\r\n    <h1><mat-icon>check_circle_outline</mat-icon> Confirmation</h1>\r\n    <div class=\"content\">\r\n      <mat-dialog-content>\r\n        <p class=\"mb-10\">\r\n          {{message}}\r\n        </p>\r\n        <mat-checkbox class=\"pl-10\" [(ngModel)]=\"checked\">Show In Report</mat-checkbox>\r\n        <mat-checkbox class=\"pl-10 ml-15\" [(ngModel)]=\"MTM\">In Party MTM</mat-checkbox>\r\n      </mat-dialog-content>      \r\n      <mat-dialog-actions align=\"center\">\r\n        <button mat-raised-button color=\"primary\" (click)=\"onConfirmClick()\" tabindex=\"1\">{{confirmButtonText}}</button>\r\n        <button mat-raised-button color=\"warn\" mat-dialog-close tabindex=\"-1\">{{cancelButtonText}}</button>\r\n      </mat-dialog-actions>\r\n    </div>\r\n</div>\r\n  ","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\r\nimport { AppSettings } from 'src/app/app.settings';\r\nimport { MasterService } from '../master.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Settings } from 'src/app/app.settings.model';\r\nimport { AddAccountHeadComponent } from './add-account-head/add-account-head.component';\r\nimport { ConfirmationDialog } from '../../Dialog/confirmation-dialog/confirmation-dialog.component';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n    selector: 'app-branch',\r\n    templateUrl: './account-head.component.html',\r\n    styleUrls: ['./account-head.component.scss']\r\n})\r\n\r\nexport class AccountHeadComponent implements OnInit {\r\n\r\n    @ViewChild(DatatableComponent) table: DatatableComponent;\r\n    accountHeadList: any;\r\n    public settings: Settings;\r\n    agGridOptions: any = {\r\n      defaultColDef: {\r\n        filter: true,\r\n         flex:1,\r\n        sortable: true,\r\n        wraptext: true,\r\n        resizable: true,\r\n        minWidth: 100,\r\n      \r\n      },\r\n      suppressRowHoverHighlight: true,\r\n    }\r\n    \r\n    columnDefs = [\r\n        {\r\n          headerName: 'Action', field: 'fileIcon', cellRenderer: this.actionCellRenderer, resizable: true, filter: false\r\n        },\r\n        { headerName: 'Name',  field: 'name', filter: true, sorting: true, resizable: true },\r\n    ];\r\n\r\n    constructor(public snackBar: MatSnackBar, public appSettings: AppSettings, private _masterService: MasterService, public dialog: MatDialog) {\r\n      this.settings = this.appSettings.settings;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n      this.getAccountHeadList();\r\n    }\r\n\r\n    getAccountHeadList() {\r\n      this._masterService.getAccountHead().subscribe((results) => {\r\n        this.accountHeadList = results;\r\n      });\r\n    }\r\n\r\n    public actionCellRenderer(params: any) {\r\n        let eGui = document.createElement(\"div\");\r\n        let editingCells = params.api.getEditingCells();\r\n        let isCurrentRowEditing = editingCells.some((cell: any) => {\r\n          return cell.rowIndex === params.node.rowIndex;\r\n        });\r\n        eGui.innerHTML = `<button class=\"material-icons action-button-edit\" data-action=\"edit\">edit</button>\r\n                          <button class=\"material-icons action-button-red\" delete data-action=\"delete\">delete</button>`;    \r\n        return eGui;\r\n    }\r\n\r\n    public openAccountHeadDialog(selectedAccountHeadId) {\r\n      let dialogRef = this.dialog.open(AddAccountHeadComponent, {\r\n          data: { \r\n            branchID: selectedAccountHeadId,\r\n          }\r\n      });\r\n    \r\n      dialogRef.afterClosed().subscribe(user => {\r\n        this.getAccountHeadList();\r\n      });\r\n    }\r\n    onGridReady(event) { }    \r\n\r\n    onGridClick(params: any) {\r\n      if (params.event.target.dataset.action == \"edit\")\r\n      {\r\n        this.openAccountHeadDialog(params.data.id);\r\n    \r\n      }\r\n      if (params.event.target.dataset.action == \"delete\")\r\n      {\r\n        const dialogRef = this.dialog.open(ConfirmationDialog, {\r\n          data: {\r\n            message: 'Do you really want to delete this record?',\r\n            buttonText: {\r\n              ok: 'Yes',\r\n              cancel: 'No'\r\n            }\r\n          }\r\n        });\r\n    \r\n        dialogRef.afterClosed().subscribe((confirmed: boolean) => {\r\n          if (confirmed) {\r\n            this._masterService.deleteAcHead(params.data.id).subscribe((res) => {\r\n              this.getAccountHeadList();\r\n              this.showToaster(res.message, !res.isSuccess)\r\n            });\r\n          }\r\n        });\r\n    \r\n    \r\n      }\r\n    }\r\n\r\n    showToaster(message, isError = false) {\r\n      const panelClass = isError ? ['red-text'] : undefined;\r\n      const label = isError ? \"Error\" : \"Success\";\r\n      const time = isError? 6000 : 3000;\r\n    \r\n      this.snackBar.open(message, label, {\r\n        duration: time,\r\n        panelClass: panelClass,\r\n      });\r\n    }\r\n}","<div class=\"row\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between end\" class=\"mt-2\">\r\n        <div class=\"dropdown-container\">\r\n            <div class=\"dropdown-wrapper\"></div>\r\n        </div>\r\n        <button mat-raised-button color=\"accent\" (click)=\"openAccountHeadDialog(null)\" class=\"icon-btn ml-15\">\r\n            <mat-icon>add</mat-icon> Add Account Head\r\n        </button>\r\n    </div>\r\n    <div class=\"col-xl-12 mt-2\">\r\n        <ag-grid-angular style=\" height: 535px;\"\r\n                         class=\"ag-theme-material\"\r\n                         [rowData]=\"accountHeadList\"\r\n                         [pagination]=\"true\"\r\n                         [rowHeight]=\"31\"\r\n                         [columnDefs]=\"columnDefs\"\r\n                         [defaultColDef]=\"agGridOptions.defaultColDef\"\r\n                         (cellClicked)=\"onGridClick($event)\"\r\n                         (gridReady)=\"onGridReady($event)\"\r\n                          headerHeight=\"34\">\r\n        </ag-grid-angular>\r\n    </div>\r\n</div> ","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MasterService } from '../../master.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n    selector: 'app-add-account-head',\r\n    templateUrl: './add-account-head.component.html',\r\n    styleUrls: ['./add-account-head.component.scss']\r\n})\r\n\r\nexport class AddAccountHeadComponent implements OnInit {\r\n\r\n    accountList: any[] = [];  \r\n    public nameForm: UntypedFormGroup;\r\n    selectedAccountHeadID: any = 0;\r\n    gridApi: any;\r\n    gridApiSelectAc: any;    \r\n    AcHeadAccountList: any[] = [];\r\n    selectedAcHeadID: any;\r\n    agGridOptions: any = {\r\n        suppressRowHoverHighlight: true,\r\n    }\r\n    isRowSelected: boolean = false;\r\n\r\n    columnDefsSelectAc = [{\r\n      headerName: 'Select account',\r\n      children: [\r\n  \r\n        {\r\n          headerName: '', editable: false, width: 5, minwidth: 5, maxwidth: 5, resizable: false, checkboxSelection: true, headerCheckboxSelection: true,\r\n        },\r\n        //{\r\n        //  headerName: 'Action', field: 'fileIcon', cellRenderer: this.actionCellRenderer, resizable: true\r\n        //},\r\n        { headerName: 'Name', field: 'name', filter: true, sorting: true, resizable: true, flex: 1 },\r\n      ]\r\n    }];\r\n\r\n    columnDefs = [{\r\n      headerName: 'Added account list',\r\n      children: [\r\n  \r\n        {\r\n          headerName: '', editable: false,width:5, minwidth: 5, maxwidth: 5, resizable: false, checkboxSelection: true, headerCheckboxSelection: true,\r\n        },\r\n        //{\r\n        //  headerName: 'Action', field: 'fileIcon', cellRenderer: this.actionCellRenderer, resizable: true\r\n        //},\r\n        { headerName: 'Account', field: 'name', filter: true, sorting: true, resizable: true, flex: 1 },\r\n      ]\r\n    }];\r\n\r\n    constructor(public snackBar: MatSnackBar, private formBuilder: UntypedFormBuilder, public dialog: MatDialog,  @Inject(MAT_DIALOG_DATA) public data: any, private _masterService: MasterService, public dialogRef: MatDialogRef<AddAccountHeadComponent>) { \r\n      this.selectedAccountHeadID = data.branchID;\r\n      console.log(data);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n      this.bindFormControls();\r\n      this.getAccounts();\r\n      this.getAcHeadAccountList()\r\n      this.getApiData()\r\n    }\r\n\r\n    public actionCellRenderer(params: any) {\r\n      let eGui = document.createElement(\"div\");\r\n      let editingCells = params.api.getEditingCells();\r\n      let isCurrentRowEditing = editingCells.some((cell: any) => {\r\n        return cell.rowIndex === params.node.rowIndex;\r\n      });\r\n      eGui.innerHTML = `<button class=\"material-icons action-button-red\" delete data-action=\"delete\">delete</button>`;\r\n  \r\n      return eGui;\r\n    }\r\n\r\n    onGridReady(event) { this.gridApi = event.api; }\r\n\r\n    onGridReadySelectAc(event) { this.gridApiSelectAc = event.api; }\r\n\r\n    getAcHeadAccountList() {\r\n        this._masterService.getAccountsAddedinAcHead(this.selectedAccountHeadID).subscribe((res) => {\r\n        this.AcHeadAccountList = res;\r\n      });\r\n    }\r\n\r\n    getAccounts() {\r\n      this._masterService.getAccountsForBranch(this.selectedAccountHeadID).subscribe((res) => {\r\n        this.accountList = res;\r\n      });\r\n    }\r\n\r\n    getApiData() {\r\n      if (this.selectedAccountHeadID) {\r\n        this._masterService.getAcHeadId(this.selectedAccountHeadID).subscribe((res) => {\r\n          this.nameForm.patchValue({\r\n            name: res.name\r\n          });\r\n        });\r\n        this.getAcHeadAccountList();\r\n      }\r\n      //this._masterService.getAccountsForBranch(this.selectedBranchID).subscribe((response) => {\r\n      //  this.accountList = response;\r\n      //  this.filteredAccountList = response;\r\n      //});\r\n    }\r\n\r\n    checkSelectedRowSelectAc(event: any) {\r\n      var selectedRow = this.gridApiSelectAc.getSelectedRows();\r\n      if (selectedRow.length > 0) { this.isRowSelected = true; }\r\n      else { this.isRowSelected = false; }\r\n    }\r\n  \r\n    checkSelectedRow(event: any) {\r\n      var selectedRow = this.gridApi.getSelectedRows();\r\n      if (selectedRow.length > 0) { this.isRowSelected = true; }\r\n      else { this.isRowSelected = false; }\r\n    }\r\n\r\n    selectAccounts() {\r\n      var selectAccount = this.gridApiSelectAc.getSelectedRows();\r\n      const body = {\r\n        dropDownVMs: selectAccount,\r\n        AcHeadId: this.selectedAccountHeadID        \r\n      };\r\n\r\n      this._masterService.addAcHead(body).subscribe(result => {\r\n        this.getAcHeadAccountList();\r\n      });\r\n    }   \r\n    \r\n    removeAccounts() {\r\n      var selectAccount = this.gridApi.getSelectedRows();\r\n      const body = {\r\n        dropDownVMs: selectAccount,\r\n        AcHeadId: this.selectedAccountHeadID  \r\n      };\r\n  \r\n      this._masterService.deleteAcHeadAccount(body).subscribe(result => {\r\n        if(result.isSuccess){\r\n          this.showToaster(result.message);\r\n        } else {\r\n          this.showToaster(result.message, true);\r\n        }\r\n        /* this.selectedBranchID = result.id;*/\r\n        this.getAcHeadAccountList();\r\n      });   \r\n    }\r\n\r\n    showToaster(message, isError = false) {\r\n      const panelClass = isError ? ['red-text'] : undefined;\r\n      const label = isError ? \"Error\" : \"Success\";\r\n      const time = isError? 6000 : 3000;\r\n    \r\n      this.snackBar.open(message, label, {\r\n        duration: time,\r\n        panelClass: panelClass,\r\n      });\r\n    }\r\n\r\n    bindFormControls() {\r\n        this.nameForm = this.formBuilder.group({\r\n          'name': ['', Validators.required],\r\n          //'id': [this.selectedAccountHeadID, Validators.required]\r\n        });\r\n    }          \r\n\r\n    public onSubmit(values: Object): void {\r\n        var h = this.gridApi.getSelectedRows();\r\n        var body = this.nameForm.value;\r\n        if (this.nameForm.valid) {\r\n          body.id = this.selectedAccountHeadID;\r\n          this._masterService.saveAccountHead(body).subscribe(result => {\r\n            if(result.isSuccess){\r\n            this.dialogRef.close();\r\n            } else {\r\n              this.showToaster(result.message, true);\r\n            }\r\n          }, err => {\r\n            console.log(err);\r\n          });\r\n        }\r\n    }\r\n\r\n    close(): void {\r\n        this.dialogRef.close();\r\n    }\r\n}","<h2 class=\"heading mb-10\">Account Head</h2>\r\n<a (click)=\"close()\" class=\"close-btn\">\r\n    <span class=\"material-symbols-outlined\">\r\n      <mat-icon>close</mat-icon>\r\n    </span>\r\n</a>\r\n<mat-tab-group>\r\n  <mat-tab label=\"Account\">\r\n    <form [formGroup]=\"nameForm\" (ngSubmit)=\"onSubmit(nameForm.value)\" fxLayout=\"row wrap\" class=\"user-form\">\r\n      <div class=\"tab-party-details-parent\">\r\n        <div class=\"white-block pb-0\">\r\n          <h3><span>Account</span></h3>\r\n          <div fxFlex=\"100\">\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label>Name</mat-label>\r\n              <input matInput autocomplete=\"off\" placeholder=\"Name\" formControlName=\"name\" type=\"text\">\r\n              <mat-error *ngIf=\"nameForm.controls.name.errors?.required\">Name is required</mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>  \r\n        <div fxFlex=\"100\" class=\"mt-2 text-center space-between-btns\">\r\n          <button mat-raised-button color=\"warn\" type=\"button\" (click)=\"close()\">Cancel</button>\r\n          <button mat-raised-button color=\"primary\" class=\"uppercase\" [disabled]=\"!nameForm.valid\" type=\"submit\">Save</button>\r\n        </div>        \r\n      </div>\r\n    </form>\r\n  </mat-tab>\r\n  <mat-tab label=\"Account Head\">\r\n    <div class=\"row account-head\">\r\n      <div fxFlex=\"40\">        \r\n        <ag-grid-angular style=\" height: 300px;\"\r\n                          class=\"ag-theme-material mt-2\"\r\n                          [rowData]=\"accountList\"\r\n                          [pagination]=\"true\"\r\n                          [rowHeight]=\"31\"\r\n                          [columnDefs]=\"columnDefsSelectAc\"\r\n                          [rowSelection]=\"'multiple'\"\r\n                          [rowMultiSelectWithClick]=\"true\"\r\n                          [defaultColDef]=\"agGridOptions.defaultColDef\"                          \r\n                          (gridReady)=\"onGridReadySelectAc($event)\"\r\n                          (selectionChanged)=\"checkSelectedRowSelectAc($event)\"\r\n                          headerHeight=\"34\">\r\n        </ag-grid-angular>\r\n      </div>\r\n      <div fxFlex=\"15\" class=\"text-center\">\r\n        <div class=\"pt-10 mb-10\">\r\n          <button mat-raised-button (click)=\"selectAccounts()\" color=\"primary\" type=\"button\">\r\n            <mat-icon>\r\n              <span class=\"material-symbols-outlined\">\r\n                arrow_forward_ios\r\n              </span>\r\n            </mat-icon>\r\n          </button>\r\n        </div>\r\n        <button mat-raised-button color=\"warn\" (click)=\"removeAccounts()\" type=\"button\">\r\n          <mat-icon>\r\n            <span class=\"material-symbols-outlined\">\r\n              arrow_back_ios\r\n            </span>\r\n          </mat-icon>\r\n        </button>\r\n      </div>\r\n      <div fxFlex=\"45\">\r\n        <ag-grid-angular style=\" height: 300px;\"\r\n                         class=\"ag-theme-material mt-2\"\r\n                         [rowData]=\"AcHeadAccountList\"\r\n                         [pagination]=\"true\"\r\n                         [rowHeight]=\"31\"\r\n                         [columnDefs]=\"columnDefs\"\r\n                         [rowSelection]=\"'multiple'\"\r\n                         [rowMultiSelectWithClick]=\"true\"\r\n                         [defaultColDef]=\"agGridOptions.defaultColDef\"\r\n                         (gridReady)=\"onGridReady($event)\"\r\n                         (selectionChanged)=\"checkSelectedRow($event)\"\r\n                         headerHeight=\"34\">\r\n        </ag-grid-angular>\r\n      </div>\r\n    </div>\r\n  </mat-tab>\r\n</mat-tab-group>","import { formatDate } from '@angular/common';\r\nimport { Component, OnInit, Inject, AfterViewInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { UntypedFormGroup, UntypedFormControl, UntypedFormBuilder, Validators, FormControl, FormGroup } from '@angular/forms';\r\nimport { MatAutocompleteTrigger } from '@angular/material/autocomplete';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { forkJoin, Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { AppService } from '../../../../service/app.service';\r\nimport { CommonUtility } from '../../../../shared/common-utility';\r\nimport { ConfirmationDialog } from '../../../Dialog/confirmation-dialog/confirmation-dialog.component';\r\nimport { ErrorDialog } from '../../../Dialog/confirmation-dialog/error-dialog.component';\r\nimport { MasterService } from '../../master.service';\r\nimport { Account } from '../account.model';\r\nimport { MasterSecondService } from '../../master-second.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatTabChangeEvent } from '@angular/material/tabs';\r\n\r\nexport interface State {\r\n  id: number;\r\n  name: string;\r\n}\r\n\r\nexport interface City {\r\n  id: number;\r\n  name: string;\r\n}\r\n\r\nexport interface ACGroup {\r\n  id: number;\r\n  name: string;\r\n  parentId: number;\r\n}\r\n\r\nexport interface ACHead {\r\n  id: number;\r\n  name: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-account-dialog',\r\n  templateUrl: './add-account.component.html',\r\n  styleUrls: ['./add-account.component.scss']\r\n})\r\nexport class AddAccountComponent implements OnInit, AfterViewInit {\r\n  public personalForm: UntypedFormGroup;\r\n  isFileCodeTabActive: boolean = false;\r\n  isInterestTabActive: boolean = false;\r\n  isSelfShareTabActive: boolean = false;\r\n  isBrokerageTabActive: boolean = false;\r\n  public itemForm: UntypedFormGroup;\r\n  public acSelfShareForm: FormGroup;\r\n  brokerageForm: FormGroup;\r\n  subscription: any;\r\n  isAnythingEmitted: boolean = null;\r\n  emittedValue: any;\r\n  acGroupCtrl = new FormControl('');\r\n  filteredacGroup: Observable<ACGroup[]>;\r\n\r\n  cityCtrl = new FormControl('');\r\n  filteredCity: Observable<City[]>;\r\n\r\n  acHeadCtrl = new FormControl('');\r\n  filteredacHead: Observable<ACHead[]>;\r\n\r\n  acGroupList: ACGroup[];\r\n  acHeadList: ACHead[];\r\n\r\n  acList: any;\r\n  applyOnFileShare: any[];\r\n\r\n  cityList: City[];\r\n  taxList: City[];\r\n  exchangeList: City[];\r\n  instrumentList: any;\r\n  selectedAccountId: number = 0;\r\n  brokerageList: any;\r\n  brokApplyOn: any;\r\n  brokApplyOnQty: any;\r\n  brokInstype: any;\r\n  itemList: any;\r\n  formSubmitted = false;\r\n\r\n  accountSelfShareList: any;\r\n  brokerList: any;\r\n  filterBrokerList: any;\r\n\r\n  @ViewChildren(MatAutocompleteTrigger) triggerCollection: QueryList<MatAutocompleteTrigger>;\r\n\r\n  constructor(private formBuilder: UntypedFormBuilder, private _masterSeconedService: MasterSecondService, public dialogRef:\r\n    MatDialogRef<AddAccountComponent>, @Inject(MAT_DIALOG_DATA) public user: Account,\r\n    private _masterService: MasterService, public dialog: MatDialog, private _appService: AppService, public snackBar: MatSnackBar) {\r\n    this.bindFormControls();\r\n    \r\n    if (this.user == null) { this.selectedAccountId = 0; }\r\n    else {\r\n      this.selectedAccountId = this.user.id;\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.subscription && !this.subscription.closed) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n\r\n    for (var trigger of this.triggerCollection.toArray()) {\r\n      this.subscription = trigger.panelClosingActions\r\n        .subscribe(e => {\r\n\r\n          if (!e || !e.source) {\r\n            if (this.acGroupCtrl.dirty) {\r\n              this.acGroupCtrl.setValue('');\r\n            }\r\n            if (this.acHeadCtrl.dirty) {\r\n              this.acHeadCtrl.setValue('');\r\n            }\r\n            if (this.cityCtrl.dirty) {\r\n              this.cityCtrl.setValue('');\r\n            }\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n\r\n\r\n  agGridOptions: any = {\r\n    defaultColDef: {\r\n      filter: true,\r\n      flex: 1,\r\n      sortable: true,\r\n      wraptext: true,\r\n      resizable: true\r\n    }\r\n  }\r\n\r\n  bindFormControls() {\r\n    this.personalForm = this.formBuilder.group({\r\n      'ShortCode': ['', Validators.required],\r\n      'Name': ['', Validators.required],\r\n      'OpeningBal': [],\r\n      'City': [''],\r\n      'Email': ['', Validators.compose([emailValidator])],\r\n      'PanNo': [''],\r\n      'Gstinno': [''],\r\n      'Phone': [''],\r\n      'AcGroup': ['', Validators.required],\r\n      'AcHead': ['', Validators.required],\r\n      'Address': [''],\r\n      'TelegramNo': [''],\r\n      'TelegramId': [''],\r\n      'Id': [0],\r\n      'brokerId': [0],\r\n      'DrCr': ['1', Validators.required],\r\n      'ApplyTax': [false],\r\n      'ApplyFutureCutBrok': [true],\r\n      'ApplyOptionCutBrok': [true],\r\n    });\r\n  }\r\n\r\n\r\n  handleTabChange(event: MatTabChangeEvent): void {\r\n    if(event.index === 1){\r\n      this.isSelfShareTabActive = true;\r\n    }\r\n    if(event.index === 2){\r\n      this.isBrokerageTabActive = true;\r\n    }\r\n    if (event.index === 3) { // Assuming \"FileCode\" tab has index 1\r\n      this.isInterestTabActive = true;\r\n    }\r\n    if (event.index === 4) { // Assuming \"FileCode\" tab has index 1\r\n      this.isFileCodeTabActive = true;\r\n    }\r\n  }\r\n\r\nresetForm(myForm) {\r\n  myForm.reset();\r\n  myForm.get('id').setValue(0);\r\n  Object.keys(myForm.controls).forEach(key => {\r\n    myForm.get(key).setErrors(null);\r\n  });\r\n}\r\n\r\n/* to filter select account dropdown*/\r\nonInputBrokerChange(event: any) {\r\n  const searchInput = event.target.value.toLowerCase();\r\n\r\n  this.filterBrokerList = this.brokerList.filter((data) => {\r\n    const prov = data.name.toLowerCase();\r\n    return prov.includes(searchInput);\r\n  });\r\n\r\n  if (searchInput === '') {\r\n    this.filterBrokerList = [...this.brokerList];\r\n  }\r\n}\r\n\r\n\r\n  bindFilterFntoList() {\r\n    this.filteredCity = this.cityCtrl.valueChanges.pipe(\r\n      startWith(''),\r\n      map(cityObj => {\r\n        return cityObj ? this._filterCity(cityObj) : this.cityList.slice()\r\n      }),\r\n    );\r\n\r\n    this.filteredacGroup = this.acGroupCtrl.valueChanges.pipe(\r\n      startWith(''),\r\n      map(acGroupObj => {\r\n        return acGroupObj ? this._filterACGroup(acGroupObj) : this.acGroupList.slice()\r\n      }),\r\n    );\r\n\r\n    this.filteredacHead = this.acHeadCtrl.valueChanges.pipe(\r\n      startWith(''),\r\n      map(acHeadObj => {\r\n        return acHeadObj ? this._filterACHead(acHeadObj) : this.acHeadList.slice()\r\n      }),\r\n    );\r\n  }\r\n\r\n  initialApiCalls() {\r\n    forkJoin([this._masterService.getAcGoup(), this._masterService.getAcHead(), this._masterService.getCityList(),\r\n    this._masterService.getTaxType(), this._masterService.getAccount(), this._masterService.getApplyOnFileShareDDL(),\r\n     this._masterService.getAccounts()]).pipe(map(response => {\r\n      this.acGroupList = response[0];\r\n      this.acHeadList = response[1];\r\n      this.cityList = response[2];\r\n      \r\n      \r\n      this.acList = response[4];\r\n      this.applyOnFileShare = response[5];\r\n      this.brokerList = response[6];\r\n    this.filterBrokerList = response[6];\r\n      this.bindFilterFntoList();\r\n    })).subscribe(res => {\r\n      this.getValuesInEditMode();\r\n    });\r\n  }\r\n\r\n  getValuesInEditMode() {\r\n\r\n    if (this.user) {\r\n      const acGroup = this.acGroupList.find((obj => obj.id === this.user.accountGroupId));\r\n      const acHead = this.acHeadList.find((obj => obj.id === this.user.accountHeadId));\r\n      const optedCity = this.cityList.find((obj => obj.id === this.user.cityId));\r\n      this.bindValuesInEditMode(acGroup, optedCity, acHead);\r\n\r\n      console.log(this.user);\r\n    }\r\n  }\r\n\r\n  bindValuesInEditMode(acGroup: ACGroup, optedCity?: City, acHead?: ACHead) {\r\n\r\n    this.personalForm.setValue({\r\n      'ShortCode': this.user.shortCode,\r\n      'Name': this.user.name,\r\n      'OpeningBal': CommonUtility.formatNumber(this.user.openingBal),\r\n      'City': optedCity ? optedCity.name : '',\r\n      'Email': this.user.email,\r\n      'PanNo': this.user.panNo,\r\n      'Gstinno': this.user.gstinno,\r\n      'Phone': this.user.phone,\r\n      'AcGroup': acGroup ? acGroup.name : '',\r\n      'AcHead': acHead ? acHead.name : '',\r\n      'Address': this.user.address,\r\n      'TelegramNo': this.user.telegramNo,\r\n      'TelegramId': this.user.telegramId,\r\n      'Id': this.user.id,\r\n      'brokerId': this.user.brokerId,\r\n      'DrCr': this.user.drCr,\r\n      'ApplyTax': this.user.applyTax,\r\n      'ApplyFutureCutBrok': this.user.applyFutureCutBrok,\r\n      'ApplyOptionCutBrok': this.user.applyOptionCutBrok,\r\n\r\n\r\n    });\r\n    this.acGroupCtrl.setValue(acGroup.name);\r\n    this.acHeadCtrl.setValue(acHead.name);\r\n    this.cityCtrl.setValue(optedCity.name);\r\n\r\n\r\n\r\n  }\r\n\r\n  onGroupChange(event) {\r\n    this.personalForm.controls['AcGroup'].setValue(this.acGroupCtrl.value);\r\n  }\r\n  onHeadChange(event) {\r\n    this.personalForm.controls['AcHead'].setValue(this.acHeadCtrl.value);\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.initialApiCalls();\r\n  }\r\n\r\n\r\n  private _filterACGroup(value: string): ACGroup[] {\r\n    const filterValue = value.toLowerCase();\r\n    return this.acGroupList.filter(state => state.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  private _filterACHead(value: string): ACHead[] {\r\n    const filterValue = value.toLowerCase();\r\n    return this.acHeadList.filter(state => state.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n\r\n\r\n  private _filterCity(value: string): City[] {\r\n    const filterValue = value.toLowerCase();\r\n    return this.cityList.filter(city => city.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n\r\n\r\n  private getAcGroupId(name: string) {\r\n    const cityObj = this.acGroupList.find((city) => city.name.toLocaleLowerCase() === name.toLocaleLowerCase());\r\n    return cityObj?.id;\r\n  }\r\n  private getCityId(name: string) {\r\n    const cityObj = this.cityList.find((city) => city.name.toLocaleLowerCase() === name.toLocaleLowerCase());\r\n    return cityObj?.id;\r\n  }\r\n\r\n  private getAcHeadId(name: string) {\r\n    const cityObj = this.acHeadList.find((city) => city.name.toLocaleLowerCase() === name.toLocaleLowerCase());\r\n    return cityObj?.id;\r\n  }\r\n\r\n  public onSubmit(values: Object): void {\r\n\r\n\r\n    this.personalForm.controls['OpeningBal'].setValue(Number(this.personalForm.get('OpeningBal').value));\r\n\r\n    var body = this.personalForm.value;\r\n    body.accountGroupId = this.getAcGroupId(this.acGroupCtrl.value);\r\n    body.accountHeadId = this.getAcHeadId(this.acHeadCtrl.value);\r\n    body.CityId = this.getCityId(this.cityCtrl.value);\r\n\r\n    if (this.personalForm.valid) {\r\n      //const body = JSON.stringify(addFormData);\r\n      this._masterService.saveAccount(body).subscribe(result => {\r\n        console.log(\"result\", result);\r\n        this.showToaster(result.message, \"Success\");\r\n        this.formSubmitted = true;\r\n        // this.dialogRef.close();\r\n      }, err => {\r\n        this.showToaster(err.message, \"Error\");\r\n        console.log(err);\r\n      });\r\n    }\r\n  }\r\n\r\n  showToaster(message, Label){\r\n    this.snackBar.open(message, Label, {\r\n      duration: 3000,\r\n    });\r\n  }\r\n\r\n\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport function emailValidator(control: UntypedFormControl): { [key: string]: any } {\r\n  var emailRegexp = /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$/;\r\n  if (control.value && !emailRegexp.test(control.value)) {\r\n    return { invalidEmail: true };\r\n  }\r\n}\r\n","<h2 class=\"heading mb-10\">Add Account</h2>\r\n<a (click)=\"close()\" class=\"close-btn\">\r\n  <span class=\"material-symbols-outlined\">\r\n    <mat-icon>close</mat-icon>\r\n  </span>\r\n</a>\r\n<mat-tab-group (selectedTabChange)=\"handleTabChange($event)\">\r\n  <mat-tab label=\"Details\">\r\n    <form [formGroup]=\"personalForm\" (ngSubmit)=\"onSubmit(personalForm.value)\" fxLayout=\"row wrap\" class=\"user-form\">\r\n      <div class=\"tab-party-details-parent\">\r\n        <div class=\"white-block\">\r\n          <h3><span>Account</span></h3>\r\n          <div fxFlex=\"100\" fxFlex.gt-sm=\"12\" fxFlex.sm=\"12\">\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label>Short Code</mat-label>\r\n              <input matInput autocomplete=\"off\" placeholder=\"ShortCode\" formControlName=\"ShortCode\" type=\"text\">\r\n              <mat-error *ngIf=\"personalForm.controls.ShortCode.errors?.required\">ShortCode is required</mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label>Name</mat-label>\r\n              <input matInput autocomplete=\"off\" placeholder=\"Name\" formControlName=\"Name\" type=\"text\">\r\n              <mat-error *ngIf=\"personalForm.controls.Name.errors?.required\">Name is required</mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"100\" fxFlex.gt-sm=\"28\" fxFlex.sm=\"25\">\r\n            <mat-form-field appearance=\"outline\" class=\"small\">\r\n              <mat-label>Opening Bal</mat-label>\r\n              <input matInput autocomplete=\"off\" placeholder=\"OpeningBal\" formControlName=\"OpeningBal\" type=\"number\">\r\n              <mat-error *ngIf=\"personalForm.controls.OpeningBal.errors?.required\">OpeningBal is required</mat-error>\r\n            </mat-form-field>\r\n            <mat-radio-group formControlName=\"DrCr\">\r\n              <mat-radio-button value=\"DR\" class=\"mx-1 pl-10\" checked>Dr.</mat-radio-button>\r\n              <mat-radio-button value=\"CR\" class=\"ml-15\">Cr.</mat-radio-button>\r\n            </mat-radio-group>\r\n          </div>\r\n          <div fxFlex=\"100\" fxFlex.gt-sm=\"15\" fxFlex.sm=\"50\">\r\n            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n              <mat-label>Account Group</mat-label>\r\n              <input matInput\r\n                     aria-label=\"ACGroup\"\r\n                     [matAutocomplete]=\"auto1\"\r\n                     [formControl]=\"acGroupCtrl\"\r\n                     formControlName=\"AcGroup\" />\r\n              <mat-error *ngIf=\"personalForm.controls.AcGroup.errors?.required\">Please select ACGroup</mat-error>\r\n              <mat-autocomplete #auto1=\"matAutocomplete\" (optionSelected)=\"onGroupChange($event.option.value)\">\r\n                <mat-option *ngFor=\"let acGroupObj of filteredacGroup | async\"\r\n                            [value]=\"acGroupObj.name\"\r\n                            [id]=\"acGroupObj.id\">\r\n                  <span>{{acGroupObj.name}}</span>\r\n                </mat-option>\r\n              </mat-autocomplete>\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"100\" fxFlex.gt-sm=\"15\" fxFlex.sm=\"50\">\r\n            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n              <mat-label>Account Head</mat-label>\r\n              <input matInput\r\n                     aria-label=\"ACHead\"\r\n                     [matAutocomplete]=\"auto2\"\r\n                     [formControl]=\"acHeadCtrl\"\r\n                     formControlName=\"AcHead\" />\r\n              <mat-error *ngIf=\"personalForm.controls.AcHead.errors?.required\">Please select ACHead</mat-error>\r\n              <mat-autocomplete #auto2=\"matAutocomplete\" (optionSelected)=\"onHeadChange($event.option.value)\">\r\n                <mat-option *ngFor=\"let acHeadObj of filteredacHead | async\"\r\n                            [value]=\"acHeadObj.name\"\r\n                            [id]=\"acHeadObj.id\">\r\n                  <span>{{acHeadObj.name}}</span>\r\n                </mat-option>\r\n              </mat-autocomplete>\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"100\" fxFlex.gt-sm=\"10\" fxFlex.sm=\"50\" class=\"pt-10\">\r\n            <mat-checkbox class=\"pl-10\" checked>Active</mat-checkbox>\r\n          </div>\r\n        </div>\r\n        <div class=\"white-block\">\r\n          <h3><span>Details</span></h3>\r\n          <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n              <mat-label>City</mat-label>\r\n              <input matInput\r\n                     aria-label=\"CityObj\"\r\n                     [matAutocomplete]=\"auto3\"\r\n                     [formControl]=\"cityCtrl\"\r\n                     formControlName=\"City\" />\r\n              <mat-error *ngIf=\"personalForm.controls.City.errors?.required\">Please select City</mat-error>\r\n              <mat-autocomplete #auto3=\"matAutocomplete\">\r\n                <mat-option *ngFor=\"let cityObj of filteredCity | async\"\r\n                            [value]=\"cityObj.name\"\r\n                            [id]=\"cityObj.id\">\r\n                  <span>{{cityObj.name}}</span>\r\n                </mat-option>\r\n              </mat-autocomplete>\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"100\" fxFlex.gt-sm=\"40\" fxFlex.sm=\"50\">\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label>Address</mat-label>\r\n              <textarea matInput placeholder=\"Enter address\" formControlName=\"Address\" rows=\"1\"></textarea>\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label>Pan Number</mat-label>\r\n              <input matInput autocomplete=\"off\" placeholder=\"Pan Number\" formControlName=\"PanNo\" type=\"text\">\r\n              <mat-error *ngIf=\"personalForm.controls.PanNo.errors?.required\">Pan number is required</mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label>Email</mat-label>\r\n              <input matInput autocomplete=\"off\" placeholder=\"Email\" formControlName=\"Email\" type=\"text\">\r\n              <mat-error *ngIf=\"personalForm.controls.Email.errors?.required\">Email is required</mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label>GST No</mat-label>\r\n              <input matInput autocomplete=\"off\" placeholder=\"GST No\" formControlName=\"Gstinno\" type=\"text\">\r\n              <mat-error *ngIf=\"personalForm.controls.Gstinno.errors?.required\">GST No is required</mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label>Phone Number</mat-label>\r\n              <input matInput autocomplete=\"off\" placeholder=\"Phone Number\" formControlName=\"Phone\" type=\"text\">\r\n              <mat-error *ngIf=\"personalForm.controls.Phone.errors?.required\">Phone is required</mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label>Telegram Id</mat-label>\r\n              <input matInput autocomplete=\"off\" placeholder=\"Telegram Id\" formControlName=\"TelegramId\" type=\"text\">\r\n              <mat-error *ngIf=\"personalForm.controls.TelegramId.errors?.required\">Telegram is required</mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label>Telegram No</mat-label>\r\n              <input matInput autocomplete=\"off\" placeholder=\"Telegram No\" formControlName=\"TelegramNo\" type=\"text\">\r\n              <mat-error *ngIf=\"personalForm.controls.TelegramNo.errors?.required\">Telegram number is required</mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n            <div class=\"dropdown-wrapper\">\r\n              <mat-form-field class=\"select-slab-mat\" appearance=\"outline\">\r\n                <mat-label>Select Broker</mat-label>\r\n                <mat-select #select placeholder=\"Select Broker\" panelClass=\"custom-select-panel\" formControlName=\"brokerId\">\r\n                  <input class=\"milti-search-box\" #multiUserSearch type=\"text\" autocomplete=\"off\" matInput placeholder=\"Search Broker\" (input)=\"onInputBrokerChange($event)\" />\r\n                  <mat-option *ngFor=\"let option of filterBrokerList\" [value]=\"option.id\">\r\n                    {{ option.name }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n            <mat-checkbox class=\"pl-10\" formControlName=\"ApplyTax\">Apply Tax</mat-checkbox>\r\n          </div>\r\n          <div fxFlex=\"100\" fxFlex.gt-sm=\"40\" fxFlex.sm=\"50\">\r\n            <mat-checkbox class=\"pl-10\" formControlName=\"ApplyFutureCutBrok\">Apply Future Cut Brok</mat-checkbox>\r\n            <mat-checkbox class=\"pl-10 ml-7\" formControlName=\"ApplyOptionCutBrok\">Apply Option Cut Brok</mat-checkbox>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div fxFlex=\"100\" class=\"mt-2 text-center space-between-btns\">\r\n        <button mat-raised-button color=\"warn\" type=\"button\" (click)=\"close()\">Cancel</button>\r\n        <button mat-raised-button color=\"primary\" class=\"uppercase\" [disabled]=\"!personalForm.valid || (!personalForm.dirty && !formSubmitted)\" type=\"submit\">Save</button>\r\n      </div>\r\n    </form>\r\n  </mat-tab>\r\n  <mat-tab label=\"Self Share\">\r\n    <ng-container *ngIf=\"isSelfShareTabActive\">\r\n      <app-self-share-tab [selectedAccountId]=\"selectedAccountId\"></app-self-share-tab>\r\n    </ng-container>\r\n  </mat-tab>\r\n\r\n  <mat-tab label=\"Brokerage\">\r\n    <ng-container *ngIf=\"isBrokerageTabActive\">\r\n      <app-brokerage-tab [selectedAccountId]=\"selectedAccountId\"></app-brokerage-tab>\r\n    </ng-container>\r\n  </mat-tab>\r\n\r\n  <mat-tab label=\"Interest\">\r\n    <ng-container *ngIf=\"isInterestTabActive\">\r\n      <app-add-intereset [selectedAccountId]=\"selectedAccountId\"></app-add-intereset>\r\n    </ng-container>\r\n  </mat-tab>\r\n\r\n  <mat-tab label=\"FileCode\">\r\n    <ng-container *ngIf=\"isFileCodeTabActive\">\r\n      <app-file-code-tab [selectedAccountId]=\"selectedAccountId\"></app-file-code-tab>\r\n    </ng-container>\r\n  </mat-tab>\r\n\r\n\r\n\r\n</mat-tab-group>\r\n\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MasterSecondService } from '../../../master-second.service';\r\nimport { ErrorDialog } from 'src/app/Forms/Dialog/confirmation-dialog/error-dialog.component';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { forkJoin, map } from 'rxjs';\r\nimport { AppService } from 'src/app/service/app.service';\r\nimport { ConfirmationDialog } from 'src/app/Forms/Dialog/confirmation-dialog/confirmation-dialog.component';\r\nimport { AddAccountComponent } from '../add-account.component';\r\nimport { MatTabChangeEvent } from '@angular/material/tabs';\r\n\r\n@Component({\r\n  selector: 'app-add-intereset',\r\n  templateUrl: './add-intereset.component.html',\r\n  styleUrls: ['./add-intereset.component.scss']\r\n})\r\nexport class AddInteresetComponent implements OnInit {\r\n  \r\n  @Input() selectedAccountId: number;\r\n  public itemForm: UntypedFormGroup;\r\n  interestMasterList: any = [];\r\n  typeList: any[];\r\n  applyOnList: any[];\r\n  postVoucherList: any[];\r\n  filterPostVoucherList: any[];\r\n  filterTypeList: any[];\r\n  filterApplyOnList: any[];\r\n  agGridOptions: any = {\r\n    defaultColDef: {\r\n      filter: true,\r\n      flex: 1,\r\n      sortable: true,\r\n      wraptext: true,\r\n      resizable: true\r\n    }\r\n  }\r\n\r\n  columnItemDefs = [\r\n    {\r\n      headerName: 'Action', field: 'fileIcon', cellRenderer: this.actionCellRenderer, minWidth: 80,\r\n      maxWidth: 110, resizable: true\r\n    },\r\n    { headerName: 'Account Name', field: 'acName', filter: true, sorting: true, resizable: true },\r\n  { headerName: 'ApplyOn', field: 'applyOnName', filter: true, sorting: true, resizable: true },  \r\n  { headerName: 'From Date', field: 'fromDtFormat', filter: true, sorting: true, resizable: true },  \r\n  { headerName: 'To Date', field: 'toDtFormat', filter: true, sorting: true, resizable: true },  \r\n  { headerName: 'Type', field: 'typeName', filter: true, sorting: true, resizable: true },  \r\n  { headerName: 'Post Vouchers', field: 'postVouchersName', filter: true, sorting: true, resizable: true },  \r\n  { headerName: 'Int Rate', field: 'intRate', filter: true, sorting: true, resizable: true },  \r\n  { headerName: 'Year Days', field: 'yearDays', filter: true, sorting: true, resizable: true },  \r\n];\r\n\r\n  constructor( public dialogRef: MatDialogRef<AddAccountComponent>,private formBuilder: UntypedFormBuilder,private _appService: AppService, private _masterSeconedService: MasterSecondService, public dialog: MatDialog, public snackBar: MatSnackBar) { }\r\n\r\n  ngOnInit(): void {\r\n    this.bindItemFormControls();\r\n    this.initialItemApiCalls();\r\n  }\r\n\r\n  bindItemFormControls() {\r\n    this.itemForm = this.formBuilder.group({\r\n      'accountId': this.selectedAccountId,\r\n      'type': ['', Validators.required],\r\n      'applyOn': ['', Validators.required],\r\n      'postVouchers': ['', Validators.required],\r\n      'intRate': ['', Validators.required],\r\n      'yearDays': ['', Validators.required],\r\n      'fromDt': ['', Validators.required],\r\n      'toDt': ['', Validators.required],\r\n      'id': [0]\r\n    });\r\n}\r\n\r\npublic actionCellRenderer(params: any) {\r\n  let eGui = document.createElement(\"div\");\r\n  let editingCells = params.api.getEditingCells();\r\n  let isCurrentRowEditing = editingCells.some((cell: any) => {\r\n    return cell.rowIndex === params.node.rowIndex;\r\n  });\r\n  eGui.innerHTML = `<button class=\"material-icons action-button-edit \" data-action=\"edit\">edit </button>\r\n                    <button class=\"material-icons action-button-red\" delete data-action=\"delete\">delete</button>`;\r\n\r\n  return eGui;\r\n}\r\n\r\nclose(): void {\r\n  this.dialogRef.close();\r\n}\r\n\r\ninitialItemApiCalls() {\r\n  forkJoin([this._appService.getIntrestApplyOnDDL(), this._appService.getIntrestTypeDLL(), this._appService.getPostVoucherDLL()]).pipe(map\r\n    (response => {\r\n    this.applyOnList = response[0];\r\n    this.filterApplyOnList = response[0];\r\n    this.typeList = response[1];\r\n    this.filterTypeList = response[1];\r\n    this.postVoucherList = response[2];\r\n    this.filterPostVoucherList = response[2];\r\n  })).subscribe(res => {\r\n  \r\n  });\r\n  if(this.selectedAccountId){\r\n    this.getInterestList();\r\n  }\r\n}\r\n\r\nhandleTabChange(event: MatTabChangeEvent): void {\r\n  if (event.index === 3) { // Assuming \"Interest\" tab has index 1\r\n    // Make your API calls here\r\n    console.log('Interest tab clicked, triggering API calls...');\r\n  }\r\n}\r\n\r\neditInterestItem(id: number){\r\n  this._masterSeconedService.getInterestId(id).subscribe((res) => {\r\n    this.itemForm.get('accountId').setValue(this.selectedAccountId);\r\n    this.itemForm.get('type').setValue(res.type);\r\n    this.itemForm.get('applyOn').setValue(res.applyOn);\r\n    this.itemForm.get('postVouchers').setValue(res.postVouchers);\r\n    this.itemForm.get('intRate').setValue(res.intRate);\r\n\r\n    this.itemForm.get('yearDays').setValue(res.yearDays);\r\n    this.itemForm.get('fromDt').setValue(res.fromDt);\r\n    this.itemForm.get('toDt').setValue(res.toDt);\r\n    this.itemForm.get('id').setValue(res.id);\r\n\r\n    \r\n  });\r\n}\r\n\r\n  getInterestList() {\r\n    this._masterSeconedService.getAccountInterestList(this.selectedAccountId).subscribe((results) => {\r\n         this.interestMasterList = results;       \r\n        });\r\n    }\r\n\r\n  public onItemSubmit(values: Object): void {\r\n    if (this.selectedAccountId == 0) {\r\n      const dialogRef = this.dialog.open(ErrorDialog, {\r\n        data: {\r\n          message: 'Please select or save account to save account Interest',\r\n          buttonText: {\r\n            ok: 'OK',\r\n  \r\n          }\r\n        }\r\n  \r\n      });\r\n    } else {\r\n      var body = this.itemForm.value;\r\n    \r\n      if (this.itemForm.valid) {\r\n        //const body = JSON.stringify(addFormData);\r\n        this._masterSeconedService.saveInterest(body).subscribe(result => {\r\n          console.log(\"result\", result);\r\n          this.getInterestList();\r\n          this.resetForm(this.itemForm);\r\n          this.snackBar.open(\"Interest save sucessfully\", \"Success\", {\r\n            duration: 3000,\r\n          });\r\n        }, err => {\r\n          console.log(err);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  onGridClick(params: any) {\r\n    if (params.event.target.dataset.action == \"edit\")\r\n    {\r\n      this.editInterestItem(params.data.id);\r\n    }\r\n    if (params.event.target.dataset.action == \"delete\")\r\n    {\r\n      const dialogRef = this.dialog.open(ConfirmationDialog, {\r\n        data: {\r\n          message: 'Do you really want to delete this record?',\r\n          buttonText: {\r\n            ok: 'Yes',\r\n            cancel: 'No'\r\n          }\r\n        }\r\n      });\r\n\r\n      dialogRef.afterClosed().subscribe((confirmed: boolean) => {\r\n        if (confirmed) {\r\n          this._masterSeconedService.deleteInterest(params.data.id).subscribe((res) => {\r\n            this.getInterestList();\r\n            if(res.isSuccess){\r\n              this.showToaster(res.message);\r\n            } else {\r\n              this.showToaster(res.message, true);\r\n            }\r\n          });\r\n        }\r\n      });\r\n\r\n\r\n    }\r\n  }\r\n\r\n  showToaster(message, isError = false) {\r\n    const panelClass = isError ? ['red-text'] : undefined;\r\n    const label = isError ? \"Error\" : \"Success\";\r\n    const time = isError? 6000 : 3000;\r\n  \r\n    this.snackBar.open(message, label, {\r\n      duration: time,\r\n      panelClass: panelClass,\r\n    });\r\n  }\r\n\r\n  /* to filter select account dropdown*/\r\nonInputTypeChange(event: any) {\r\n  const searchInput = event.target.value.toLowerCase();\r\n\r\n  this.filterTypeList = this.typeList.filter((data) => {\r\n    const prov = data.name.toLowerCase();\r\n    return prov.includes(searchInput);\r\n  });\r\n\r\n  if (searchInput === '') {\r\n    this.filterTypeList = [...this.typeList];\r\n  }\r\n}\r\n\r\nonInputApplyOnChange(event: any) {\r\n  const searchInput = event.target.value.toLowerCase();\r\n\r\n  this.filterApplyOnList = this.applyOnList.filter((data) => {\r\n    const prov = data.name.toLowerCase();\r\n    return prov.includes(searchInput);\r\n  });\r\n\r\n  if (searchInput === '') {\r\n    this.filterApplyOnList = [...this.applyOnList];\r\n  }\r\n}\r\n\r\nonInputVoucherChange(event: any) {\r\n  const searchInput = event.target.value.toLowerCase();\r\n\r\n  this.filterPostVoucherList = this.postVoucherList.filter((data) => {\r\n    const prov = data.name.toLowerCase();\r\n    return prov.includes(searchInput);\r\n  });\r\n\r\n  if (searchInput === '') {\r\n    this.filterPostVoucherList = [...this.postVoucherList];\r\n  }\r\n}\r\n\r\n  resetForm(myForm) {\r\n    myForm.reset();\r\n    myForm.get('id').setValue(0);\r\n    Object.keys(myForm.controls).forEach(key => {\r\n      myForm.get(key).setErrors(null);\r\n    });\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"itemForm\" (ngSubmit)=\"onItemSubmit(itemForm.value)\" fxLayout=\"row wrap\" class=\"user-form\">\n    <div class=\"white-block pb-5\">\n        <h3><span>Item</span></h3>\n        <div class=\"tab-party-details-parent\">\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\n                <div class=\"dropdown-wrapper\">\n                    <mat-form-field class=\"select-slab-mat\" appearance=\"outline\">\n                      <mat-label>Select Type</mat-label>\n                      <mat-select #select placeholder=\"Select Type\" panelClass=\"custom-select-panel\" formControlName=\"type\">\n                        <input class=\"milti-search-box\" #multiUserSearch type=\"text\" autocomplete=\"off\" matInput placeholder=\"Search Type\" (input)=\"onInputTypeChange($event)\" />\n                        <mat-option *ngFor=\"let option of filterTypeList\" [value]=\"option.id\">\n                          {{ option.name }}\n                        </mat-option>\n                      </mat-select>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\n                <div class=\"dropdown-wrapper\">\n                    <mat-form-field class=\"select-slab-mat\" appearance=\"outline\">\n                      <mat-label>Select ApplyOn</mat-label>\n                      <mat-select #select placeholder=\"Select ApplyOn\" panelClass=\"custom-select-panel\" formControlName=\"applyOn\">\n                        <input class=\"milti-search-box\" #multiUserSearch type=\"text\" autocomplete=\"off\" matInput placeholder=\"Search ApplyOn\" (input)=\"onInputApplyOnChange($event)\" />\n                        <mat-option *ngFor=\"let option of filterApplyOnList\" [value]=\"option.id\">\n                          {{ option.name }}\n                        </mat-option>\n                      </mat-select>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\n                <div class=\"dropdown-wrapper\">\n                    <mat-form-field class=\"select-slab-mat\" appearance=\"outline\">\n                      <mat-label>Select Post Voucher</mat-label>\n                      <mat-select #select placeholder=\"Select Post Voucher\" panelClass=\"custom-select-panel\" formControlName=\"postVouchers\">\n                        <input class=\"milti-search-box\" #multiUserSearch type=\"text\" autocomplete=\"off\" matInput placeholder=\"Search Post Voucher\" (input)=\"onInputVoucherChange($event)\" />\n                        <mat-option *ngFor=\"let option of filterPostVoucherList\" [value]=\"option.id\">\n                          {{ option.name }}\n                        </mat-option>\n                      </mat-select>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\n                <mat-form-field appearance=\"outline\">\n                  <mat-label>Year Days</mat-label>\n                  <input matInput autocomplete=\"off\" placeholder=\"Year Days\" formControlName=\"yearDays\" type=\"number\">\n                  <mat-error *ngIf=\"itemForm.controls.yearDays.errors?.required\">yearDays is required</mat-error>\n                </mat-form-field>\n              </div>\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\n                <mat-form-field appearance=\"outline\">\n                  <mat-label>Int Rate</mat-label>\n                  <input matInput autocomplete=\"off\" placeholder=\"Int Rate\" formControlName=\"intRate\" type=\"number\">\n                  <mat-error *ngIf=\"itemForm.controls.intRate.errors?.required\">Int Rate is required</mat-error>\n                </mat-form-field>\n              </div>\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\n                <mat-form-field appearance=\"outline\">\n                  <mat-label>From</mat-label>\n                  <input matInput [matDatepicker]=\"itemFormpicker1\" formControlName=\"fromDt\">\n                  <mat-datepicker-toggle matSuffix [for]=\"itemFormpicker1\"></mat-datepicker-toggle>\n                  <mat-datepicker #itemFormpicker1></mat-datepicker>\n                </mat-form-field>\n              </div>\n              <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\n                <mat-form-field appearance=\"outline\">\n                  <input matInput [matDatepicker]=\"itemFormpicker2\" placeholder=\"To\" formControlName=\"toDt\">\n                  <mat-datepicker-toggle matSuffix [for]=\"itemFormpicker2\"></mat-datepicker-toggle>\n                  <mat-datepicker #itemFormpicker2></mat-datepicker>\n                </mat-form-field>\n              </div>\n            \n        </div>\n    </div>\n    <div fxFlex=\"100\" class=\"mt-2 text-center space-between-btns\">\n        <button mat-raised-button color=\"warn\" (click)=\"close()\">Cancel</button>            \n        <button mat-raised-button color=\"primary\" class=\"uppercase\" [disabled]=\"!itemForm.valid\" type=\"submit\">Save</button> \n    </div>\n</form>\n<div class=\"col-xl-12 mt-2\">\n  <ag-grid-angular style=\" height: 250px;\"\n                   class=\"ag-theme-material\"\n                     [rowHeight]=\"31\"\n                   [rowData]=\"interestMasterList\"\n                   [pagination]=\"true\"\n                   [columnDefs]=\"columnItemDefs\"\n                   [defaultColDef]=\"agGridOptions.defaultColDef\"\n                   (cellClicked)=\"onGridClick($event)\"\n                   headerHeight=\"34\">\n  </ag-grid-angular>\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormGroup, UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { formatDate } from '@angular/common';\r\nimport { MasterSecondService } from '../../../master-second.service';\r\nimport { ErrorDialog } from 'src/app/Forms/Dialog/confirmation-dialog/error-dialog.component';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { forkJoin, map } from 'rxjs';\r\nimport { AppService } from 'src/app/service/app.service';\r\nimport { ConfirmationDialog } from 'src/app/Forms/Dialog/confirmation-dialog/confirmation-dialog.component';\r\nimport { AddAccountComponent } from '../add-account.component';\r\nimport { MatTabChangeEvent } from '@angular/material/tabs';\r\nimport { MasterService } from '../../../master.service';\r\nimport { CommonUtility } from 'src/app/shared/common-utility';\r\n\r\n@Component({\r\n  selector: 'app-brokerage-tab',\r\n  templateUrl: './brokerage-tab.component.html',\r\n  styleUrls: ['./brokerage-tab.component.scss']\r\n})\r\nexport class BrokerageTabComponent implements OnInit {\r\n\r\n  \r\n  @Input() selectedAccountId: number;\r\n  public itemForm: UntypedFormGroup;\r\n\r\n\r\n  brokerageForm: FormGroup;\r\n  brokerageList: any = [];\r\n  exchangeList: any;\r\n  instrumentList: any;\r\n  itemList: any;\r\n  brokApplyOn: any;\r\n  brokApplyOnQty:any;\r\n\r\n  agGridOptions: any = {\r\n    defaultColDef: {\r\n      filter: true,\r\n      flex: 1,\r\n      sortable: true,\r\n      wraptext: true,\r\n      resizable: true\r\n    }\r\n  }\r\n\r\n  columnDefsBrok = [\r\n    { headerName: 'ApplyOn', field: 'applyOnName', filter: true, sorting: true, resizable: true },\r\n    { headerName: 'Apply OnQty', field: 'applyOnQtyName', filter: true, sorting: true, resizable: true },\r\n    { field: 'Intraday BrokRate', headerName: 'IntradayBrokRate', filter: true, sorting: true, resizable: true, valueFormatter: params => CommonUtility.formatNumber(params.data.intradayBrokRate), type: 'rightAligned' },\r\n    { headerName: 'Delivery BrokRate', field: 'deliveryBrokRate', filter: true, sorting: true, resizable: true, valueFormatter: params => CommonUtility.formatNumber(params.data.deliveryBrokRate), type: 'rightAligned' },\r\n    /*{ headerName: 'HigherSide Only', minWidth: 120, maxWidth: 120, field: 'higherSideOnly', filter: true, sorting: true, resizable: true },*/\r\n    { headerName: 'Instrument', field: 'instrumentType', filter: true, sorting: true, resizable: true },\r\n    { headerName: 'RateRange1', field: 'rateRange1', filter: true, sorting: true, resizable: true, valueFormatter: params => CommonUtility.formatNumber(params.data.rateRange1), type: 'rightAligned' },\r\n    { headerName: 'RateRange2', field: 'rateRange2', filter: true, sorting: true, resizable: true, valueFormatter: params => CommonUtility.formatNumber(params.data.rateRange2), type: 'rightAligned' },\r\n    { headerName: 'Exchange', field: 'exchange', filter: true, sorting: true, resizable: true },\r\n    { headerName: 'Item', field: 'item', filter: true, sorting: true, resizable: true },\r\n    /*    { headerName: 'IntradaySingleSideOnly', field: 'intradaySingleSideOnly', filter: true, sorting: true, resizable: true },*/\r\n    { headerName: 'FromDT', field: 'fromDT', filter: true, sorting: true, resizable: true },\r\n    { headerName: 'ToDT', field: 'toDT', filter: true, sorting: true, resizable: true },\r\n\r\n  ];\r\n\r\n  constructor(private _masterService: MasterService, public dialogRef: MatDialogRef<AddAccountComponent>,private formBuilder: UntypedFormBuilder,private _appService: AppService, private _masterSeconedService: MasterSecondService, public dialog: MatDialog, public snackBar: MatSnackBar) { }\r\n\r\n  ngOnInit(): void {\r\n    this.bindBrokerageControls();\r\n  }\r\n\r\n  bindBrokerageControls() {\r\n    if(this.selectedAccountId){\r\n      this.getBrokerageSetupList();\r\n    }\r\n  }\r\n\r\npublic actionCellRenderer(params: any) {\r\n  let eGui = document.createElement(\"div\");\r\n  let editingCells = params.api.getEditingCells();\r\n  let isCurrentRowEditing = editingCells.some((cell: any) => {\r\n    return cell.rowIndex === params.node.rowIndex;\r\n  });\r\n  eGui.innerHTML = `<button class=\"material-icons action-button-edit \" data-action=\"edit\">edit </button>\r\n                    <button class=\"material-icons action-button-red\" delete data-action=\"delete\">delete</button>`;\r\n\r\n  return eGui;\r\n}\r\n\r\nclose(): void {\r\n  this.dialogRef.close();\r\n}\r\n\r\n\r\ngetBrokerageSetupList() {\r\n  this._appService.getBrokerageSetupListAccount(this.selectedAccountId).subscribe((results) => {\r\n    this.brokerageList = results;\r\n  });\r\n}\r\n\r\nonBrokerageClick(params: any) {\r\n  if (params.event.target.dataset.action == \"delete\") {\r\n    const dialogRef = this.dialog.open(ConfirmationDialog, {\r\n      data: {\r\n        message: 'Do you really want to delete this record?',\r\n        buttonText: {\r\n          ok: 'Yes',\r\n          cancel: 'No'\r\n        }\r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((confirmed: boolean) => {\r\n      if (confirmed) {\r\n        this._masterService.deleteBrokerageSetup(params.data.id).subscribe((res) => {\r\n          if(res.isSuccess){\r\n            this.showToaster(res.message);\r\n            this.getBrokerageSetupList();\r\n          } else {\r\n            this.showToaster(res.message, true);\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n\r\n  }\r\n}\r\npublic onBrokerageSave(values: object) {\r\n  if (this.selectedAccountId == 0) {\r\n    const dialogRef = this.dialog.open(ErrorDialog, {\r\n      data: {\r\n        message: 'Please select or save account to save account tax',\r\n        buttonText: {\r\n          ok: 'OK',\r\n\r\n        }\r\n      }\r\n\r\n    });\r\n  } else {\r\n    console.log(values);\r\n    this.brokerageForm.controls['accountId'].setValue(this.selectedAccountId);\r\n    var body = this.brokerageForm.value;\r\n    console.log(body);\r\n  \r\n    if (this.brokerageForm.valid) {\r\n  \r\n      this._masterService.saveBrokerageSetup(body).subscribe(result => {\r\n        console.log(\"result\", result);\r\n        // this.dialogRef.close();\r\n        this.snackBar.open(\"Brokerage details saved successfully.\", \"Success\", {\r\n          duration: 3000,\r\n        });\r\n        this.resetForm(this.brokerageForm);\r\n        this.getBrokerageSetupList();\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nshowToaster(message, isError = false) {\r\n  const panelClass = isError ? ['red-text'] : undefined;\r\n  const label = isError ? \"Error\" : \"Success\";\r\n  const time = isError? 6000 : 3000;\r\n\r\n  this.snackBar.open(message, label, {\r\n    duration: time,\r\n    panelClass: panelClass,\r\n  });\r\n}\r\n\r\n  resetForm(myForm) {\r\n    myForm.reset();\r\n    myForm.get('id').setValue(0);\r\n    Object.keys(myForm.controls).forEach(key => {\r\n      myForm.get(key).setErrors(null);\r\n    });\r\n  }\r\n\r\n}\r\n\r\n","\r\n  <div class=\"col-xl-12 mt-2\">\r\n    <ag-grid-angular style=\" height: 250px; width: 1200px;\"\r\n                     class=\"ag-theme-material\"\r\n                     [rowData]=\"brokerageList\"\r\n                     [pagination]=\"true\"\r\n                     [rowHeight]=\"31\"\r\n                     [columnDefs]=\"columnDefsBrok\"\r\n                     [defaultColDef]=\"agGridOptions.defaultColDef\"\r\n                     (cellClicked)=\"onBrokerageClick($event)\"\r\n                     headerHeight=\"34\">\r\n    </ag-grid-angular>\r\n  </div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MasterSecondService } from '../../../master-second.service';\r\nimport { ErrorDialog } from 'src/app/Forms/Dialog/confirmation-dialog/error-dialog.component';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { forkJoin, map } from 'rxjs';\r\nimport { AppService } from 'src/app/service/app.service';\r\nimport { ConfirmationDialog } from 'src/app/Forms/Dialog/confirmation-dialog/confirmation-dialog.component';\r\nimport { AddAccountComponent } from '../add-account.component';\r\nimport { MatTabChangeEvent } from '@angular/material/tabs';\r\nimport { MasterService } from '../../../master.service';\r\n\r\n@Component({\r\n  selector: 'app-file-code-tab',\r\n  templateUrl: './file-code-tab.component.html',\r\n  styleUrls: ['./file-code-tab.component.scss']\r\n})\r\nexport class FileCodeTabComponent implements OnInit {\r\n\r\n  @Input() selectedAccountId: number;\r\n  public itemForm: UntypedFormGroup;\r\n  interestMasterList: any = [];\r\n  exchangeList: any[];\r\n  filterExchangeList: any[];\r\n  agGridOptions: any = {\r\n    defaultColDef: {\r\n      filter: true,\r\n      flex: 1,\r\n      sortable: true,\r\n      wraptext: true,\r\n      resizable: true\r\n    }\r\n  }\r\n\r\n  columnItemDefs = [\r\n    {\r\n      headerName: 'Action', field: 'fileIcon', cellRenderer: this.actionCellRenderer, minWidth: 80,\r\n      maxWidth: 110, resizable: true\r\n    },\r\n    { headerName: 'Exchange', field: 'exName', filter: true, sorting: true, resizable: true },\r\n  { headerName: 'FileCode', field: 'fileCode', filter: true, sorting: true, resizable: true },   \r\n];\r\n\r\n  constructor(public _masterService: MasterService, public dialogRef: MatDialogRef<AddAccountComponent>,private formBuilder: UntypedFormBuilder,private _appService: AppService, private _masterSeconedService: MasterSecondService, public dialog: MatDialog, public snackBar: MatSnackBar) { }\r\n\r\n  ngOnInit(): void {\r\n    this.bindItemFormControls();\r\n    this.initialItemApiCalls();\r\n  }\r\n\r\n  bindItemFormControls() {\r\n    this.itemForm = this.formBuilder.group({\r\n      'accountId': this.selectedAccountId,\r\n      'exId': [0, Validators.required],\r\n      'fileCode': ['', Validators.required],\r\n      'id': [0]\r\n    });\r\n}\r\n\r\npublic actionCellRenderer(params: any) {\r\n  let eGui = document.createElement(\"div\");\r\n  let editingCells = params.api.getEditingCells();\r\n  let isCurrentRowEditing = editingCells.some((cell: any) => {\r\n    return cell.rowIndex === params.node.rowIndex;\r\n  });\r\n  eGui.innerHTML = `<button class=\"material-icons action-button-edit \" data-action=\"edit\">edit </button>\r\n                    <button class=\"material-icons action-button-red\" delete data-action=\"delete\">delete</button>`;\r\n\r\n  return eGui;\r\n}\r\n\r\nclose(): void {\r\n  this.dialogRef.close();\r\n}\r\n\r\ninitialItemApiCalls() {\r\n  forkJoin([this._masterService.getExchangeName()]).pipe(map\r\n    (response => {\r\n    this.exchangeList = response[0];\r\n    this.filterExchangeList = response[0];\r\n  })).subscribe(res => {\r\n  \r\n  });\r\n  if(this.selectedAccountId){\r\n    this.getInterestList();\r\n  }\r\n}\r\n\r\nhandleTabChange(event: MatTabChangeEvent): void {\r\n  if (event.index === 3) { // Assuming \"Interest\" tab has index 1\r\n    // Make your API calls here\r\n    console.log('Interest tab clicked, triggering API calls...');\r\n  }\r\n}\r\n\r\neditInterestItem(id: number){\r\n  this._masterService.getFileCodeId(id).subscribe((res) => {\r\n    this.itemForm.get('accountId').setValue(this.selectedAccountId);\r\n    this.itemForm.get('exId').setValue(res.exId);\r\n    this.itemForm.get('fileCode').setValue(res.fileCode);\r\n    this.itemForm.get('id').setValue(res.id);\r\n\r\n    \r\n  });\r\n}\r\n\r\n  getInterestList() {\r\n    this._masterService.getFileCodeList(this.selectedAccountId).subscribe((results) => {\r\n         this.interestMasterList = results;       \r\n        });\r\n    }\r\n\r\n  public onItemSubmit(values: Object): void {\r\n    if (this.selectedAccountId == 0) {\r\n      const dialogRef = this.dialog.open(ErrorDialog, {\r\n        data: {\r\n          message: 'Please select or save account to save FileCode.',\r\n          buttonText: {\r\n            ok: 'OK',\r\n  \r\n          }\r\n        }\r\n  \r\n      });\r\n    } else {\r\n      var body = this.itemForm.value;\r\n    \r\n      if (this.itemForm.valid) {\r\n        //const body = JSON.stringify(addFormData);\r\n        this._masterService.saveAcFileCode(body).subscribe(result => {\r\n          console.log(\"result\", result);\r\n          this.getInterestList();\r\n          this.resetForm(this.itemForm);\r\n          this.snackBar.open(\"FileCode details saved sucessfully\", \"Success\", {\r\n            duration: 3000,\r\n          });\r\n        }, err => {\r\n          console.log(err);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  onGridClick(params: any) {\r\n    if (params.event.target.dataset.action == \"edit\")\r\n    {\r\n      this.editInterestItem(params.data.id);\r\n    }\r\n    if (params.event.target.dataset.action == \"delete\")\r\n    {\r\n      const dialogRef = this.dialog.open(ConfirmationDialog, {\r\n        data: {\r\n          message: 'Do you really want to delete this record?',\r\n          buttonText: {\r\n            ok: 'Yes',\r\n            cancel: 'No'\r\n          }\r\n        }\r\n      });\r\n\r\n      dialogRef.afterClosed().subscribe((confirmed: boolean) => {\r\n        if (confirmed) {\r\n          this._masterService.deleteAcFileCode(params.data.id).subscribe((res) => {\r\n            this.getInterestList();\r\n            this.showToaster('Deleted Successfully.');\r\n          });\r\n        }\r\n      });\r\n\r\n\r\n    }\r\n  }\r\n\r\n  showToaster(message){\r\n    this.snackBar.open(message, \"Success\", {\r\n      duration: 3000,\r\n    });\r\n  }\r\n\r\n  /* to filter select account dropdown*/\r\nonInputExchangeChange(event: any) {\r\n  const searchInput = event.target.value.toLowerCase();\r\n\r\n  this.filterExchangeList = this.exchangeList.filter((data) => {\r\n    const prov = data.name.toLowerCase();\r\n    return prov.includes(searchInput);\r\n  });\r\n\r\n  if (searchInput === '') {\r\n    this.filterExchangeList = [...this.exchangeList];\r\n  }\r\n}\r\n\r\n  resetForm(myForm) {\r\n    myForm.reset();\r\n    myForm.get('id').setValue(0);\r\n    Object.keys(myForm.controls).forEach(key => {\r\n      myForm.get(key).setErrors(null);\r\n    });\r\n  }\r\n\r\n}","<form [formGroup]=\"itemForm\" (ngSubmit)=\"onItemSubmit(itemForm.value)\" fxLayout=\"row wrap\" class=\"user-form\">\n    <div class=\"white-block pb-5\">\n        <h3><span>Item</span></h3>\n        <div class=\"tab-party-details-parent\">\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\n                <div class=\"dropdown-wrapper\">\n                      <mat-form-field class=\"select-slab-mat\" appearance=\"outline\">\n                        <mat-label>Select Exchange</mat-label>\n                        <mat-select #select placeholder=\"Select Exchange\" panelClass=\"custom-select-panel\" formControlName=\"exId\">\n                          <input class=\"milti-search-box\" #multiUserSearch type=\"text\" autocomplete=\"off\" matInput placeholder=\"Search Type\" (input)=\"onInputExchangeChange($event)\" />\n                          <mat-option *ngFor=\"let option of filterExchangeList\" [value]=\"option.id\">\n                            {{ option.name }}\n                          </mat-option>\n                        </mat-select>\n                      </mat-form-field>\n                </div>\n            </div>\n            \n            <div fxFlex=\"100\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\n                <mat-form-field appearance=\"outline\">\n                  <mat-label>FileCode</mat-label>\n                  <input matInput autocomplete=\"off\" placeholder=\"FileCode\" formControlName=\"fileCode\" type=\"text\">\n                  <mat-error *ngIf=\"itemForm.controls.fileCode.errors?.required\">FileCode is required</mat-error>\n                </mat-form-field>\n              </div>\n            \n            \n        </div>\n    </div>\n    <div fxFlex=\"100\" class=\"mt-2 text-center space-between-btns\">\n        <button mat-raised-button color=\"warn\" (click)=\"close()\">Cancel</button>            \n        <button mat-raised-button color=\"primary\" class=\"uppercase\" [disabled]=\"!itemForm.valid\" type=\"submit\">Save</button> \n    </div>\n</form>\n<div class=\"col-xl-12 mt-2\">\n  <ag-grid-angular style=\" height: 250px;\"\n                   class=\"ag-theme-material\"\n                     [rowHeight]=\"31\"\n                   [rowData]=\"interestMasterList\"\n                   [pagination]=\"true\"\n                   [columnDefs]=\"columnItemDefs\"\n                   [defaultColDef]=\"agGridOptions.defaultColDef\"\n                   (cellClicked)=\"onGridClick($event)\"\n                   headerHeight=\"34\">\n  </ag-grid-angular>\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MasterSecondService } from '../../../master-second.service';\r\nimport { ErrorDialog } from 'src/app/Forms/Dialog/confirmation-dialog/error-dialog.component';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { forkJoin, map } from 'rxjs';\r\nimport { AppService } from 'src/app/service/app.service';\r\nimport { ConfirmationDialog } from 'src/app/Forms/Dialog/confirmation-dialog/confirmation-dialog.component';\r\nimport { AddAccountComponent } from '../add-account.component';\r\nimport { MatTabChangeEvent } from '@angular/material/tabs';\r\nimport { MasterService } from '../../../master.service';\r\nimport { CommonUtility } from 'src/app/shared/common-utility';\r\n\r\n@Component({\r\n  selector: 'app-self-share-tab',\r\n  templateUrl: './self-share-tab.component.html',\r\n  styleUrls: ['./self-share-tab.component.scss']\r\n})\r\nexport class SelfShareTabComponent implements OnInit {\r\n\r\n  @Input() selectedAccountId: number;\r\n  public acSelfShareForm: UntypedFormGroup;\r\n  accountSelfShareList: any = [];\r\n\r\n  applyOnFileShare: any[];\r\n  exchangeList: any[];\r\n  acList: any[];\r\n  agGridOptions: any = {\r\n    defaultColDef: {\r\n      filter: true,\r\n      flex: 1,\r\n      sortable: true,\r\n      wraptext: true,\r\n      resizable: true\r\n    }\r\n  }\r\n\r\n //self share list defination\r\n columnDefs = [\r\n  {\r\n    headerName: 'Action', field: 'fileIcon', cellRenderer: this.actionCellRenderer, minWidth: 80,\r\n    maxWidth: 110, resizable: true\r\n  },\r\n  { headerName: 'Exchange', field: 'exName', filter: true, sorting: true, resizable: true },\r\n  { headerName: 'ContraAccount', field: 'contraName', filter: true, sorting: true, resizable: true },\r\n  { headerName: 'FromDt', field: 'fromDtString', filter: true, sorting: true, resizable: true },\r\n  { headerName: 'ToDt', field: 'toDtString', filter: true, sorting: true, resizable: true },\r\n  { headerName: 'ApplyOn', field: 'applyOnName', filter: true, sorting: true, resizable: true },\r\n  { headerName: 'Rate', field: 'rate', filter: true, sorting: true, resizable: true, valueFormatter: params => CommonUtility.formatNumber(params.data.intradayRate), type: 'rightAligned' },\r\n];\r\n\r\n  constructor(public _masterService: MasterService, public dialogRef: MatDialogRef<AddAccountComponent>,private formBuilder: UntypedFormBuilder,private _appService: AppService, private _masterSeconedService: MasterSecondService, public dialog: MatDialog, public snackBar: MatSnackBar) { }\r\n\r\n  ngOnInit(): void {\r\n    this.bindacSelfShareFormControls();\r\n    this.initialApiCalls();\r\n  }\r\n\r\n  bindacSelfShareFormControls() {\r\n    this.acSelfShareForm = this.formBuilder.group({\r\n      'accountId': [0, Validators.required],\r\n      'contraId': ['', Validators.required],\r\n      'exId': ['', Validators.required],\r\n      'rate': ['', Validators.required],\r\n      'applyOn': ['', Validators.required],\r\n      'fromDt': ['', Validators.required],\r\n      'toDt': ['', Validators.required],\r\n      'id': [0],\r\n    });\r\n  }\r\n\r\npublic actionCellRenderer(params: any) {\r\n  let eGui = document.createElement(\"div\");\r\n  let editingCells = params.api.getEditingCells();\r\n  let isCurrentRowEditing = editingCells.some((cell: any) => {\r\n    return cell.rowIndex === params.node.rowIndex;\r\n  });\r\n  eGui.innerHTML = `<button class=\"material-icons action-button-edit \" data-action=\"edit\">edit </button>\r\n                    <button class=\"material-icons action-button-red\" delete data-action=\"delete\">delete</button>`;\r\n\r\n  return eGui;\r\n}\r\n\r\nclose(): void {\r\n  this.dialogRef.close();\r\n}\r\n\r\ninitialApiCalls() {\r\n  forkJoin([this._masterService.getExchangeName(), this._masterService.getAccount(), this._masterService.getApplyOnFileShareDDL(),]).pipe(map(response => {\r\n    \r\n    this.exchangeList = response[0];\r\n    this.acList = response[1];\r\n    this.applyOnFileShare = response[2];\r\n  })).subscribe(res => {\r\n  });\r\n  if(this.selectedAccountId){\r\n    this.getAccountSelfShareList();\r\n  }\r\n}\r\n\r\nhandleTabChange(event: MatTabChangeEvent): void {\r\n  if (event.index === 3) { // Assuming \"Interest\" tab has index 1\r\n    // Make your API calls here\r\n    console.log('Interest tab clicked, triggering API calls...');\r\n  }\r\n}\r\n\r\ngetAccountSelfShareList() {\r\n  this._masterService.getAccountSelfShareList(this.selectedAccountId).subscribe((results) => {\r\n    this.accountSelfShareList = results;\r\n\r\n  });\r\n}\r\n\r\npublic onSelfShare(values: Object): void {\r\n\r\n  if (this.selectedAccountId == 0) {\r\n    const dialogRef = this.dialog.open(ErrorDialog, {\r\n      data: {\r\n        message: 'Please select or save account to save account tax',\r\n        buttonText: {\r\n          ok: 'OK',\r\n\r\n        }\r\n      }\r\n\r\n    });\r\n  }\r\n  else {\r\n\r\n\r\n    this.acSelfShareForm.controls['rate'].setValue(Number(this.acSelfShareForm.get('rate').value));\r\n    this.acSelfShareForm.controls['accountId'].setValue(this.selectedAccountId);\r\n    var body = this.acSelfShareForm.value;\r\n\r\n    if (this.acSelfShareForm.valid) {\r\n      //const body = JSON.stringify(addFormData);\r\n      this._masterService.saveAccountSelfShare(body).subscribe(result => {\r\n        console.log(\"result\", result);\r\n        this.snackBar.open(\"Self Share details saved sucessfully.\", \"Success\", {\r\n          duration: 3000,\r\n        });\r\n        // this.dialogRef.close();\r\n        this.getAccountSelfShareList();\r\n        this.resetForm(this.acSelfShareForm);\r\n      }, err => {\r\n        console.log(err);\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n\r\nbindSelfShareFormInEditMode(res) {\r\n\r\n  this.acSelfShareForm.setValue({\r\n    'exId': res.exId,\r\n    'rate': CommonUtility.formatNumber(res.rate),\r\n    'fromDt': res.fromDt,\r\n    'toDt': res.toDt,\r\n    'id': res.id,\r\n    'applyOn': res.applyOn,\r\n    'contraId': res.contraId,\r\n    'accountId': res.accountId\r\n  });\r\n\r\n}\r\n\r\n\r\n  //account Self share clicked \r\n  onSelfShareClick(params: any) {\r\n\r\n    if (params.event.target.dataset.action == \"edit\") {\r\n      this._masterService.getAccountSelfShareEdit(params.data.id).subscribe((res) => {\r\n        this.bindSelfShareFormInEditMode(res);\r\n      });\r\n    }\r\n    if (params.event.target.dataset.action == \"delete\") {\r\n      const dialogRef = this.dialog.open(ConfirmationDialog, {\r\n        data: {\r\n          message: 'Do you really want to delete this record?',\r\n          buttonText: {\r\n            ok: 'Yes',\r\n            cancel: 'No'\r\n          }\r\n        }\r\n      });\r\n\r\n      dialogRef.afterClosed().subscribe((confirmed: boolean) => {\r\n        if (confirmed) {\r\n          this._masterService.deleteAccountSelfShare(params.data.id).subscribe((res) => {\r\n            this.getAccountSelfShareList();\r\n            if(res.isSuccess){\r\n              this.showToaster(res.message);\r\n            } else {\r\n              this.showToaster(res.message, true);\r\n            }\r\n          });\r\n        }\r\n      });\r\n\r\n\r\n    }\r\n  }\r\n\r\n  showToaster(message, isError = false) {\r\n    const panelClass = isError ? ['red-text'] : undefined;\r\n    const label = isError ? \"Error\" : \"Success\";\r\n    const time = isError? 6000 : 3000;\r\n  \r\n    this.snackBar.open(message, label, {\r\n      duration: time,\r\n      panelClass: panelClass,\r\n    });\r\n  }\r\n\r\n  resetForm(myForm) {\r\n    myForm.reset();\r\n    myForm.get('id').setValue(0);\r\n    Object.keys(myForm.controls).forEach(key => {\r\n      myForm.get(key).setErrors(null);\r\n    });\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"acSelfShareForm\" (ngSubmit)=\"onSelfShare(acSelfShareForm.value)\" fxLayout=\"row wrap\" class=\"user-form\">\r\n    <div class=\"tab-tax-details-parent tab-party-details-parent\">\r\n      <div class=\"white-block pb-0\">\r\n        <h3><span>Self Share</span></h3>\r\n        <div fxFlex=\"100\" fxFlex.gt-sm=\"15\" fxFlex.sm=\"50\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Exchange </mat-label>\r\n            <mat-select placeholder=\"Select Exchange\" formControlName=\"exId\">\r\n              <mat-option *ngFor=\"let exchange of exchangeList\" [value]=\"exchange.id\">\r\n                {{exchange.name}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"100\" fxFlex.gt-sm=\"14\" fxFlex.sm=\"50\">\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label>From</mat-label>\r\n            <input matInput [matDatepicker]=\"picker1\" formControlName=\"fromDt\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\r\n            <mat-datepicker #picker1></mat-datepicker>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"100\" fxFlex.gt-sm=\"14\" fxFlex.sm=\"50\">\r\n          <mat-form-field appearance=\"outline\">\r\n            <input matInput [matDatepicker]=\"picker2\" placeholder=\"To\" formControlName=\"toDt\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\r\n            <mat-datepicker #picker2></mat-datepicker>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"100\" fxFlex.gt-sm=\"13\" fxFlex.sm=\"50\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Apply On</mat-label>\r\n            <mat-select placeholder=\"Select value\" formControlName=\"applyOn\">\r\n              <mat-option *ngFor=\"let applyOn of applyOnFileShare\" [value]=\"applyOn.id\">\r\n                {{applyOn.name}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"100\" fxFlex.gt-sm=\"14\" fxFlex.sm=\"50\">\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label>Rate</mat-label>\r\n            <input matInput autocomplete=\"off\" placeholder=\"Rate\" formControlName=\"rate\" type=\"number\">\r\n            <mat-error *ngIf=\"acSelfShareForm.controls.rate.errors?.required\">DeliveryRate is required</mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"100\" fxFlex.gt-sm=\"30\" fxFlex.sm=\"50\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Contra Account </mat-label>\r\n            <mat-select placeholder=\"Select Exchange\" formControlName=\"contraId\">\r\n              <mat-option *ngFor=\"let account of acList\" [value]=\"account.id\">\r\n                {{account.name}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div fxFlex=\"100\" class=\"mt-2 text-center space-between-btns\">\r\n        <button mat-raised-button color=\"warn\" type=\"button\" (click)=\"close()\">Cancel</button>\r\n        <button mat-raised-button color=\"primary\" class=\"uppercase\" [disabled]=\"!acSelfShareForm.valid\" type=\"submit\">Save</button>\r\n      </div>\r\n    </div>\r\n  </form>\r\n  <div class=\"col-xl-12 mt-2\">\r\n    <ag-grid-angular style=\" height: 250px;\"\r\n                     class=\"ag-theme-material\"\r\n                     [rowData]=\"accountSelfShareList\"\r\n                     [pagination]=\"true\"\r\n                     [rowHeight]=\"31\"\r\n                     [columnDefs]=\"columnDefs\"\r\n                     [defaultColDef]=\"agGridOptions.defaultColDef\"\r\n                     (cellClicked)=\"onSelfShareClick($event)\"\r\n                     headerHeight=\"34\">\r\n    </ag-grid-angular>\r\n  </div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\r\n\r\nimport { AppSettings } from '../../../app.settings';\r\nimport { Settings } from '../../../app.settings.model';\r\nimport { CommonUtility } from '../../../shared/common-utility';\r\nimport { ConfirmationDialog } from '../../Dialog/confirmation-dialog/confirmation-dialog.component';\r\nimport { MasterService } from '../master.service';\r\nimport { AddAccountComponent } from './account-dialog/add-account.component';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  selector: 'app-blank',\r\n  templateUrl: './account.component.html',\r\n  styleUrls: ['./account.component.css']\r\n})\r\nexport class AccountComponent implements OnInit {\r\n\r\n  @ViewChild(DatatableComponent) table: DatatableComponent;\r\n  editing = {};\r\n  rows = [];\r\n  temp = [];\r\n  selected = [];\r\n  loadingIndicator: boolean = true;\r\n  reorderable: boolean = true;\r\n \r\n  public settings: Settings;\r\n  accountList: any;\r\n  constructor(public appSettings: AppSettings, public snackBar: MatSnackBar, private _masterService: MasterService, public dialog: MatDialog) {\r\n    this.settings = this.appSettings.settings;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getAccountList();\r\n  }\r\n\r\n  agGridOptions: any = {\r\n    defaultColDef: {\r\n      filter: true,\r\n      flex: 1,\r\n      sortable: true,\r\n      wraptext: true,\r\n      resizable: true,\r\n     \r\n    }\r\n     \r\n   \r\n  }\r\n  onGridReady(params) {\r\n  /*  params.api.sizeColumnsToFit();*/\r\n  }\r\n\r\n  columnDefs = [\r\n    {\r\n      headerName: 'Action', field: 'fileIcon', cellRenderer: this.actionCellRenderer, minWidth: 60,\r\n      maxWidth: 90, resizable: false, filter: false\r\n    },\r\n    { headerName: 'Code', field: 'shortCode', },\r\n    { headerName: 'Name', field: 'name', flex: 2 },\r\n    { headerName: 'Opbal', field: 'openingBal', flex:1, valueFormatter: params => Number(CommonUtility.formatNumber(params.data.openingBal)).toFixed(2), type: 'rightAligned' },\r\n    { headerName: 'PhoneNo', field: 'PhoneNo', flex:1 },\r\n    { headerName: 'Head', field: 'acHead', flex:1 },\r\n    { headerName: 'Group', field: 'acGroup' },\r\n    { headerName: 'CreatedDate', field: 'createdDateString' },\r\n    \r\n  ];\r\n\r\n  onActivate(event) {\r\n    console.log('Activate Event', event);\r\n  }\r\n\r\n  getAccountList() {\r\n    this._masterService.getAccounts().subscribe((results) => {\r\n      this.accountList = results;\r\n      console.log(this.accountList);\r\n    });\r\n  }\r\n\r\n  public actionCellRenderer(params: any) {\r\n    let eGui = document.createElement(\"div\");\r\n    let editingCells = params.api.getEditingCells();\r\n    let isCurrentRowEditing = editingCells.some((cell: any) => {\r\n      return cell.rowIndex === params.node.rowIndex;\r\n    });\r\n    eGui.innerHTML = `<button class=\"material-icons action-button-edit \" data-action=\"edit\">edit </button>\r\n                      <button class=\"material-icons action-button-red\" delete data-action=\"delete\">delete</button>`;\r\n\r\n    return eGui;\r\n  }\r\n\r\n  onGridClick(params: any)\r\n  {\r\n    if (params.event.target.dataset.action == \"edit\")\r\n    { \r\n      this._masterService.getAccountById(params.data.id).subscribe((res)=>{\r\n        console.log(res);\r\n        this.openUserDialog(res);\r\n      });\r\n    }\r\n    if (params.event.target.dataset.action == \"delete\")\r\n      {\r\n        const dialogRef = this.dialog.open(ConfirmationDialog, {\r\n          data: {\r\n            message: 'Do you really want to delete this record?',\r\n            buttonText: {\r\n              ok: 'Yes',\r\n              cancel: 'No'\r\n            }\r\n          }\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe((confirmed: boolean) => {\r\n          if (confirmed) {\r\n            this._masterService.deleteAccountById(params.data.id).subscribe((res) => {\r\n              this.getAccountList();\r\n              if(res.isSuccess){\r\n                this.showToaster(res.message);\r\n              } else {\r\n                this.showToaster(res.message, true);\r\n              }\r\n            });\r\n          }\r\n        });\r\n\r\n\r\n      }\r\n      \r\n\r\n  \r\n   \r\n  }\r\n\r\n  showToaster(message, isError = false) {\r\n    const panelClass = isError ? ['red-text'] : undefined;\r\n    const label = isError ? \"Error\" : \"Success\";\r\n    const time = isError? 6000 : 3000;\r\n  \r\n    this.snackBar.open(message, label, {\r\n      duration: time,\r\n      panelClass: panelClass,\r\n    });\r\n  }\r\n\r\n  public openUserDialog(user)\r\n  {\r\n    let dialogRef = this.dialog.open(AddAccountComponent, {\r\n      data: user\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(user => {\r\n      this.getAccountList();\r\n      if (user) {\r\n       /* (user.id) ? this.updateUser(user) : this.addUser(user);*/\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","\r\n<div class=\"row\">\r\n  <div fxLayout=\"row\" class=\"mt-2 flex-end\">\r\n    <button mat-raised-button color=\"primary\" class=\"delete-slab icon-btn\" >\r\n      <mat-icon>\r\n        <span class=\"material-icons-outlined\">        \r\n          file_download\r\n        </span>\r\n      </mat-icon> \r\n      Export\r\n    </button>\r\n    <button mat-raised-button color=\"accent\" (click)=\"openUserDialog(null)\" class=\"icon-btn ml-15\">\r\n      <mat-icon>add</mat-icon> Add Account\r\n    </button>\r\n  </div>\r\n  <div class=\"col-xl-12 mt-2\">\r\n    <ag-grid-angular style=\" height: 520px;\"\r\n                     class=\"ag-theme-material\"\r\n                     [rowData]=\"accountList\"\r\n                     [pagination]=\"true\"\r\n                       [rowHeight]=\"31\"\r\n                     [columnDefs]=\"columnDefs\"\r\n                     [defaultColDef]=\"agGridOptions.defaultColDef\"\r\n                     (cellClicked)=\"onGridClick($event)\"\r\n                     (gridReady)=\"onGridReady($event)\"\r\n                      headerHeight=\"34\">\r\n    </ag-grid-angular>\r\n  </div>\r\n</div>\r\n\r\n","export class Account {\r\n  id: number;\r\n  acGroup: number;\r\n  acHead: number;\r\n  shortCode: number;\r\n  cityId: number;\r\n  accountHeadId: number\r\n  accountGroupId: number\r\n  name: string;\r\n  openingBal: number;\r\n  phone: string;\r\n  mobile: string;\r\n  email: string;\r\n  address: string;\r\n  pin: string;\r\n  brokerId: number;\r\n  panNo: string\r\n  gstinno: string;\r\n  drCr: string;\r\n  telegramNo: string\r\n  telegramId: string\r\n  applyFutureCutBrok: boolean\r\n  applyOptionCutBrok: boolean\r\n  applyTax: boolean\r\n  taxType: number\r\n  exchange: number\r\n  IntraDayRate: number\r\n  InsType: number\r\n  DeliveryRate: number\r\n  FromDT: Date\r\n  ToDT: Date\r\n \r\n\r\n\r\n  createdDate: string;\r\n  createdBy: string;\r\n  lastModifiedDate: string;\r\n  lastModifiedBy: string;\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MasterService } from '../../master.service';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { ConfirmationDialog } from 'src/app/Forms/Dialog/confirmation-dialog/confirmation-dialog.component';\r\nimport { forkJoin, map } from 'rxjs';\r\nimport { ConfirmationAccountDialog } from 'src/app/Forms/Dialog/confirmation-dialog/confirmation-account-dialog.component';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  selector: 'app-add-account',\r\n  templateUrl: './add-branch-account.component.html',\r\n  styleUrls: ['./add-branch-account.component.scss']\r\n})\r\nexport class AddBranchAccountComponent implements OnInit {\r\n\r\n  accountList: any[] = [];\r\n  filteredAccountList: any[];\r\n  public branchForm: UntypedFormGroup;\r\n  public accountForm: UntypedFormGroup;\r\n  selectedBranchID: any;\r\n  branchIDAccountList: any[] = [];\r\n  gridApi: any;\r\n  gridApiSelectAc: any;\r\n  isRowSelected: boolean = false;\r\n  showInReport: boolean = false\r\n  isPartyMTM: boolean\r\n  setValue: boolean\r\n  filteredHeadList: any[] = []\r\n  agGridOptions: any = {\r\n    suppressRowHoverHighlight: true,\r\n  }\r\n\r\n  columnDefsSelectAc = [{\r\n    headerName: 'Select account',\r\n    children: [\r\n      {\r\n        headerName: '', editable: false, width: 5, minwidth: 5, maxwidth: 5, resizable: false, checkboxSelection: true, headerCheckboxSelection: true,\r\n      },\r\n      { headerName: 'Name', field: 'name', filter: true, sorting: true, resizable: true, flex: 1 },\r\n    ]\r\n  }\r\n  ];\r\n\r\n  columnDefs = [{\r\n    headerName: 'Added account list',\r\n    children: [\r\n\r\n      {\r\n        headerName: '', editable: false,width:5, minwidth: 5, maxwidth: 5, resizable: false, checkboxSelection: true, headerCheckboxSelection: true,\r\n      },\r\n      { headerName: 'Account', field: 'account', filter: true, sorting: true, resizable: true, flex: 1 },\r\n      { headerName: 'show In Report', field: 'showInReport', filter: false, sorting: false, resizable: true, flex: 1 },\r\n      { headerName: 'is Party MTM', field: 'isPartyMTM', filter: false, sorting: false, resizable: true, flex: 1 }\r\n    ]\r\n  }\r\n  ];\r\n  constructor(public snackBar: MatSnackBar, private formBuilder: UntypedFormBuilder, public dialog: MatDialog, @Inject(MAT_DIALOG_DATA) public data: any, private _masterService: MasterService, public dialogRef: MatDialogRef<AddBranchAccountComponent>) { \r\n    this.selectedBranchID = data.branchID;\r\n  }\r\n\r\n  showToaster(message, isError = false) {\r\n    const panelClass = isError ? ['red-text'] : undefined;\r\n    const label = isError ? \"Error\" : \"Success\";\r\n    const time = isError? 6000 : 3000;\r\n  \r\n    this.snackBar.open(message, label, {\r\n      duration: time,\r\n      panelClass: panelClass,\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {    \r\n    this.bindFormControls();\r\n    this.getBranchAccountIDs();\r\n    this.getAccounts();\r\n    this.getApiData();\r\n  }\r\n\r\n  public actionCellRenderer(params: any) {\r\n    let eGui = document.createElement(\"div\");\r\n    let editingCells = params.api.getEditingCells();\r\n    let isCurrentRowEditing = editingCells.some((cell: any) => {\r\n      return cell.rowIndex === params.node.rowIndex;\r\n    });\r\n    eGui.innerHTML = `<button class=\"material-icons action-button-red\" delete data-action=\"delete\">delete</button>`;\r\n    return eGui;\r\n  }\r\n\r\n  onGridReady(event) { this.gridApi = event.api; }\r\n\r\n  onGridReadySelectAc(event) { this.gridApiSelectAc = event.api; }\r\n\r\n  getBranchAccountIDs()  {\r\n    this._masterService.getAccountsAddedinBranch(this.selectedBranchID).subscribe((res) => {\r\n      this.branchIDAccountList = res;\r\n    });\r\n  }\r\n\r\n  getAccounts() {\r\n    this._masterService.getAccountsForBranch(this.selectedBranchID).subscribe((res) => {\r\n      this.accountList = res;\r\n    });\r\n  }\r\n\r\n  getApiData() {\r\n    if (this.selectedBranchID) {\r\n      this._masterService.getBranchId(this.selectedBranchID).subscribe((res) => {\r\n        this.branchForm.patchValue({\r\n          name: res.name\r\n        });\r\n      });\r\n      this.getBranchAccountIDs();\r\n    }\r\n  }\r\n\r\n\r\n  checkSelectedRowSelectAc(event: any) {\r\n    var selectedRow = this.gridApiSelectAc.getSelectedRows();\r\n    if (selectedRow.length > 0) { this.isRowSelected = true; }\r\n    else { this.isRowSelected = false; }\r\n  }\r\n\r\n  checkSelectedRow(event: any)  {\r\n    var selectedRow = this.gridApi.getSelectedRows();\r\n    if (selectedRow.length > 0) { this.isRowSelected = true; }\r\n    else { this.isRowSelected = false; }\r\n  }\r\n\r\n  onSubmitFromDialog(checked, MTM) {    \r\n    var selectAccount = this.gridApiSelectAc.getSelectedRows();\r\n    const body = {\r\n      dropDownVMs: selectAccount,\r\n      BranchId: this.selectedBranchID,\r\n      showInReport: checked,\r\n      isPartyMTM: MTM\r\n    };\r\n    this._masterService.addBranchAccount(body).subscribe(result => {\r\n      this.getBranchAccountIDs();\r\n    });\r\n  }\r\n\r\n  selectAccounts()  {\r\n    var dialogRef = this.dialog.open(ConfirmationAccountDialog, {\r\n      data: {\r\n        message: 'Please select option',\r\n        content: ``,\r\n        buttonText: {\r\n          ok: 'Submit',\r\n          cancel: 'Cancel'\r\n        }\r\n      }\r\n    });\r\n\r\n    dialogRef.componentInstance.submitClicked.subscribe((res) => {\r\n      debugger;\r\n      this.onSubmitFromDialog(res.checked, res.MTM);\r\n    });\r\n  \r\n  }\r\n\r\n  removeAccounts() {\r\n    var selectAccount = this.gridApi.getSelectedRows();\r\n    const body = {\r\n      dropDownVMs: selectAccount,\r\n      BranchId: this.selectedBranchID\r\n    };\r\n\r\n    this._masterService.deleteBranchAccount(body).subscribe(res => {\r\n      /* this.selectedBranchID = result.id;*/\r\n      if(res.isSuccess){\r\n        this.showToaster(res.message);\r\n        this.getBranchAccountIDs();\r\n      } else {\r\n        this.showToaster(res.message, true);\r\n      }\r\n    });\r\n  }\r\n\r\n  initialApiCalls() {\r\n    forkJoin([this._masterService.getAccount()]).pipe(map(response => {\r\n      this.filteredHeadList = response[0];\r\n      this.accountList = response[0];\r\n    })).subscribe(res => {\r\n    \r\n    });\r\n  }\r\n\r\n  onInputChange(event: any) {\r\n    const searchInput = event.target.value.toLowerCase();\r\n    this.filteredHeadList = this.accountList.filter((data) => {\r\n      const prov = data.name.toLowerCase();\r\n      return prov.includes(searchInput);\r\n    });\r\n    if (searchInput === '') {\r\n      this.filteredHeadList = [...this.accountList];\r\n    }\r\n  }\r\n\r\n  bindFormControls() {\r\n    this.branchForm = this.formBuilder.group({\r\n      'name': ['', Validators.required],\r\n      'headId': ['', Validators.required],\r\n      'contraAcId': ['', Validators.required],\r\n      'chatid': ['', Validators.required],\r\n      // 'id': [this.selectedBranchID]\r\n      'id': [0]\r\n    });\r\n    this.accountForm = this.formBuilder.group({\r\n      'accountIds': ['', Validators.required]\r\n    });\r\n    this.initialApiCalls();\r\n  }\r\n\r\n  public onSubmit(values: Object): void {\r\n    var h = this.gridApi.getSelectedRows();\r\n    var body = this.branchForm.value;\r\n    if (this.branchForm.valid) {\r\n      this._masterService.saveBranch(body).subscribe(result => {\r\n        this.dialogRef.close();\r\n        this.selectedBranchID = result.id;\r\n      });\r\n    }\r\n  }\r\n  public onAccountSubmit(values: Object): void {\r\n    if( !this.selectedBranchID){\r\n      alert('Please save branch');\r\n      return;\r\n    }\r\n    var body = this.accountForm.value;\r\n    console.log(body);\r\n    const reqObj = {\r\n      \"branchId\": this.selectedBranchID,\r\n      \"accountIds\": body.accountIds.join()\r\n    }\r\n    if (this.accountForm.valid) {\r\n      this._masterService.addBranchAccount(reqObj).subscribe(result => {\r\n        console.log(\"result\", result);\r\n        this.getBranchAccountIDs();\r\n      });\r\n    }\r\n  }\r\n  close(): void {\r\n    this.dialogRef.close();\r\n}\r\n\r\n}\r\n","<h2 class=\"heading mb-10\">Branch</h2>\r\n<a (click)=\"close()\" class=\"close-btn\">\r\n  <span class=\"material-symbols-outlined\">\r\n    <mat-icon>close</mat-icon>\r\n  </span>\r\n</a>\r\n<mat-tab-group>\r\n  <mat-tab label=\"Branch\">\r\n    <form [formGroup]=\"branchForm\" (ngSubmit)=\"onSubmit(branchForm.value)\" fxLayout=\"row wrap\" class=\"user-form\">\r\n        <div class=\"tab-party-details-parent\">\r\n          <div class=\"white-block pb-0\">\r\n            <h3><span>Branch</span></h3>\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"33.33\" fxFlex.sm=\"33.33\">\r\n              <mat-form-field appearance=\"outline\">\r\n                <mat-label>Name</mat-label>\r\n                <input matInput autocomplete=\"off\" placeholder=\"item Name\" formControlName=\"name\" type=\"text\">\r\n                <mat-error *ngIf=\"branchForm.controls.name.errors?.required\">Branch Name is required</mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"33.33\" fxFlex.sm=\"33.33\">\r\n              <div class=\"dropdown-wrapper\">\r\n                <mat-form-field class=\"select-slab-mat\" appearance=\"outline\">\r\n                  <mat-label>Select Head</mat-label>\r\n                  <mat-select #select placeholder=\"Select Head\" panelClass=\"custom-select-panel\" formControlName=\"headId\">\r\n                    <input class=\"milti-search-box\" #multiUserSearch type=\"text\" autocomplete=\"off\" matInput placeholder=\"Search Head\" (input)=\"onInputChange($event)\" />\r\n                    <mat-option *ngFor=\"let option of filteredHeadList\" [value]=\"option.id\">\r\n                      {{ option.name }}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"33.33\" fxFlex.sm=\"33.33\">\r\n              <div class=\"dropdown-wrapper\">\r\n                <mat-form-field class=\"select-slab-mat\" appearance=\"outline\">\r\n                  <mat-label>Contra Id</mat-label>\r\n                  <mat-select #select placeholder=\"Select Contra Id\" panelClass=\"custom-select-panel\" formControlName=\"contraAcId\">\r\n                    <input class=\"milti-search-box\" #multiUserSearch type=\"text\" autocomplete=\"off\" matInput placeholder=\"Search Contra Id\" (input)=\"onInputChange($event)\" />\r\n                    <mat-option *ngFor=\"let option of filteredHeadList\" [value]=\"option.id\">\r\n                      {{ option.name }}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"33.33\" fxFlex.sm=\"33.33\">\r\n              <mat-form-field appearance=\"outline\">\r\n                <mat-label>Chat Id</mat-label>\r\n                <input matInput autocomplete=\"off\" placeholder=\"Chat Id\" formControlName=\"chatid\" type=\"text\">\r\n                <mat-error *ngIf=\"branchForm.controls.chatid.errors?.required\">Chat Id is required</mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>          \r\n        </div>\r\n        <div fxFlex=\"100\" class=\"mt-2 text-center space-between-btns\">\r\n          <button mat-raised-button color=\"warn\" type=\"button\" (click)=\"close()\">Cancel</button>\r\n          <button mat-raised-button color=\"primary\" class=\"uppercase\" [disabled]=\"!branchForm.valid\" type=\"submit\">Save</button>\r\n        </div>\r\n    </form>\r\n  </mat-tab>\r\n  <mat-tab label=\"Account\">\r\n    <div class=\"row branch-account\">\r\n      <div fxFlex=\"40\">        \r\n        <ag-grid-angular style=\" height: 300px;\"\r\n                         class=\"ag-theme-material mt-2\"\r\n                         [rowData]=\"accountList\"\r\n                         [pagination]=\"true\"\r\n                         [rowHeight]=\"31\"\r\n                         [columnDefs]=\"columnDefsSelectAc\"\r\n                         [rowSelection]=\"'multiple'\"\r\n                         [rowMultiSelectWithClick]=\"true\"\r\n                         [defaultColDef]=\"agGridOptions.defaultColDef\"                        \r\n                         (gridReady)=\"onGridReadySelectAc($event)\"\r\n                         (selectionChanged)=\"checkSelectedRowSelectAc($event)\"\r\n                         headerHeight=\"34\">\r\n        </ag-grid-angular>\r\n      </div>\r\n      <div fxFlex=\"15\" class=\"text-center\">\r\n        <div class=\"pt-10 mb-10\">\r\n          <button mat-raised-button (click)=\"selectAccounts()\" color=\"primary\" type=\"button\">\r\n            <mat-icon>\r\n              <span class=\"material-symbols-outlined\">\r\n                arrow_forward_ios\r\n              </span>\r\n            </mat-icon>\r\n          </button>\r\n        </div>\r\n        <button mat-raised-button color=\"warn\" (click)=\"removeAccounts()\" type=\"button\">\r\n          <mat-icon>\r\n            <span class=\"material-symbols-outlined\">\r\n              arrow_back_ios\r\n            </span>\r\n          </mat-icon>\r\n        </button>\r\n      </div>\r\n      <div fxFlex=\"45\">\r\n        <!--<span class=\"material-symbols-outlined delete-icon\">\r\n          <mat-icon>delete_sweep</mat-icon>\r\n        </span>-->\r\n        <ag-grid-angular style=\" height: 300px;\"\r\n                         class=\"ag-theme-material mt-2\"\r\n                         [rowData]=\"branchIDAccountList\"\r\n                         [pagination]=\"true\"\r\n                         [rowHeight]=\"31\"\r\n                         [columnDefs]=\"columnDefs\"\r\n                         [rowSelection]=\"'multiple'\"\r\n                         [rowMultiSelectWithClick]=\"true\"\r\n                         [defaultColDef]=\"agGridOptions.defaultColDef\"\r\n                         (gridReady)=\"onGridReady($event)\"\r\n                         (selectionChanged)=\"checkSelectedRow($event)\"\r\n                         headerHeight=\"34\">\r\n        </ag-grid-angular>\r\n      </div>\r\n    </div>\r\n      \r\n      \r\n\r\n\r\n  </mat-tab>\r\n</mat-tab-group>        \r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { AppSettings } from 'src/app/app.settings';\r\nimport { AppService } from 'src/app/service/app.service';\r\nimport { MasterService } from '../master.service';\r\nimport { Settings } from 'src/app/app.settings.model';\r\nimport { ConfirmationDialog } from '../../Dialog/confirmation-dialog/confirmation-dialog.component';\r\nimport { AddBranchAccountComponent } from './add-branch-account/add-branch-account.component';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  selector: 'app-branch',\r\n  templateUrl: './branch.component.html',\r\n  styleUrls: ['./branch.component.scss']\r\n})\r\nexport class BranchComponent implements OnInit {\r\n\r\n  public settings: Settings;\r\n  slabList: any[];\r\n  agGridOptions: any = {\r\n    defaultColDef: {\r\n      filter: true,\r\n      flex:1,\r\n      sortable: true,\r\n      wraptext: true,\r\n      resizable: true,\r\n      minWidth: 100,\r\n    \r\n    },\r\n    suppressRowHoverHighlight: true,\r\n  }\r\n  columnDefs = [\r\n    {\r\n      headerName: 'Action', field: 'fileIcon', cellRenderer: this.actionCellRenderer, resizable: true, filter: false\r\n    },\r\n    { headerName: 'Name',  field: 'name', filter: true, sorting: true, resizable: true },\r\n    { headerName: 'Head',  field: 'headId', filter: true, sorting: true, resizable: true },\r\n    { headerName: 'Contra Id',  field: 'contraAcId', filter: true, sorting: true, resizable: true },\r\n    { headerName: 'Chat Id',  field: 'chatId', filter: true, sorting: true, resizable: true }\r\n  ];\r\n  constructor(public snackBar: MatSnackBar, public appSettings: AppSettings, private _appService: AppService, public dialog: MatDialog, private _masterService: MasterService) {\r\n    this.settings = this.appSettings.settings;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getLoadData();\r\n  }\r\n\r\n  getLoadData() {\r\n    this._masterService.getBranchList().subscribe((response) => { this.slabList = response });\r\n  }\r\n\r\n  public actionCellRenderer(params: any) {\r\n    let eGui = document.createElement(\"div\");\r\n    let editingCells = params.api.getEditingCells();\r\n    let isCurrentRowEditing = editingCells.some((cell: any) => {\r\n      return cell.rowIndex === params.node.rowIndex;\r\n    });\r\n    eGui.innerHTML = `<button class=\"material-icons action-button-edit\" data-action=\"edit\">edit </button>\r\n                      <button class=\"material-icons action-button-red\" delete data-action=\"delete\">delete</button>`;\r\n\r\n    return eGui;\r\n}\r\n\r\npublic openAccountDialog(selectedBranchId) {\r\n  let dialogRef = this.dialog.open(AddBranchAccountComponent, {\r\n      data: { \r\n          branchID: selectedBranchId,\r\n      }\r\n  });\r\n\r\n  dialogRef.afterClosed().subscribe(user => {\r\n    this.getLoadData();\r\n  });\r\n}\r\n\r\nonGridReady(event) { }\r\n\r\nshowToaster(message, isError = false) {\r\n  const panelClass = isError ? ['red-text'] : undefined;\r\n  const label = isError ? \"Error\" : \"Success\";\r\n  const time = isError? 6000 : 3000;\r\n\r\n  this.snackBar.open(message, label, {\r\n    duration: time,\r\n    panelClass: panelClass,\r\n  });\r\n}\r\n\r\nonGridClick(params: any) {\r\n  if (params.event.target.dataset.action == \"edit\")\r\n  {\r\n    this.openAccountDialog(params.data.id);\r\n\r\n  }\r\n  if (params.event.target.dataset.action == \"delete\")\r\n  {\r\n    const dialogRef = this.dialog.open(ConfirmationDialog, {\r\n      data: {\r\n        message: 'Do you really want to delete this record?',\r\n        buttonText: {\r\n          ok: 'Yes',\r\n          cancel: 'No'\r\n        }\r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((confirmed: boolean) => {\r\n      if (confirmed) {\r\n        this._masterService.deleteBranch(params.data.id).subscribe((res) => {\r\n          if(res.isSuccess){\r\n            this.getLoadData();\r\n            this.showToaster(res.message);\r\n          } else {\r\n            this.showToaster(res.message, true);\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n\r\n  }\r\n}\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" class=\"mt-2\">\r\n      <div class=\"dropdown-container\">\r\n        <div class=\"dropdown-wrapper\">\r\n        </div>\r\n        </div>\r\n        <div>\r\n          <button mat-raised-button color=\"accent\" (click)=\"openAccountDialog(null)\" class=\"icon-btn ml-15\">\r\n            <mat-icon>add</mat-icon> Add Branch\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-xl-12 mt-2\">\r\n        <ag-grid-angular style=\" height: 535px;\"\r\n                         class=\"ag-theme-material\"\r\n                         [rowData]=\"slabList\"\r\n                         [pagination]=\"true\"\r\n                         [rowHeight]=\"31\"\r\n                         [columnDefs]=\"columnDefs\"\r\n                         [defaultColDef]=\"agGridOptions.defaultColDef\"\r\n                         (cellClicked)=\"onGridClick($event)\"\r\n                         (gridReady)=\"onGridReady($event)\"\r\n                          headerHeight=\"34\">\r\n        </ag-grid-angular>\r\n      </div>\r\n    </div>  \r\n  ","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { MasterService } from '../../master.service';\r\nimport { forkJoin, map } from 'rxjs';\r\nimport { DatePipe, formatDate } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-add-setup-details',\r\n  templateUrl: './add-setup-details.component.html',\r\n  styleUrls: ['./add-setup-details.component.scss']\r\n})\r\nexport class AddSetupDetailsComponent implements OnInit {\r\n\r\n  public itemForm: UntypedFormGroup;\r\n  exchangeList: any;\r\n  selectedId: any;\r\n  instrumentList: any;\r\n  itemList: any;\r\n  applyOnQtyList: any;\r\n  applyOnList: any;\r\n  salbId: any;\r\n  accountList: any;\r\n  parentData: any;\r\n  isEditMode: any;\r\n\r\n\r\n  constructor(private datePipe: DatePipe, private formBuilder: UntypedFormBuilder, public dialogRef: MatDialogRef<AddSetupDetailsComponent>, @Inject(MAT_DIALOG_DATA) public data: any, private _appService: MasterService) {\r\n   this.salbId = data.slabId;\r\n   this.parentData = data;\r\n  }\r\n\r\n  bindFormControls() {\r\n    this.itemForm = this.formBuilder.group({\r\n     'applyOn': ['', Validators.required],\r\n     'applyOnQty': ['', Validators.required],\r\n     'deliveryBrokRate': ['', Validators.required],\r\n     'intradayBrokRate': ['', Validators.required],\r\n     'intradaySingleSideonly': [false],\r\n     'id':[0],\r\n    });\r\n   this.initialApiCalls();\r\n}\r\n\r\ninitialApiCalls() {\r\n  forkJoin([this._appService.getExchangeName(), this._appService.getInstrumentList(), this._appService.getItemListDrp(),\r\n    this._appService.getApplyOnQtyDDL(),\r\n    this._appService.getApplyOnDDL(),\r\n    this._appService.getAccount(),\r\n  ]).pipe(map(response => {\r\n    this.exchangeList = response[0];\r\n    this.instrumentList = response[1];\r\n    this.itemList = response[2]\r\n    this.applyOnQtyList = response[3]\r\n    this.applyOnList = response[4];\r\n    this.accountList = response[5];\r\n  })).subscribe(res => {\r\n    \r\n  });\r\n}\r\n\r\n  ngOnInit(): void {\r\n    this.bindFormControls();\r\n    this.isEditMode = this.parentData.isEditMode\r\n    if(this.parentData.isEditMode === 2 && this.parentData.editParms){\r\n      this.getSelectedSlabDetailsInfo(this.parentData.editParms);\r\n    }\r\n  }\r\n\r\n  getSelectedSlabDetailsInfo(editParms) {\r\n      this.itemForm.patchValue({\r\n        applyOn: editParms.applyOn,\r\n        applyOnQty: editParms.applyOnQty,\r\n        deliveryBrokRate: editParms.deliveryBrokRate,\r\n        intradayBrokRate: editParms.intradayBrokRate,\r\n        intradaySingleSideonly: editParms.intradaySingleSideonly\r\n      });\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  public onSubmit(values: object) {\r\n    console.log(values);\r\n    var body = this.itemForm.value;\r\n    console.log(body);\r\n    body.slabId = this.salbId;\r\n    body.id = this.parentData.isEditMode;\r\n\r\n    body.accounts = this.parentData.accountIds.filter((val)=> val != -1);;\r\n    \r\n    body.fromDate = this.datePipe.transform(this.parentData.fromDt, 'yyyy-MM-dd');\r\n    body.toDate = this.datePipe.transform(this.parentData.toDt, 'yyyy-MM-dd');\r\n    body.instrumentType = this.parentData.instrumentType;\r\n    body.itemGroupId = this.parentData.itemGroupIds;\r\n    body.higherSideOnly= false;\r\n\r\n    if (this.itemForm.valid) {\r\n      //const body = JSON.stringify(addFormData);\r\n      if(this.parentData.isEditMode === 2){\r\n        body.id = this.parentData.editParms.id;\r\n        this._appService.updateSingleBrokerage(body).subscribe(result => {\r\n          this.dialogRef.close();\r\n        });\r\n      } else {\r\n        this._appService.saveBrokerageSetup(body).subscribe(result => {\r\n          console.log(\"result\", result);\r\n          this.dialogRef.close();\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","<h2 class=\"heading\" *ngIf=\"isEditMode == 0; else modifyEditHeading\">\r\n  Add Brokerage\r\n</h2>\r\n<ng-template #modifyEditHeading>\r\n  <h2 class=\"heading\" *ngIf=\"isEditMode == 1\">Modify Brokerage</h2>\r\n  <h2 class=\"heading\" *ngIf=\"isEditMode == 2\">Edit Brokerage</h2>\r\n</ng-template>\r\n<a (click)=\"close()\" class=\"close-btn\">\r\n  <span class=\"material-symbols-outlined\">\r\n    <mat-icon>close</mat-icon>\r\n  </span>\r\n</a>\r\n<form [formGroup]=\"itemForm\" (ngSubmit)=\"onSubmit(itemForm.value)\" fxLayout=\"row wrap\" class=\"user-form\">\r\n    <div class=\"white-block pb-5\">\r\n        <h3><span>Brokerage</span></h3>\r\n        <div class=\"tab-party-details-parent\">\r\n              <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>ApplyOn</mat-label>\r\n                \r\n                  <mat-select placeholder=\"Select Item\" formControlName=\"applyOn\">\r\n                    <!--<input (keyup)=\"onKey($event.target.value)\">-->\r\n                    <mat-option *ngFor=\"let item of applyOnList\" [value]=\"item.id\">\r\n                      {{item.name}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n              <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>ApplyOnQTY</mat-label>\r\n                \r\n                  <mat-select placeholder=\"Select Item\" formControlName=\"applyOnQty\">\r\n                    <!--<input (keyup)=\"onKey($event.target.value)\">-->\r\n                    <mat-option *ngFor=\"let item of applyOnQtyList\" [value]=\"item.id\">\r\n                      {{item.name}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n              <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>DeliveryBrokeRate</mat-label>\r\n                    <input matInput autocomplete=\"off\" placeholder=\"item Code\" formControlName=\"deliveryBrokRate\" type=\"number\">\r\n                    <mat-error *ngIf=\"itemForm.controls.deliveryBrokRate.errors?.required\">DeliveryBrokeRate is required</mat-error>                \r\n                </mat-form-field> \r\n            </div>\r\n              <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>IntraDayBrokeRate</mat-label>\r\n                    <input matInput autocomplete=\"off\" placeholder=\"item Code\" formControlName=\"intradayBrokRate\" type=\"number\">\r\n                    <mat-error *ngIf=\"itemForm.controls.intradayBrokRate.errors?.required\">IntraDayBrokeRate is required</mat-error>                \r\n                </mat-form-field> \r\n            </div>\r\n              <!-- <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Range1</mat-label>\r\n                    <input matInput autocomplete=\"off\" placeholder=\"Range2\" formControlName=\"rateRange1\" type=\"number\">\r\n                    <mat-error *ngIf=\"itemForm.controls.rateRange1.errors?.required\">Range1 is required</mat-error>                \r\n                </mat-form-field> \r\n            </div>\r\n\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Range2</mat-label>\r\n                    <input matInput autocomplete=\"off\" placeholder=\"Range\" formControlName=\"rateRange2\" type=\"number\">\r\n                    <mat-error *ngIf=\"itemForm.controls.rateRange2.errors?.required\">Range2 is required</mat-error>                \r\n                </mat-form-field> \r\n            </div> -->\r\n            \r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\" class=\"pt-5 pb-5 pl-10\">\r\n                <mat-checkbox formControlName=\"intradaySingleSideonly\">Intradaysingleside</mat-checkbox>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div fxFlex=\"100\" class=\"mt-2 text-center space-between-btns\">\r\n        <button mat-raised-button color=\"warn\" type=\"button\" (click)=\"close()\">Cancel</button>            \r\n        <button mat-raised-button color=\"primary\" class=\"uppercase\" [disabled]=\"!itemForm.valid\" type=\"submit\">Save</button> \r\n    </div>\r\n</form>\r\n","import { Component, OnInit, Inject, ViewChild } from '@angular/core';\r\nimport { AppSettings } from \"src/app/app.settings\";\r\nimport { Settings } from \"src/app/app.settings.model\";\r\nimport { MasterService } from \"../master.service\";\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSelect } from '@angular/material/select';\r\nimport { MatOption } from '@angular/material/core';\r\nimport { AppService } from 'src/app/service/app.service';\r\nimport { AddSetupDetailsComponent } from './add-setup-details/add-setup-details.component';\r\nimport { ConfirmationDialog } from '../../Dialog/confirmation-dialog/confirmation-dialog.component';\r\nimport { CommonUtility } from 'src/app/shared/common-utility';\r\nimport { forkJoin, map } from 'rxjs';\r\nimport { MasterSecondService } from '../master-second.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { DatePipe } from '@angular/common';\r\nimport { LockBrokerageComponent } from './lock-brokerage/lock-brokerage.component';\r\nimport { ViewItemGroupComponent } from './view-item-group/view-item-group.component';\r\n\r\n@Component({\r\n  selector: 'app-brokerage-setup',\r\n    templateUrl: './brokerage-setup.component.html',\r\n  styleUrls: ['./brokerage-setup.component.scss']\r\n})\r\n\r\nexport class BrokerageSetupComponent implements OnInit {\r\n  @ViewChild('select') select: MatSelect;\r\n  @ViewChild('selectAccount') selectAccount: MatSelect;\r\n  public settings: Settings;\r\n  slabId: number;\r\n  slabList: any[];\r\n  fromDt: any;\r\n  toDt: any;\r\n  accountList: any[];\r\n  branchList: any[];\r\n  instrumentList: any[];\r\n  instrumentType: any;\r\n  itemGroupIds: any;\r\n  filteredItemGroup: any;\r\n  itemGroupIdList: any;\r\n\r\n  searchedData: any;\r\n  branchIds: Array<string>;\r\n  accountIds: any[];\r\n  filteredProviders: any[];\r\n  filteredAccountList: any[];\r\n  brokeragesetupList: any = [];\r\n  branchAllSellected: boolean = false;\r\n  companydetails:any;\r\n\r\n  constructor(private datePipe: DatePipe, public snackBar: MatSnackBar, public appSettings: AppSettings, private _appService: AppService, public dialog: MatDialog, private _masterService: MasterService, private _masterSecondService: MasterSecondService) {\r\n    this.settings = this.appSettings.settings;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.fetchDropdownData();\r\n    this.getBrokerageSetupList();\r\n  }\r\n\r\n  agGridOptions: any = {\r\n    defaultColDef: {\r\n      filter: true,\r\n       flex:1,\r\n      sortable: true,\r\n      wraptext: true,\r\n      resizable: true,\r\n      minWidth: 100,\r\n    \r\n    },\r\n    suppressRowHoverHighlight: true,\r\n   \r\n    //suppressSizeToFit: true,\r\n    \r\n  }\r\n  onGridReady(event) { }\r\n\r\n  columnDefs = [\r\n    {\r\n      headerName: 'Action', field: 'fileIcon', cellRenderer: this.actionCellRenderer, resizable: true, filter: false\r\n    },\r\n    { headerName: 'ApplyOn',  field: 'applyOnName', filter: true, sorting: true, resizable: true },\r\n    { headerName: 'Apply OnQty',  field: 'applyOnQtyName', filter: true, sorting: true, resizable: true },\r\n    { field: 'Intraday BrokRate',   headerName: 'IntradayBrokRate', filter: true, sorting: true, resizable: true, valueFormatter: params => CommonUtility.formatNumber(params.data.intradayBrokRate) },\r\n    { headerName: 'Delivery BrokRate', field: 'deliveryBrokRate', filter: true, sorting: true, resizable: true, valueFormatter: params => CommonUtility.formatNumber(params.data.deliveryBrokRate)},    \r\n    /*{ headerName: 'HigherSide Only', minWidth: 120, maxWidth: 120, field: 'higherSideOnly', filter: true, sorting: true, resizable: true },*/\r\n    { headerName: 'Instrument',   field: 'instrumentType', filter: true, sorting: true, resizable: true },\r\n/*    { headerName: 'IntradaySingleSideOnly', field: 'intradaySingleSideOnly', filter: true, sorting: true, resizable: true },*/\r\n    { headerName: 'FromDT', field: 'fromDT',   filter: true, sorting: true, resizable: true },\r\n    { headerName: 'ToDT', field: 'toDT',  filter: true, sorting: true, resizable: true },\r\n    \r\n  ];\r\n\r\n  getBrokerageSetupList() {\r\n    if(this.areRequiredValuesSelected()){\r\n      var accountIds = this.accountIds.filter((val)=> val != -1);\r\n      var req = {\r\n        \"itemGroupId\": this.itemGroupIds,\r\n        \"accounts\": accountIds,\r\n        \"fromDate\": this.datePipe.transform(this.fromDt, 'yyyy-MM-dd'),\r\n        \"toDate\": this.datePipe.transform(this.toDt, 'yyyy-MM-dd'),\r\n        \"instrumentType\": this.instrumentType\r\n      };\r\n      this._appService.getBrokerageSetupList(req).subscribe((results) => {\r\n        this.searchedData = req;\r\n       this.brokeragesetupList = results.data;       \r\n      });\r\n    }\r\n  }\r\n\r\n  async getBrokerageAddValidation(): Promise<string> {\r\n    const accountIds = this.accountIds.filter((val) => val != \"-1\");\r\n    const req = {\r\n      itemGroupId: this.itemGroupIds,\r\n      accounts: accountIds,\r\n      fromDate: this.datePipe.transform(this.fromDt, 'yyyy-MM-dd'),\r\n      toDate: this.datePipe.transform(this.toDt, 'yyyy-MM-dd'),\r\n      instrumentType: this.instrumentType,\r\n    };\r\n  \r\n    try {\r\n      const results = await this._appService.getBrokerageAddValidation(req).toPromise();\r\n  \r\n      if (results.message) {\r\n        this.showToaster(results.message);\r\n        this.searchedData = req;\r\n        this.brokeragesetupList = results.data;\r\n        return results.message;\r\n      } else {\r\n        return results.message;\r\n      }\r\n    } catch (error) {\r\n      // Handle error here\r\n      console.error('Error during validation:', error);\r\n      return '';\r\n    }\r\n  }\r\n\r\n  showToaster(message, isError = false) {\r\n    const panelClass = isError ? ['red-text'] : undefined;\r\n    const label = isError ? \"Error\" : \"Success\";\r\n    const time = isError? 6000 : 3000;\r\n  \r\n    this.snackBar.open(message, label, {\r\n      duration: time,\r\n      panelClass: panelClass,\r\n    });\r\n  }\r\n\r\n  areRequiredValuesSelected(): boolean {\r\n    return this.accountIds && this.itemGroupIds && this.instrumentType && this.fromDt && this.toDt;\r\n  }\r\n\r\n  fetchDropdownData() {\r\n    forkJoin([\r\n      this._masterService.getBranchDDLList(), \r\n      this._masterService.getInstrumentList(),\r\n      this._masterService.getAccount(),\r\n      this._masterSecondService.getItemGroupNameList(),\r\n      this._appService.getCompany(),\r\n    ]).pipe(map(response => {\r\n      this.branchList = response[0];\r\n      this.filteredProviders = response[0];\r\n      this.instrumentList = response[1];\r\n      this.instrumentList = response[1];\r\n      this.accountList = response[2];\r\n      this.filteredAccountList = response[2];\r\n      this.itemGroupIdList = response[3];\r\n      this.filteredItemGroup = response[3];\r\n      this.companydetails = response[4];\r\n      this.fromDt = new Date(this.companydetails[0].finBeginDt);\r\n      this.toDt = new Date(this.companydetails[0].finEndDt);\r\n    })).subscribe(res => {\r\n      \r\n    });\r\n\r\n    \r\n  }\r\n\r\n  public actionCellRenderer(params: any) {\r\n    let eGui = document.createElement(\"div\");\r\n    let editingCells = params.api.getEditingCells();\r\n    let isCurrentRowEditing = editingCells.some((cell: any) => {\r\n      return cell.rowIndex === params.node.rowIndex;\r\n    });\r\n    eGui.innerHTML = `<button class=\"material-icons action-button-edit\" data-action=\"edit\">edit </button>\r\n                      <button class=\"material-icons action-button-red\" delete data-action=\"delete\">delete</button>`;\r\n\r\n    return eGui;\r\n}\r\n\r\n  onInputChange(event: any) {\r\n    const searchInput = event.target.value.toLowerCase();\r\n\r\n    this.filteredProviders = this.branchList.filter((data) => {\r\n      const prov = data.name.toLowerCase();\r\n      return prov.includes(searchInput);\r\n    });\r\n  }\r\n\r\n  onInputItemGroupChange(event: any) {\r\n    const searchInput = event.target.value.toLowerCase();\r\n\r\n    this.filteredItemGroup = this.itemGroupIdList.filter((data) => {\r\n      const prov = data.name.toLowerCase();\r\n      return prov.includes(searchInput);\r\n    });\r\n  }\r\n\r\n  onInputAccountListChange(event: any) {\r\n    const searchInput = event.target.value.toLowerCase();\r\n\r\n    this.filteredAccountList = this.accountList.filter((data) => {\r\n      const prov = data.name.toLowerCase();\r\n      return prov.includes(searchInput);\r\n    });\r\n  }\r\n\r\n  branchAllSelection()\r\n  {\r\n    this.branchAllSellected = true;\r\n    var isAllChecked = this.select.options.first.selected;\r\n    this.select.options.forEach(\r\n      (item: MatOption, index) =>\r\n      {\r\n      \r\n        if (isAllChecked) { item.select(); }\r\n          else { item.deselect() }\r\n          if(index === this.select.options.length -1){\r\n            this.onBranchChange([], true);\r\n          }\r\n      }\r\n     \r\n    );\r\n   \r\n  }\r\n\r\n\r\n  accountAllSelection()\r\n  {\r\n    var isAllChecked = this.selectAccount.options.first.selected;\r\n    this.selectAccount.options.forEach(\r\n      (item: MatOption) => {\r\n\r\n        if (isAllChecked) { item.select(); }\r\n        else { item.deselect() }\r\n      }\r\n\r\n    );\r\n\r\n  }\r\n\r\n\r\n  onKey(value) {\r\n    this.branchList = this.search(value);\r\n}\r\n\r\n\r\n  search(value: string) {\r\n  let filter = value.toLowerCase();\r\n  return this.branchList.filter(option => option.toLowerCase().startsWith(filter));\r\n}\r\n\r\n  onBranchChange(event: any, isLastIndex?: boolean) {\r\n    if(this.branchAllSellected && !isLastIndex){\r\n      return;\r\n    }\r\n    if(this.branchIds.length < 2 && this.branchIds[0] == '-1'){\r\n      return;\r\n    }\r\n    //event.source.options._results[1]._selected = true;\r\n    //event.source.options._results[1]._active = true;\r\n    if (this.branchIds) {\r\n      this._masterService.getFilterBranchAccounts(this.branchIds).subscribe(\r\n        response => {\r\n          this.accountList = response;\r\n          this.filteredAccountList = this.accountList;\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  addBrokerage(event: any) { }\r\n\r\n  public async openSlabDetailsDialog(event) {\r\n    const isValid = await this.getBrokerageAddValidation();\r\n    if (isValid == '' && event === 'add') {\r\n      const dialogRef = this.dialog.open(AddSetupDetailsComponent, {\r\n        data: {\r\n          selectedSlabId: null,\r\n          fromDt: this.fromDt,\r\n          toDt: this.toDt,\r\n          branchIds: this.branchIds,\r\n          accountIds: this.accountIds,\r\n          itemGroupIds: this.itemGroupIds,\r\n          instrumentType: this.instrumentType,\r\n          isEditMode: 0\r\n        },\r\n      });\r\n      dialogRef.afterClosed().subscribe((user) => {\r\n        this.getBrokerageSetupList();\r\n      });\r\n    } else if(isValid !== '' && event === 'lock'){\r\n      const dialogRef = this.dialog.open(LockBrokerageComponent, {\r\n        data: {\r\n          selectedSlabId: null,\r\n          fromDt: this.fromDt,\r\n          toDt: this.toDt,\r\n          branchIds: this.branchIds,\r\n          accountIds: this.accountIds,\r\n          itemGroupIds: this.itemGroupIds,\r\n          instrumentType: this.instrumentType,\r\n          isEditMode: 0\r\n        },\r\n      });\r\n      dialogRef.afterClosed().subscribe((user) => {\r\n        this.getBrokerageSetupList();\r\n      });\r\n    }\r\n  }\r\n\r\n  public openModifySetupDialog() {\r\n    const dialogRef = this.dialog.open(AddSetupDetailsComponent, {\r\n      data: {\r\n        selectedSlabId: null,\r\n        fromDt: this.fromDt,\r\n        toDt: this.toDt,\r\n        branchIds: this.branchIds,\r\n        accountIds: this.accountIds,\r\n        itemGroupIds: this.itemGroupIds,\r\n        instrumentType: this.instrumentType,\r\n        isEditMode: 1\r\n      },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((user) => {\r\n      this.getBrokerageSetupList();\r\n    });\r\n  }\r\n\r\n  onFromDateChange() {\r\n    console.log(\"fromDt changed:\", this.fromDt);\r\n  }\r\n\r\n  openEditBrokerageDetails(params) {\r\n    const dialogRef = this.dialog.open(AddSetupDetailsComponent, {\r\n      data: {\r\n        selectedSlabId: null,\r\n        fromDt: this.searchedData.fromDate,\r\n        toDt: this.searchedData.toDate,\r\n        branchIds: this.searchedData.branchIds,\r\n        accountIds: this.searchedData.accounts,\r\n        itemGroupIds: this.searchedData.itemGroupId,\r\n        instrumentType: this.searchedData.instrumentType,\r\n        isEditMode: 2,\r\n        editParms: params\r\n      },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((user) => {\r\n      this.getBrokerageSetupList();\r\n    });\r\n  }\r\n\r\nonGridClick(params: any) {\r\n  if (params.event.target.dataset.action == \"edit\")\r\n  {\r\n    this.openEditBrokerageDetails(params.data);\r\n\r\n  }\r\n  if (params.event.target.dataset.action == \"delete\")\r\n  {\r\n    const dialogRef = this.dialog.open(ConfirmationDialog, {\r\n      data: {\r\n        message: 'Do you really want to delete this record?',\r\n        buttonText: {\r\n          ok: 'Yes',\r\n          cancel: 'No'\r\n        }\r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((confirmed: boolean) => {\r\n      if (confirmed) {\r\n        this._masterService.deleteBrokerageSetup(params.data.id).subscribe((res) => {\r\n          if(res.isSuccess){\r\n            this.showToaster(res.message);\r\n            this.getBrokerageSetupList();\r\n          } else {\r\n            this.showToaster(res.message, true);\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n\r\n  }\r\n}\r\n\r\nviewAllItemGroups(){\r\n  let dialogRef = this.dialog.open(ViewItemGroupComponent, {\r\n    data: { id:this.itemGroupIds }\r\n  });\r\n\r\n  dialogRef.afterClosed().subscribe(user => {\r\n   \r\n  });\r\n}\r\n\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"mt-2\">\r\n    <div fxFlex=\"100\" fxFlex.gt-sm=\"15\" fxFlex.sm=\"15\">\r\n      <div class=\"dropdown-container\">\r\n        <div class=\"dropdown-wrapper\">\r\n          <mat-form-field class=\"select-slab-mat\" appearance=\"outline\">\r\n            <mat-label>Select Branch</mat-label>\r\n            <mat-select #select  [(ngModel)]=\"branchIds\" placeholder=\"Select Branch\" (selectionChange)=\"onBranchChange($event)\" panelClass=\"custom-select-panel\">\r\n              <input class=\"milti-search-box\" #multiUserSearch type=\"text\" autocomplete=\"off\" matInput placeholder=\"Search Branch\" (input)=\"onInputChange($event)\"/>\r\n              <mat-option *ngFor=\"let option of filteredProviders\" [value]=\"option.id\">\r\n                {{ option.name }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div fxFlex=\"100\" fxFlex.gt-sm=\"15\" fxFlex.sm=\"15\">\r\n      <div class=\"dropdown-container\">\r\n        <div class=\"dropdown-wrapper\">\r\n          <mat-form-field class=\"select-slab-mat\" appearance=\"outline\">\r\n            <mat-label>Select Account</mat-label>          \r\n            <mat-select #selectAccount [(ngModel)]=\"accountIds\" multiple placeholder=\"Select Account\" panelClass=\"custom-select-panel\">\r\n              <input class=\"milti-search-box\" #multiUserSearch type=\"text\" autocomplete=\"off\" matInput placeholder=\"Search Account\" (input)=\"onInputAccountListChange($event)\"/>\r\n              <mat-option value=-1 (click)=\"accountAllSelection()\">Select All</mat-option>\r\n              <mat-option *ngFor=\"let option of filteredAccountList\" [value]=\"option.id\">\r\n                {{ option.name }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div fxFlex=\"100\" fxFlex.gt-sm=\"23\" fxFlex.sm=\"23\">\r\n      <div class=\"dropdown-container\">\r\n        <div class=\"dropdown-wrapper\">\r\n          <mat-icon class=\"info-icon\" (click)=\"viewAllItemGroups()\" matTooltip=\"View All Item\" matTooltipPosition=\"above\">info</mat-icon>\r\n          <mat-form-field class=\"select-slab-mat\" appearance=\"outline\">\r\n            <mat-label>Select Item Group</mat-label>\r\n            <mat-select #select  [(ngModel)]=\"itemGroupIds\" placeholder=\"Select Item Group\" panelClass=\"custom-select-panel\">\r\n              <input class=\"milti-search-box\" #multiUserSearch type=\"text\" autocomplete=\"off\" matInput placeholder=\"Search Item Group\" (input)=\"onInputItemGroupChange($event)\"/>\r\n              <mat-option *ngFor=\"let option of filteredItemGroup\" [value]=\"option.id\">\r\n                {{ option.name }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div fxFlex=\"100\" fxFlex.gt-sm=\"15\" fxFlex.sm=\"15\">\r\n      <div class=\"dropdown-container\">\r\n        <div class=\"dropdown-wrapper\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Instrument Type</mat-label>\r\n            <mat-select placeholder=\"Select InsType\" [(ngModel)]=\"instrumentType\">\r\n              <mat-option *ngFor=\"let exchange of instrumentList\" [value]=\"exchange.id\">\r\n                {{exchange.name}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div fxFlex=\"100\" fxFlex.gt-sm=\"15\" fxFlex.sm=\"15\">\r\n      <div class=\"dropdown-container\">\r\n        <div class=\"dropdown-wrapper\">\r\n          <mat-form-field appearance=\"outline\" class=\"calendar\">\r\n            <mat-label>From</mat-label>\r\n            <input matInput [matDatepicker]=\"picker1\" [(ngModel)]=\"fromDt\" (ngModelChange)=\"onFromDateChange()\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\r\n            <mat-datepicker #picker1></mat-datepicker>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div fxFlex=\"100\" fxFlex.gt-sm=\"15\" fxFlex.sm=\"15\">\r\n      <div class=\"dropdown-container\">\r\n        <div class=\"dropdown-wrapper\">\r\n          <mat-form-field appearance=\"outline\" class=\"calendar\">\r\n              <mat-label>To</mat-label>\r\n            <input matInput [matDatepicker]=\"picker2\" placeholder=\"To\" [(ngModel)]=\"toDt\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\r\n            <mat-datepicker #picker2></mat-datepicker>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div fxFlex=\"100\" fxFlex.gt-sm=\"7\" fxFlex.sm=\"7\">\r\n      <button mat-raised-button color=\"primary\" (click)=\"getBrokerageSetupList()\" [disabled]=\"!areRequiredValuesSelected()\" class=\"search-icon-btn\">\r\n        <mat-icon>search</mat-icon>\r\n      </button>\r\n    </div>\r\n    <div class=\"btn-group\">\r\n      <button mat-raised-button color=\"accent\" matTooltip=\"Lock Brokerage\" matTooltipPosition=\"above\" [disabled]=\"!areRequiredValuesSelected()\" (click)=\"openSlabDetailsDialog('lock')\" class=\"icon-btn\">\r\n        <mat-icon class=\"lock-icon\">lock</mat-icon>\r\n      </button>\r\n      <button mat-raised-button color=\"accent\" matTooltip=\"Modify Brokerage\" matTooltipPosition=\"above\" [disabled]=\"!areRequiredValuesSelected()\" (click)=\"openModifySetupDialog()\" class=\"icon-btn\">\r\n        <mat-icon class=\"edit-icon\">exposure</mat-icon>\r\n      </button>\r\n      <button mat-raised-button color=\"accent\" matTooltip=\"Add Brokerage\" matTooltipPosition=\"above\" [disabled]=\"!areRequiredValuesSelected()\" (click)=\"openSlabDetailsDialog('add')\" class=\"icon-btn\">\r\n        <mat-icon>add_to_queue</mat-icon>\r\n      </button>\r\n      <!-- <button mat-raised-button *ngIf=\"itemGroupIds\" color=\"accent\" class=\"icon-btn\">\r\n        <mat-icon>search</mat-icon>\r\n      </button> -->\r\n    </div>\r\n  </div>\r\n    <div class=\"col-xl-12 mt-2\">\r\n      <ag-grid-angular style=\" height: 535px;\"\r\n                       class=\"ag-theme-material\"\r\n                       [rowData]=\"brokeragesetupList\"\r\n                       [pagination]=\"true\"\r\n                       [rowHeight]=\"31\"\r\n                       [columnDefs]=\"columnDefs\"\r\n                       [defaultColDef]=\"agGridOptions.defaultColDef\"\r\n                       (cellClicked)=\"onGridClick($event)\"\r\n                       (gridReady)=\"onGridReady($event)\"\r\n                        headerHeight=\"34\">\r\n      </ag-grid-angular>\r\n    </div>\r\n  </div>  \r\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { MasterService } from '../../master.service';\nimport { forkJoin, map } from 'rxjs';\nimport { DatePipe, formatDate } from '@angular/common';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-lock-brokerage',\n  templateUrl: './lock-brokerage.component.html',\n  styleUrls: ['./lock-brokerage.component.scss']\n})\nexport class LockBrokerageComponent implements OnInit {\n\n  public itemForm: UntypedFormGroup;\n  parentData: any;\n\n\n  constructor( public snackBar: MatSnackBar, private datePipe: DatePipe, private formBuilder: UntypedFormBuilder, public dialogRef: MatDialogRef<LockBrokerageComponent>, @Inject(MAT_DIALOG_DATA) public data: any, private _appService: MasterService) {\n   this.parentData = data;\n  }\n\n  bindFormControls() {\n    this.itemForm = this.formBuilder.group({\n     'lockBrokDate': ['', Validators.required],\n    });\n}\n\n  ngOnInit(): void {\n    this.bindFormControls();\n  }\n\n  close(): void {\n    this.dialogRef.close();\n  }\n\n  public onSubmit(values: object) {\n    console.log(values);\n    debugger;\n    var body = this.itemForm.value;\n    console.log(body);\n    body.lockBrokDate = this.datePipe.transform(body.lockBrokDate, 'yyyy-MM-dd');\n    body.id = this.parentData.isEditMode;\n    body.accounts = this.parentData.accountIds.filter((val)=> val != -1);;\n    \n    body.fromDate = this.datePipe.transform(this.parentData.fromDt, 'yyyy-MM-dd');\n    body.toDate = this.datePipe.transform(this.parentData.toDt, 'yyyy-MM-dd');\n    body.instrumentType = this.parentData.instrumentType;\n    body.itemGroupId = this.parentData.itemGroupIds;\n    body.higherSideOnly= false;\n\n    if (this.itemForm.valid) {\n      //const body = JSON.stringify(addFormData);\n      this._appService.lockBrokerage(body).subscribe(result => {\n        console.log(\"result\", result);\n        this.showToaster(result.message);\n        this.dialogRef.close();\n      });\n    }\n  }\n\n  showToaster(message){\n    this.snackBar.open(message, \"Success\", {\n      duration: 3000,\n    });\n  }\n\n}\n","<h2 class=\"heading\">Add Item</h2>\r\n<a (click)=\"close()\" class=\"close-btn\">\r\n  <span class=\"material-symbols-outlined\">\r\n    <mat-icon>close</mat-icon>\r\n  </span>\r\n</a>\r\n<form [formGroup]=\"itemForm\" (ngSubmit)=\"onSubmit(itemForm.value)\" fxLayout=\"row wrap\" class=\"user-form\">\r\n    <div class=\"white-block pb-5\">\r\n        <h3><span>Loak Brokerage</span></h3>\r\n        <div class=\"tab-party-details-parent\">\r\n            <div class=\"dropdown-wrapper\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label>Lock Brokerage</mat-label>\r\n                  <input matInput [matDatepicker]=\"lockPicker\" formControlName=\"lockBrokDate\">\r\n                  <mat-datepicker-toggle matSuffix [for]=\"lockPicker\"></mat-datepicker-toggle>\r\n                  <mat-datepicker #lockPicker></mat-datepicker>\r\n                </mat-form-field>\r\n              </div>\r\n        </div>\r\n    </div>\r\n    <div fxFlex=\"100\" class=\"mt-2 text-center space-between-btns\">\r\n        <button mat-raised-button color=\"warn\" type=\"button\" (click)=\"close()\">Cancel</button>            \r\n        <button mat-raised-button color=\"primary\" class=\"uppercase\" [disabled]=\"!itemForm.valid\" type=\"submit\">Save</button> \r\n    </div>\r\n</form>\r\n","import { Component, OnInit, Inject, ViewChild } from '@angular/core';\r\nimport { FormGroup, UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from '@angular/material/dialog';\r\nimport { MasterService } from '../../master.service';\r\nimport { forkJoin, map } from 'rxjs';\r\nimport { AppSettings } from 'src/app/app.settings';\r\nimport { AppService } from 'src/app/service/app.service';\r\nimport { MatSelect } from '@angular/material/select';\r\nimport { MatOption } from '@angular/material/core';\r\nimport { MasterSecondService } from '../../master-second.service';\r\nimport { ErrorDialog } from '../../../Dialog/confirmation-dialog/error-dialog.component';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n\r\n@Component({\r\n  selector: 'app-view-item-group',\r\n  templateUrl: './view-item-group.component.html',\r\n  styleUrls: ['./view-item-group.component.scss']\r\n})\r\nexport class ViewItemGroupComponent implements OnInit {\r\n  @ViewChild('select') select: MatSelect;\r\n  public itemGroupNameForm: UntypedFormGroup;\r\n  public exchangeForm: UntypedFormGroup;\r\n  applyOnList: any;\r\n  exchangeList: any;\r\n  selectedId: any;\r\n  selectedName: any;\r\n  accountList: any[];\r\n  accountIds: Array<string>;\r\n\r\n  accountAllSellected: boolean = false;\r\n  itemGroupList: any[] = [];\r\n  accountApplyOnList: any[];\r\n  gridApi: any;\r\n  isRowSelected: boolean = false; \r\n  agGridOptions: any = {\r\n    defaultColDef: {\r\n      filter: true,\r\n      flex: 1,\r\n      sortable: true,\r\n      wraptext: true,\r\n      resizable: true,\r\n      minWidth: 100,\r\n     \r\n    },\r\n    suppressRowHoverHighlight: true,\r\n  }\r\n\r\n  columnDefs = [\r\n\r\n    { headerName: 'Exchange Name', field: 'exName', filter: true, sorting: true, resizable: true, flex: 1, },\r\n    { headerName: 'Item Name', field: 'itemName', filter: true, sorting: true, resizable: true, flex: 1, },\r\n\r\n  ];\r\n\r\n  constructor(public appSettings: AppSettings,\r\n    private formBuilder: UntypedFormBuilder, public dialogRef: MatDialogRef<ViewItemGroupComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any, private _masterService: MasterService,\r\n    private _masterSecondService: MasterSecondService, public dialog: MatDialog, public snackBar: MatSnackBar) {\r\n\r\n    this.selectedId = data.id;\r\n    if (data.id == null) { this.selectedId = 0; }\r\n  }\r\n\r\n\r\n\r\n  checkTaxSelect() {\r\n    if (this.selectedId == 0) {\r\n      const dialogRef = this.dialog.open(ErrorDialog, {\r\n        data: {\r\n          message: 'Please select or save tax to add account tax',\r\n          buttonText: {\r\n            ok: 'OK',\r\n\r\n          }\r\n        }\r\n\r\n      });\r\n    }\r\n  }\r\n\r\n  /* to filter select account dropdown*/\r\n  onInputChange(event: any) {\r\n    const searchInput = event.target.value.toLowerCase();\r\n\r\n    this.accountList = this.accountList.filter((data) => {\r\n      const prov = data.name.toLowerCase();\r\n      return prov.includes(searchInput);\r\n    });\r\n  }\r\n\r\n\r\n\r\n  onGridReady(event) { this.gridApi = event.api; }\r\n\r\n  accountAllSelection() {\r\n    this.accountAllSellected = true;\r\n    var isAllChecked = this.select.options.first.selected;\r\n    this.select.options.forEach(\r\n      (item: MatOption, index) => {\r\n        if (isAllChecked) { item.select(); }\r\n        else { item.deselect() }\r\n\r\n      }\r\n    );\r\n  }\r\n\r\n  initialApiCalls() {\r\n    if (this.selectedId != 0) { this.getItemGroupList(); }\r\n  }\r\n\r\n  getItemGroupList() {\r\n    this._masterSecondService.getItemGroupList(this.selectedId).subscribe((res) => {\r\n      this.itemGroupList = res;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialApiCalls();\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div class=\"brokerage-setup-item\">\r\n  <h2 class=\"heading\">Item</h2>\r\n  <a (click)=\"close()\" class=\"close-btn\">\r\n    <span class=\"material-symbols-outlined\">\r\n      <mat-icon>close</mat-icon>\r\n    </span>\r\n  </a>\r\n  <div class=\"col-xl-12 position-relative\">\r\n            <ag-grid-angular style=\" height: 240px;\"\r\n                          class=\"ag-theme-material\"\r\n                          [rowData]=\"itemGroupList\"\r\n                          [pagination]=\"true\"\r\n                          [rowHeight]=\"31\"\r\n                          [columnDefs]=\"columnDefs\"\r\n                          [defaultColDef]=\"agGridOptions.defaultColDef\"\r\n                          (gridReady)=\"onGridReady($event)\"\r\n                          headerHeight=\"34\">\r\n            </ag-grid-angular>\r\n    </div>\r\n</div>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { MasterService } from '../../master.service';\r\nimport { forkJoin, map } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-add-slab-details',\r\n  templateUrl: './add-slab-details.component.html',\r\n  styleUrls: ['./add-slab-details.component.scss']\r\n})\r\nexport class AddSlabDetailsComponent implements OnInit {\r\n\r\n  public itemForm: UntypedFormGroup;\r\n  exchangeList: any;\r\n  selectedId: any;\r\n  instrumentList: any;\r\n  itemList: any;\r\n  applyOnQtyList: any;\r\n  applyOnList: any;\r\n  salbId: any;\r\n  selectedSlabDetailsId: any;\r\n\r\n  constructor(private formBuilder: UntypedFormBuilder, public dialogRef: MatDialogRef<AddSlabDetailsComponent>, @Inject(MAT_DIALOG_DATA) public data: any, private _appService: MasterService) {\r\n   this.salbId = data.slabId;\r\n   this.selectedSlabDetailsId = data.selectedSlabId;\r\n  }\r\n\r\n  bindFormControls() {\r\n    this.itemForm = this.formBuilder.group({\r\n     'exchangeId': ['', Validators.required],\r\n     'applyOn': ['', Validators.required],\r\n     'applyOnQty': ['', Validators.required],\r\n     'itemId': ['', Validators.required],\r\n     'instrumentType': ['', Validators.required],\r\n     'deliveryBrokRate': ['', Validators.required],\r\n     'intradayBrokRate': ['', Validators.required],\r\n     'rateRange1': ['', Validators.required],\r\n     'rateRange2': ['', Validators.required],\r\n     'intradaySingleSideonly': [false],\r\n    });\r\n   this.initialApiCalls();\r\n  }\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\ninitialApiCalls() {\r\n  forkJoin([this._appService.getExchangeName(), this._appService.getInstrumentList(), this._appService.getItemListDrp(),\r\n    this._appService.getApplyOnQtyDDL(),\r\n    this._appService.getApplyOnDDL()\r\n  ]).pipe(map(response => {\r\n    this.exchangeList = response[0];\r\n    this.instrumentList = response[1];\r\n    this.itemList = response[2]\r\n    this.applyOnQtyList = response[3]\r\n    this.applyOnList = response[4]\r\n  })).subscribe(res => {\r\n    \r\n  });\r\n}\r\n\r\n  ngOnInit(): void {\r\n    this.bindFormControls();\r\n    if(this.selectedSlabDetailsId){\r\n      this.getSelectedSlabDetailsInfo();\r\n    }\r\n  }\r\n\r\n  getSelectedSlabDetailsInfo() {\r\n    this._appService.getBrokerageSlabId(this.selectedSlabDetailsId).subscribe((res) => {\r\n      this.itemForm.patchValue({\r\n        exchangeId: res.exchangeId,\r\n        applyOn: res.applyOn,\r\n        applyOnQty: res.applyOnQty,\r\n        itemId: res.itemId,\r\n        instrumentType: res.instrumentType,\r\n        deliveryBrokRate: res.deliveryBrokRate,\r\n        intradayBrokRate: res.intradayBrokRate,\r\n        rateRange1: res.rateRange1,\r\n        rateRange2: res.rateRange2,\r\n        intradaySingleSideonly: res.intradaySingleSideonly\r\n      });\r\n    });\r\n  }\r\n\r\n  public onSubmit(values: object) {\r\n    console.log(values);\r\n    var body = this.itemForm.value;\r\n    console.log(body);\r\n    body.slabId = this.salbId;\r\n    if(this.selectedSlabDetailsId){\r\n      body.id = this.selectedSlabDetailsId;\r\n    }\r\n    if (this.itemForm.valid) {\r\n      //const body = JSON.stringify(addFormData);\r\n      this._appService.saveBrokerageSlab(body).subscribe(result => {\r\n        console.log(\"result\", result);\r\n        this.dialogRef.close();\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n","<h2 class=\"heading\">Add Item</h2>\r\n<a (click)=\"close()\" class=\"close-btn\">\r\n  <span class=\"material-symbols-outlined\">\r\n    <mat-icon>close</mat-icon>\r\n  </span>\r\n</a>\r\n<form [formGroup]=\"itemForm\" (ngSubmit)=\"onSubmit(itemForm.value)\" fxLayout=\"row wrap\" class=\"user-form\">\r\n    <div class=\"white-block pb-5\">\r\n        <h3><span>Item</span></h3>\r\n        <div class=\"tab-party-details-parent\">\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                <mat-label>Exchange</mat-label>\r\n                <mat-select placeholder=\"Select Tax\" formControlName=\"exchangeId\">\r\n                  <mat-option *ngFor=\"let exchange of exchangeList\" [value]=\"exchange.id\">\r\n                    {{exchange.name}}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Item</mat-label>\r\n                \r\n                  <mat-select placeholder=\"Select Item\" formControlName=\"itemId\">\r\n                    <!--<input (keyup)=\"onKey($event.target.value)\">-->\r\n                    <mat-option *ngFor=\"let item of itemList\" [value]=\"item.id\">\r\n                      {{item.name}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n              <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>ApplyOnQTY</mat-label>\r\n                \r\n                  <mat-select placeholder=\"Select Item\" formControlName=\"applyOnQty\">\r\n                    <!--<input (keyup)=\"onKey($event.target.value)\">-->\r\n                    <mat-option *ngFor=\"let item of applyOnQtyList\" [value]=\"item.id\">\r\n                      {{item.name}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n              <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>ApplyOn</mat-label>\r\n                \r\n                  <mat-select placeholder=\"Select Item\" formControlName=\"applyOn\">\r\n                    <!--<input (keyup)=\"onKey($event.target.value)\">-->\r\n                    <mat-option *ngFor=\"let item of applyOnList\" [value]=\"item.id\">\r\n                      {{item.name}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n              <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>IntraDayBrokeRate</mat-label>\r\n                    <input matInput autocomplete=\"off\" placeholder=\"item Code\" formControlName=\"intradayBrokRate\" type=\"number\">\r\n                    <mat-error *ngIf=\"itemForm.controls.intradayBrokRate.errors?.required\">IntraDayBrokeRate is required</mat-error>                \r\n                </mat-form-field> \r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>DeliveryBrokeRate</mat-label>\r\n                    <input matInput autocomplete=\"off\" placeholder=\"item Code\" formControlName=\"deliveryBrokRate\" type=\"number\">\r\n                    <mat-error *ngIf=\"itemForm.controls.deliveryBrokRate.errors?.required\">DeliveryBrokeRate is required</mat-error>                \r\n                </mat-form-field> \r\n            </div>\r\n              <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Instrument Type</mat-label>\r\n                  <mat-select placeholder=\"Select InsType\" formControlName=\"instrumentType\">\r\n                    <mat-option *ngFor=\"let exchange of instrumentList\" [value]=\"exchange.id\">\r\n                      {{exchange.name}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n              <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Range1</mat-label>\r\n                    <input matInput autocomplete=\"off\" placeholder=\"Range2\" formControlName=\"rateRange1\" type=\"number\">\r\n                    <mat-error *ngIf=\"itemForm.controls.rateRange1.errors?.required\">Range1 is required</mat-error>                \r\n                </mat-form-field> \r\n            </div>\r\n\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Range2</mat-label>\r\n                    <input matInput autocomplete=\"off\" placeholder=\"Range\" formControlName=\"rateRange2\" type=\"number\">\r\n                    <mat-error *ngIf=\"itemForm.controls.rateRange2.errors?.required\">Range2 is required</mat-error>                \r\n                </mat-form-field> \r\n            </div>\r\n            \r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\" class=\"pt-5 pb-5 pl-10\">\r\n                <mat-checkbox formControlName=\"intradaySingleSideonly\">Intradaysingleside</mat-checkbox>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div fxFlex=\"100\" class=\"mt-2 text-center space-between-btns\">\r\n        <button mat-raised-button color=\"warn\" type=\"button\" (click)=\"close()\">Cancel</button>            \r\n        <button mat-raised-button color=\"primary\" class=\"uppercase\" [disabled]=\"!itemForm.valid\" type=\"submit\">Save</button> \r\n    </div>\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MasterService } from '../../master.service';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-add-slab',\r\n  templateUrl: './add-slab.component.html',\r\n  styleUrls: ['./add-slab.component.scss']\r\n})\r\nexport class AddSlabComponent implements OnInit {\r\n\r\n  public slabForm: UntypedFormGroup;\r\n  constructor(private formBuilder: UntypedFormBuilder, private _masterService: MasterService, public dialogRef: MatDialogRef<AddSlabComponent>) { }\r\n\r\n  ngOnInit(): void {\r\n    this.bindFormControls();\r\n  }\r\n\r\n  bindFormControls() {\r\n    this.slabForm = this.formBuilder.group({\r\n      'Name': ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  public onSubmit(values: Object): void {\r\n\r\n    var body = this.slabForm.value;\r\n    console.log(body);\r\n    if (this.slabForm.valid) {\r\n      this._masterService.saveBrokerageSlabName(body.Name).subscribe(result => {\r\n        console.log(\"result\", result);\r\n        this.dialogRef.close();\r\n      });\r\n    }\r\n  }\r\n  close(): void {\r\n    this.dialogRef.close();\r\n}\r\n\r\n}\r\n","<h2 class=\"heading\">Add Slab</h2>\r\n<a (click)=\"close()\" class=\"close-btn\">\r\n    <span class=\"material-symbols-outlined\">\r\n      <mat-icon>close</mat-icon>\r\n    </span>\r\n</a>\r\n<form [formGroup]=\"slabForm\" (ngSubmit)=\"onSubmit(slabForm.value)\" fxLayout=\"row wrap\" class=\"user-form\">\r\n    <div class=\"white-block pb-5\">\r\n        <h3><span>Master Slab</span></h3>\r\n        <div class=\"tab-party-details-parent\">            \r\n            <div fxFlex=\"100\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Name</mat-label>\r\n                    <input matInput autocomplete=\"off\" placeholder=\"item Name\" formControlName=\"Name\" type=\"text\">\r\n                    <mat-error *ngIf=\"slabForm.controls.Name.errors?.required\">Slab Name is required</mat-error>                \r\n                </mat-form-field> \r\n            </div>\r\n            \r\n        </div>\r\n    </div>\r\n    <div fxFlex=\"100\" class=\"mt-2 text-center space-between-btns\">\r\n        <button mat-raised-button color=\"warn\" (click)=\"close()\">Cancel</button>            \r\n        <button mat-raised-button color=\"primary\" class=\"uppercase\" [disabled]=\"!slabForm.valid\" type=\"submit\">Save</button> \r\n    </div>\r\n</form>\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { AppSettings } from \"src/app/app.settings\";\r\nimport { Settings } from \"src/app/app.settings.model\";\r\nimport { MasterService } from \"../master.service\";\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { AddSlabComponent } from './add-slab/add-slab.component';\r\nimport { ConfirmationDialog } from '../../Dialog/confirmation-dialog/confirmation-dialog.component';\r\nimport { AddSlabDetailsComponent } from './add-slab-details/add-slab-details.component';\r\nimport { CommonUtility } from 'src/app/shared/common-utility';\r\n\r\n@Component({\r\n    selector: 'app-blank',\r\n    templateUrl: './brokerage-slab.component.html',\r\n    styleUrls: ['./brokerage-slab.component.scss']\r\n})\r\n\r\nexport class BrokerageSlabComponent implements OnInit {\r\n    public settings: Settings\r\n    slabId: number;\r\n    slabList: any[] = [];\r\n    dropdownData: any[];\r\n    agGridOptions: any = {\r\n        defaultColDef: {\r\n          filter: true,\r\n          flex: 1,\r\n          sortable: true,\r\n          wraptext: true,\r\n          resizable: true\r\n        }\r\n      };\r\n    columnDefs = [\r\n        {\r\n            headerName: 'Action', field: 'fileIcon', cellRenderer: this.actionCellRenderer, minWidth: 80,\r\n            maxWidth: 110, resizable: true, filter: false\r\n        },\r\n        { field: 'applyOnName', headerName: 'Apply On', filter: true, sorting: true, resizable: true },\r\n        { field: 'applyOnQtyName', headerName: 'ApplyOnQty', filter: true, sorting: true, resizable: true },\r\n        { field: 'intradayBrokRate', headerName: 'IntradayBrokRate', filter: true, sorting: true, resizable: true, valueFormatter: params => CommonUtility.formatNumber(params.data.intradayBrokRate), type: 'rightAligned'  },\r\n      { field: 'deliveryBrokRate', headerName: 'DeliveryBroRate', filter: true, sorting: true, resizable: true, valueFormatter: params => CommonUtility.formatNumber(params.data.deliveryBrokRate), type: 'rightAligned' },\r\n        { field: 'higherSideOnly', headerName: 'HigherSideOnly', cellRenderer: 'booleanCellRenderer', filter: true, sorting: true, resizable: true },\r\n        { field: 'intradaySingleSideOnly', headerName: 'IntradaySingleSide', cellRenderer: 'booleanCellRenderer', filter: true, sorting: true, resizable: true },\r\n        { field: 'instrumentType', headerName: 'InstrumentType', filter: true, sorting: true, resizable: true },\r\n        { field: 'exchange', headerName: 'Exchange', filter: true, sorting: true, resizable: true },\r\n        { field: 'item', headerName: 'Item', filter: true, sorting: true, resizable: true },\r\n      { field: 'rateRange1', headerName: 'Range1', filter: true, sorting: true, resizable: true, valueFormatter: params => CommonUtility.formatNumber(params.data.rateRange1), type: 'rightAligned' },\r\n      { field: 'rateRange2', headerName: 'Range2', filter: true, sorting: true, resizable: true, valueFormatter: params => CommonUtility.formatNumber(params.data.rateRange2), type: 'rightAligned' }\r\n      ];\r\n      \r\n    constructor(public appSettings: AppSettings, private _masterService: MasterService, public dialog: MatDialog) {\r\n        this.settings = this.appSettings.settings;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.fetchDropdownData();\r\n    }\r\n    \r\n    fetchDropdownData() {\r\n        this._masterService.getSlabDDL().subscribe((response)=>{ \r\n            this.dropdownData = response;\r\n            this.slabId = response[0].id;\r\n            this.onDropdownChange();\r\n        });\r\n    }\r\n\r\n    onDropdownChange() {\r\n        if (this.slabId) {\r\n            this._masterService.getSlabList(this.slabId).subscribe(\r\n            response => {\r\n                this.slabList = response;\r\n            }\r\n            );\r\n        }\r\n    }\r\n\r\n    public actionCellRenderer(params: any) {\r\n        let eGui = document.createElement(\"div\");\r\n        let editingCells = params.api.getEditingCells();\r\n        let isCurrentRowEditing = editingCells.some((cell: any) => {\r\n          return cell.rowIndex === params.node.rowIndex;\r\n        });\r\n        eGui.innerHTML = `<button class=\"material-icons action-button-edit\" data-action=\"edit\">edit </button>\r\n                          <button class=\"material-icons action-button-red\" delete data-action=\"delete\">delete</button>`;\r\n    \r\n        return eGui;\r\n    }\r\n\r\n    public openAddSlabDialog() {\r\n        let dialogRef = this.dialog.open(AddSlabComponent);\r\n        dialogRef.afterClosed().subscribe(user => {\r\n            this.fetchDropdownData();\r\n        });\r\n    }\r\n\r\n    public openSlabDetailsDialog() {\r\n        let dialogRef = this.dialog.open(AddSlabDetailsComponent, {\r\n            data: { \r\n                slabId: this.slabId\r\n            }\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(user => {\r\n            this._masterService.getSlabList(this.slabId).subscribe(\r\n                response => {\r\n                    this.slabList = response;\r\n                }\r\n                );\r\n        });\r\n    }\r\n\r\n    public openDeleteSlabDialog() {\r\n        const dialogRef = this.dialog.open(ConfirmationDialog, {\r\n            data: {\r\n              message: 'Do you really want to delete this Slab?',\r\n              buttonText: {\r\n                ok: 'Yes',\r\n                cancel: 'No'\r\n              }\r\n            }\r\n          });\r\n    \r\n          dialogRef.afterClosed().subscribe((confirmed: boolean) => {\r\n            if (confirmed) {\r\n              this._masterService.deleteSlabMaster(this.slabId).subscribe((res) => {\r\n                this.fetchDropdownData();\r\n              });\r\n            }\r\n          });\r\n    }\r\n\r\n    onGridClick(params: any) {\r\n        if (params.event.target.dataset.action == \"edit\")\r\n        {\r\n          this.slabId = params.data.id;\r\n          this.openSlabDetailsDialog();\r\n    \r\n        }\r\n        if (params.event.target.dataset.action == \"delete\")\r\n        {\r\n          const dialogRef = this.dialog.open(ConfirmationDialog, {\r\n            data: {\r\n              message: 'Do you really want to delete this record?',\r\n              buttonText: {\r\n                ok: 'Yes',\r\n                cancel: 'No'\r\n              }\r\n            }\r\n          });\r\n    \r\n          dialogRef.afterClosed().subscribe((confirmed: boolean) => {\r\n            if (confirmed) {\r\n              this._masterService.deleteSlabDetail(params.data.id).subscribe((res) => {\r\n                this.fetchDropdownData();\r\n              });\r\n            }\r\n          });\r\n    \r\n    \r\n        }\r\n      }\r\n      \r\n}\r\n","<div class=\"row\">\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\" class=\"mt-2\">\r\n    <div class=\"dropdown-container\">\r\n      <div class=\"dropdown-wrapper\">\r\n        <mat-form-field class=\"select-slab-mat\" appearance=\"outline\">\r\n          <mat-label>Select Slab</mat-label>\r\n          <mat-select [(ngModel)]=\"slabId\" placeholder=\"Select Slab\" (selectionChange)=\"onDropdownChange()\" panelClass=\"custom-select-panel\">\r\n            <mat-option *ngFor=\"let option of dropdownData\" [value]=\"option.id\">\r\n              {{ option.name }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      <button mat-raised-button color=\"accent\" (click)=\"openAddSlabDialog()\" class=\"icon-btn\">\r\n        <mat-icon>add_circle_outline</mat-icon> Add Slab\r\n      </button>\r\n      <button mat-raised-button class=\"delete-btn icon-btn ml-15\" (click)=\"openDeleteSlabDialog()\">\r\n        <mat-icon>delete_outline</mat-icon> Delete Slab\r\n      </button>\r\n    </div>\r\n    <div>\r\n      <button mat-raised-button color=\"primary\" class=\"icon-btn\" (click)=\"openDeleteSlabDialog()\">\r\n        <mat-icon>\r\n          <span class=\"material-icons-outlined\">        \r\n            file_download\r\n          </span>\r\n        </mat-icon> \r\n        Export\r\n      </button>\r\n      <button mat-raised-button color=\"accent\" (click)=\"openSlabDetailsDialog()\" class=\"icon-btn ml-15\">\r\n        <mat-icon>add</mat-icon> Add Slab Details\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-xl-12 mt-2\">\r\n    <ag-grid-angular style=\" height: 535px;\"\r\n                     class=\"ag-theme-balham\"\r\n                     [rowData]=\"slabList\"\r\n                     [pagination]=\"true\"\r\n                     [columnDefs]=\"columnDefs\"\r\n                     [defaultColDef]=\"agGridOptions.defaultColDef\"\r\n                     (cellClicked)=\"onGridClick($event)\"\r\n                     headerHeight=\"34\">\r\n    </ag-grid-angular>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, Inject } from \"@angular/core\";\r\nimport { FormControl, UntypedFormBuilder, UntypedFormGroup } from \"@angular/forms\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MasterService } from \"../../master.service\";\r\nimport { Company } from \"../company.model\";\r\nimport { Observable, forkJoin } from \"rxjs\";\r\nimport {map, startWith} from 'rxjs/operators';\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\n\r\n\r\nexport interface City {\r\n    item1: number;\r\n    item2: string;\r\n}\r\n\r\nexport interface State {\r\n    id: number;\r\n    name: string;\r\n}\r\n\r\n@Component({\r\n    selector: 'app-company-dialog',\r\n    templateUrl: './add-company.component.html',\r\n    styleUrls: ['./add-company.component.scss']\r\n})\r\n\r\nexport class AddCompanyComponent implements OnInit {\r\n    public companyForm:UntypedFormGroup;\r\n    selectedId: any\r\n\r\n    cityCtrl = new FormControl('');\r\n    filteredCity: Observable<City[]>;\r\n\r\n    stateCtrl = new FormControl('');\r\n    filteredStates: Observable<State[]>;\r\n\r\n    cityList: City[];\r\n    stateList: State[];\r\n    cityNameList: any;\r\n    filteredCityNameList: any;\r\n    \r\n\r\n    constructor(public snackBar: MatSnackBar, private formBuilder: UntypedFormBuilder, public dialogRef: MatDialogRef<AddCompanyComponent>, @Inject(MAT_DIALOG_DATA) public data: any, private _appService: MasterService) {\r\n      this.selectedId = data.id;\r\n      if (data.id == null) { this.selectedId = 0; }\r\n    }\r\n\r\n    bindFormControls() {\r\n        this.companyForm = this.formBuilder.group({\r\n          'name': [],\r\n          'address': [],\r\n          'city' : [''],\r\n          'finBeginDt': [''],\r\n          'finEndDt': [''],\r\n          'state' : [''],\r\n          'phone' : [''],\r\n          'email' : [''],\r\n          'pin' : [''],\r\n          'uniqcusomerId' : [''],\r\n          'ApplyOptionsMTM' : [false],\r\n          'ApplyCashMTM' : [false],\r\n          'ApplyInvoice' : [false],\r\n          'ApplyOnlyBrokerage' : [false],\r\n          'ApplySubBrokerage' : [false],\r\n          'CheckRates' : [false],\r\n          'ShowLots' : [false],\r\n          'ApplySharing' : [false],\r\n          'ApplyDecimalQty' : [false],\r\n          'ApplyMargin' : [false],\r\n          'ApplyContractNote' : [false],\r\n          'RoundingOff' : [false],\r\n          'RateRangeEnable' : [false],\r\n          'settlementPostingInPercentage' : [0],\r\n          'id': [0]\r\n        });\r\n    }\r\n\r\n    bindFilterFntoList(){\r\n        this.filteredStates = this.stateCtrl.valueChanges.pipe(\r\n          startWith(''),\r\n          map(stateObj =>{\r\n            return stateObj ? this._filterStates(stateObj) : this.stateList.slice()\r\n          }),\r\n        );\r\n    }\r\n\r\n    getCompanyInfo() {\r\n      this._appService.getCompanyById(this.selectedId).subscribe((res) => {\r\n          debugger\r\n        this.companyForm.get('name').setValue(res.name);\r\n        this.companyForm.get('address').setValue(res.address);\r\n        this.companyForm.get('city').setValue(res.city);\r\n        this.companyForm.get('pin').setValue(res.pin);\r\n        this.companyForm.get('state').setValue(res.state);\r\n        this.companyForm.get('phone').setValue(res.phone);\r\n        this.companyForm.get('email').setValue(res.email);\r\n        this.companyForm.get('id').setValue(res.id);  \r\n        this.companyForm.get('finBeginDt').setValue(res.finBeginDt);  \r\n        this.companyForm.get('finEndDt').setValue(res.finEndDt);\r\n        this.companyForm.get('uniqcusomerId').setValue(res.uniqcusomerId);        \r\n        this.companyForm.get('compId').setValue(res.compId);\r\n        this.companyForm.get('applyOptionsMtm').setValue(res.applyOptionsMtm);\r\n        this.companyForm.get('applyCashMtm').setValue(res.applyCashMtm);\r\n        this.companyForm.get('applyInvoice').setValue(res.applyInvoice);\r\n        this.companyForm.get('applyOnlyBrokerage').setValue(res.applyOnlyBrokerage);\r\n        this.companyForm.get('checkRates').setValue(res.checkRates);\r\n        this.companyForm.get('showLots').setValue(res.showLots);\r\n        this.companyForm.get('applySubBrokerage').setValue(res.applySubBrokerage);\r\n        this.companyForm.get('applyDecimalQty').setValue(res.applyDecimalQty);\r\n        this.companyForm.get('applyMargin').setValue(res.applyMargin);\r\n        this.companyForm.get('roundingOff').setValue(res.roundingOff);\r\n        this.companyForm.get('settlementPostingInPercentage').setValue(res.settlementPostingInPercentage);\r\n        this.companyForm.get('applyContractNote').setValue(res.applyContractNote);\r\n        this.companyForm.get('isRateRangeEnable').setValue(res.isRateRangeEnable);\r\n        this.companyForm.get('cityName').setValue(res.cityName);\r\n      });\r\n    }\r\n\r\n    initialApiCalls() {\r\n        forkJoin([this._appService.getState()]).pipe(map(response=>{\r\n          this.stateList = response[0];\r\n          this.bindFilterFntoList();\r\n        })).subscribe(res=>{\r\n          //this.getValuesInEditMode();\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n      this._appService.getCityList().subscribe(res=>{\r\n        this.filteredCityNameList = res;\r\n        this.cityNameList = res;\r\n        this.bindFormControls(); \r\n        if (this.selectedId != 0) {\r\n          this.getCompanyInfo();\r\n        }\r\n        else {\r\n            this.companyForm.get('id').setValue(0);\r\n        }  \r\n      })\r\n  }\r\n  onSubmit(event: any) { \r\n    var body = this.companyForm.value;\r\n    body.CityId = this.getCityId(this.cityCtrl.value);\r\n\r\n    if (this.companyForm.valid) {\r\n      //const body = JSON.stringify(addFormData);\r\n      this._appService.saveCompany(body).subscribe(result => {\r\n        console.log(\"result\", result);\r\n        // this.formSubmitted = true;\r\n        this.dialogRef.close();\r\n      }, err => {\r\n        this.showToaster(err.message, true);\r\n        console.log(err);\r\n      });\r\n    }\r\n  }\r\n\r\n  onInputCityChange(event: any) {\r\n    const searchInput = event.target.value.toLowerCase();\r\n\r\n    this.filteredCityNameList = this.cityNameList.filter((data) => {\r\n      const prov = data.itemCode.toLowerCase();\r\n      return prov.includes(searchInput);\r\n    });\r\n\r\n    if (searchInput === '') {\r\n      this.filteredCityNameList = [...this.cityNameList];\r\n    }\r\n  }\r\n\r\n  showToaster(message, isError = false) {\r\n    const panelClass = isError ? ['red-text'] : undefined;\r\n    const label = isError ? \"Error\" : \"Success\";\r\n    const time = isError? 6000 : 3000;\r\n  \r\n    this.snackBar.open(message, label, {\r\n      duration: time,\r\n      panelClass: panelClass,\r\n    });\r\n  }\r\n\r\n    private _filterCity(value: string): City[] {\r\n        const filterValue = value.toLowerCase();\r\n        return this.cityList.filter(state => state.item2.toLowerCase().includes(filterValue));\r\n    }\r\n\r\n    private getCityId(name:string) {\r\n        const cityObj = this.cityList?.find((city)=>city.item2.toLocaleLowerCase() === name.toLocaleLowerCase());\r\n        return cityObj?.item1;\r\n    }\r\n\r\n    private _filterStates(value: string): State[] {\r\n        const filterValue = value.toLowerCase();\r\n        return this.stateList.filter(state => state.name.toLowerCase().includes(filterValue));\r\n    }\r\n\r\n    close(): void {\r\n        this.dialogRef.close();\r\n    }\r\n    \r\n}\r\n","<h2 class=\"heading\">Add Company</h2>\r\n<a (click)=\"close()\" class=\"close-btn\">\r\n    <span class=\"material-symbols-outlined\">\r\n      <mat-icon>close</mat-icon>\r\n    </span>\r\n</a>\r\n<form [formGroup]=\"companyForm\" (ngSubmit)=\"onSubmit(companyForm.value)\" fxLayout=\"row wrap\" class=\"user-form\">\r\n    <div class=\"white-block pb-5\">\r\n        <h3><span>Company Details</span></h3>\r\n        <div class=\"tab-party-details-parent\">\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Name</mat-label>\r\n                    <input matInput autocomplete=\"off\" placeholder=\"Name\" formControlName=\"name\" type=\"text\">\r\n                    <mat-error *ngIf=\"companyForm.controls.name.errors?.required\">Name is required</mat-error>                \r\n                </mat-form-field> \r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>address</mat-label>\r\n                    <input matInput autocomplete=\"off\" placeholder=\"address\" formControlName=\"address\" type=\"text\">\r\n                    <mat-error *ngIf=\"companyForm.controls.address.errors?.required\">Address is required</mat-error>                \r\n                </mat-form-field> \r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"15\" fxFlex.sm=\"50\">\r\n                <div class=\"dropdown-wrapper\">\r\n                    <mat-form-field class=\"select-slab-mat\" appearance=\"outline\">\r\n                      <mat-label>Select City</mat-label>\r\n                      <mat-select #selectType placeholder=\"Select City\" panelClass=\"custom-select-panel\" formControlName=\"city\">\r\n                        <input class=\"milti-search-box\" #multiUserSearch type=\"text\" autocomplete=\"off\" matInput placeholder=\"Search City\" (input)=\"onInputCityChange($event)\" />\r\n                        <mat-option *ngFor=\"let option of filteredCityNameList\" [value]=\"option.id\">\r\n                          {{ option.name }}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Financial Year Begin</mat-label>\r\n                    <input matInput [matDatepicker]=\"picker1\" formControlName=\"finBeginDt\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker1></mat-datepicker>\r\n                </mat-form-field>                  \r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Financial Year End</mat-label>\r\n                    <input matInput [matDatepicker]=\"picker2\" formControlName=\"finEndDt\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker2></mat-datepicker>\r\n                </mat-form-field>                  \r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>State</mat-label>\r\n                    <input matInput autocomplete=\"off\" placeholder=\"state\" formControlName=\"state\" type=\"text\">\r\n                    <mat-error *ngIf=\"companyForm.controls.state.errors?.required\">State is required</mat-error>                \r\n                </mat-form-field>\r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Phone</mat-label>\r\n                    <input matInput autocomplete=\"off\" placeholder=\"Phone\" formControlName=\"phone\" type=\"text\">\r\n                    <mat-error *ngIf=\"companyForm.controls.phone.errors?.required\">Add is required</mat-error>                \r\n                </mat-form-field> \r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Email</mat-label>\r\n                    <input matInput autocomplete=\"off\" placeholder=\"Email\" formControlName=\"email\" type=\"text\">\r\n                    <mat-error *ngIf=\"companyForm.controls.email.errors?.required\">Email is required</mat-error>                \r\n                </mat-form-field> \r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Pin</mat-label>\r\n                    <input matInput autocomplete=\"off\" placeholder=\"Pin\" formControlName=\"pin\" type=\"text\">\r\n                    <mat-error *ngIf=\"companyForm.controls.pin.errors?.required\">Pin is required</mat-error>                \r\n                </mat-form-field> \r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Unique customer id</mat-label>\r\n                    <input matInput autocomplete=\"off\" placeholder=\"Unique customer id\" formControlName=\"uniqcusomerId\" type=\"text\">\r\n                    <mat-error *ngIf=\"companyForm.controls.uniqcusomerId.errors?.required\">Unique customer id is required</mat-error>                \r\n                </mat-form-field> \r\n            </div>\r\n        </div>        \r\n    </div>\r\n    <div class=\"white-block\">\r\n        <h3><span>Company Settings</span></h3>\r\n        <div class=\"tab-party-details-parent align-center\">\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\" class=\"pt-5 pb-5 pl-10\">\r\n                <mat-checkbox formControlName=\"ApplyOptionsMTM\">ApplyOptionsMTM</mat-checkbox>\r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\" class=\"pt-5 pb-5 pl-10\">\r\n                <mat-checkbox formControlName=\"ApplyCashMTM\">ApplyCashMTM</mat-checkbox>\r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\" class=\"pt-5 pb-5 pl-10\">\r\n                <mat-checkbox formControlName=\"ApplyInvoice\">ApplyInvoice</mat-checkbox>\r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\" class=\"pt-5 pb-5 pl-10\">\r\n                <mat-checkbox formControlName=\"ApplyOnlyBrokerage\">ApplyOnlyBrokerage</mat-checkbox>\r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\" class=\"pt-5 pb-5 pl-10\">\r\n                <mat-checkbox formControlName=\"ApplySubBrokerage\">ApplySubBrokerage</mat-checkbox>\r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\" class=\"pt-5 pb-5 pl-10\">\r\n                <mat-checkbox formControlName=\"CheckRates\">CheckRates</mat-checkbox>\r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\" class=\"pt-5 pb-5 pl-10\">\r\n                <mat-checkbox formControlName=\"ShowLots\">ShowLots</mat-checkbox>\r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\" class=\"pt-5 pb-5 pl-10\">\r\n                <mat-checkbox formControlName=\"ApplySharing\">ApplySharing</mat-checkbox>\r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\" class=\"pt-5 pb-5 pl-10\">\r\n                <mat-checkbox formControlName=\"ApplyDecimalQty\">ApplyDecimalQty</mat-checkbox>\r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\" class=\"pt-5 pb-5 pl-10\">\r\n                <mat-checkbox formControlName=\"ApplyMargin\">ApplyMargin</mat-checkbox>\r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\" class=\"pt-5 pb-5 pl-10\">\r\n                <mat-checkbox formControlName=\"ApplyContractNote\">ApplyContractNote</mat-checkbox>\r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\" class=\"pt-5 pb-5 pl-10\">\r\n                <mat-checkbox formControlName=\"RoundingOff\">RoundingOff</mat-checkbox>\r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\" class=\"pt-5 pb-5 pl-10\">\r\n                <mat-checkbox formControlName=\"RateRangeEnable\">RateRangeEnable</mat-checkbox>\r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\" class=\"pt-10\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Settlement Positing in %</mat-label>\r\n                    <input matInput autocomplete=\"off\" placeholder=\"\" formControlName=\"settlementPostingInPercentage\" type=\"number\">\r\n                    <mat-error *ngIf=\"companyForm.controls.settlementPostingInPercentage.errors?.required\">Settlement Positing in % id is required</mat-error>                \r\n                </mat-form-field>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div fxFlex=\"100\" class=\"mt-2 text-center space-between-btns\">\r\n        <button mat-raised-button color=\"warn\" type=\"button\" (click)=\"close()\">Cancel</button>            \r\n        <button mat-raised-button color=\"primary\" class=\"uppercase\" type=\"submit\">Save</button> \r\n    </div>\r\n</form>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { AddCompanyComponent } from \"./company-dialog/add-company.component\";\r\nimport { AppSettings } from \"src/app/app.settings\";\r\nimport { MasterService } from \"../master.service\";\r\nimport { Settings } from \"src/app/app.settings.model\";\r\nimport { DatatableComponent } from \"@swimlane/ngx-datatable\";\r\nimport { AppService } from \"src/app/service/app.service\";\r\nimport { ConfirmationDialog } from \"../../Dialog/confirmation-dialog/confirmation-dialog.component\";\r\n\r\n@Component({\r\n    selector: 'app-blank',\r\n    templateUrl: './company.component.html',\r\n    styleUrls: ['./company.component.scss']\r\n})\r\n\r\nexport class CompanyComponent implements OnInit {\r\n  @ViewChild(DatatableComponent) table: DatatableComponent;\r\n  editing = {};\r\n  rows = [];\r\n  temp = [];\r\n  selected = [];\r\n  loadingIndicator: boolean = true;\r\n  reorderable: boolean = true;\r\n \r\n  public settings: Settings;\r\n  companyList: any;\r\n  constructor(public appSettings: AppSettings, private _appService: AppService, public dialog: MatDialog, private _masterService: MasterService) {\r\n    this.settings = this.appSettings.settings;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getcompanyList();\r\n  }\r\n\r\n  agGridOptions: any = {\r\n    defaultColDef: {\r\n      filter: true,\r\n      flex: 1,\r\n      sortable: true,\r\n      wraptext: true,\r\n      resizable: true,\r\n      minWidth: 100,\r\n    }\r\n  }\r\n\r\n  columnDefs = [\r\n    {\r\n      headerName: 'Action', field: 'fileIcon', cellRenderer: this.actionCellRenderer, minWidth: 60,\r\n      maxWidth: 80, resizable: false, filter: false\r\n    },\r\n    { headerName: 'Name', field: 'name', flex: 2},\r\n    { headerName: 'Address', field: 'address', flex: 1},\r\n    { headerName: 'City', field: 'city', flex: 1},\r\n    { headerName: 'Pin', field: 'pin', flex: 1},    \r\n    { headerName: 'State', field: 'state',flex: 1 },\r\n    { headerName: 'Phone', field: 'phone', flex: 1},\r\n    { headerName: 'Email', field: 'email', flex: 1},\r\n    { headerName: 'FinBegin Date', field: 'finBeginDtString', flex: 1},\r\n    { headerName: 'FinEnd Date', field: 'finEndDtString', flex: 1},\r\n    { headerName: 'UniqueCusId', field: 'uniqcusomerId', flex: 1}\r\n  ];\r\n\r\n  getcompanyList() {\r\n    this._appService.getCompany().subscribe((results) => {\r\n     this.companyList = results;       \r\n    });\r\n  }\r\n\r\n  public actionCellRenderer(params: any) {\r\n    let eGui = document.createElement(\"div\");\r\n    let editingCells = params.api.getEditingCells();\r\n    let isCurrentRowEditing = editingCells.some((cell: any) => {\r\n      return cell.rowIndex === params.node.rowIndex;\r\n    });\r\n    eGui.innerHTML = `<button class=\"material-icons action-button-edit\" data-action=\"edit\">edit </button>`;\r\n\r\n    return eGui;\r\n  }\r\n\r\n  onGridClick(params: any) {\r\n    if (params.event.target.dataset.action == \"edit\")\r\n    {\r\n      this.openCompanyDialog(params.data.id);\r\n    }\r\n  }\r\n\r\n  public openCompanyDialog(user) {\r\n    let dialogRef = this.dialog.open(AddCompanyComponent, {\r\n      data: { id:user }\r\n    });\r\n  \r\n    dialogRef.afterClosed().subscribe(user => {\r\n      this.getcompanyList();\r\n      if (user) {\r\n        /* (user.id) ? this.updateUser(user) : this.addUser(user);*/\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-xl-12 mt-2\">\r\n    <ag-grid-angular style=\" height: 535px;\"\r\n                    class=\"ag-theme-material\"\r\n                       [rowHeight]=\"31\"\r\n                     [rowData]=\"companyList\"\r\n                     [pagination]=\"true\"\r\n                     [columnDefs]=\"columnDefs\"\r\n                     [defaultColDef]=\"agGridOptions.defaultColDef\"\r\n                     (cellClicked)=\"onGridClick($event)\"\r\n                     headerHeight=\"34\">\r\n    </ag-grid-angular>\r\n  </div>\r\n</div>  \r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormControl, UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MasterService } from '../../master.service';\r\nimport { ContractMaster } from '../contract-master.model';\r\nimport { forkJoin, map } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'app-contract-master-dialog',\r\n    templateUrl: './add-contract-master.component.html',\r\n    styleUrls: ['./add-contract-master.component.scss']\r\n})\r\n\r\nexport class AddContractMasterComponent implements OnInit { \r\n    public contractForm:UntypedFormGroup;\r\n    exchangeList: any;\r\n    InstrumentTypeList: any;\r\n    OptionTypeList: any;\r\n    selectedId: any\r\n\r\n    constructor(private formBuilder: UntypedFormBuilder, public dialogRef: MatDialogRef<AddContractMasterComponent>, @Inject(MAT_DIALOG_DATA) public data: any, private _appService: MasterService) {\r\n        this.selectedId = data.id;\r\n        if (data.id == null) { this.selectedId = 0; }\r\n    }\r\n\r\n    bindFormControls() {\r\n        this.contractForm = this.formBuilder.group({\r\n            'ExId': ['', Validators.required],\r\n            'symbol': ['', Validators.required],\r\n            'strikePrice': ['', Validators.required],\r\n            'instrumentType': ['', Validators.required],\r\n            'optionType': ['', Validators.required],\r\n            'tradeableLot': ['', Validators.required],\r\n            'maturity': [],\r\n            'id': [0]\r\n        });\r\n        this.initialApiCalls();\r\n    }\r\n\r\n    initialApiCalls() {\r\n        forkJoin([this._appService.getExchangeName(), this._appService.getInstrument(), this._appService.getOption()]).pipe(map(response => {\r\n          this.exchangeList = response[0];\r\n          this.InstrumentTypeList = response[1]\r\n          this.OptionTypeList = response[2]\r\n        })).subscribe(res => {\r\n        \r\n        });\r\n    }\r\n\r\n    getInstrumentInfo() {\r\n        this._appService.getContractById(this.selectedId).subscribe((res) => {\r\n            this.contractForm.get('symbol').setValue(res.symbol);\r\n            this.contractForm.get('strikePrice').setValue(res.strikePrice);\r\n            this.contractForm.get('instrumentType').setValue(res.instrumentType);\r\n            this.contractForm.get('optionType').setValue(res.optionType);\r\n            this.contractForm.get('tradeableLot').setValue(res.tradeableLot);\r\n            this.contractForm.get('maturity').setValue(res.maturity);\r\n            this.contractForm.get('id').setValue(res.id);  \r\n            this.contractForm.get('ExId').setValue(res.exId);     \r\n        });\r\n    }\r\n\r\n    public onSubmit(values: Object): void {\r\n        this.contractForm.controls['symbol'].setValue(String(this.contractForm.get('symbol').value));\r\n        this.contractForm.controls['strikePrice'].setValue(Number(this.contractForm.get('strikePrice').value));\r\n        this.contractForm.controls['instrumentType'].setValue(String(this.contractForm.get('instrumentType').value));\r\n        this.contractForm.controls['optionType'].setValue(String(this.contractForm.get('optionType').value));\r\n        this.contractForm.controls['tradeableLot'].setValue(Number(this.contractForm.get('tradeableLot').value));\r\n        //this.contractForm.controls['maturity'].setValue(String(this.contractForm.get('maturity').value));\r\n        var body = this.contractForm.value;\r\n        if (this.contractForm.valid) {\r\n            //const body = JSON.stringify(addFormData);\r\n            this._appService.saveContract(body).subscribe(result => {\r\n              console.log(\"result\", result);\r\n              this.dialogRef.close();\r\n            }, err => {\r\n              console.log(err);\r\n            });\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.bindFormControls();\r\n        if (this.selectedId != 0) {\r\n            this.getInstrumentInfo();\r\n        }\r\n        else {\r\n            this.contractForm.get('id').setValue(0);\r\n        }\r\n    }\r\n\r\n    close(): void {\r\n        this.dialogRef.close();\r\n    }\r\n}","<h2 class=\"heading\">Add Contract Master</h2>\r\n<a (click)=\"close()\" class=\"close-btn\">\r\n    <span class=\"material-symbols-outlined\">\r\n      <mat-icon>close</mat-icon>\r\n    </span>\r\n</a>\r\n<form [formGroup]=\"contractForm\" (ngSubmit)=\"onSubmit(contractForm.value)\" fxLayout=\"row wrap\" class=\"user-form\">\r\n    <div class=\"white-block pb-5\">\r\n        <h3><span>Contract Master</span></h3>\r\n        <div class=\"tab-party-details-parent\">\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                    <mat-label>Exchange</mat-label>\r\n                    <mat-select placeholder=\"\" formControlName=\"ExId\">\r\n                        <mat-option *ngFor=\"let exchange of exchangeList\" [value]=\"exchange.id\">\r\n                          {{exchange.name}}\r\n                        </mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Symbol</mat-label>\r\n                    <input matInput autocomplete=\"off\" placeholder=\"\" formControlName=\"symbol\" type=\"text\">\r\n                    <mat-error *ngIf=\"contractForm.controls.symbol.errors?.required\">symbol is required</mat-error>                \r\n                </mat-form-field> \r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Strike Price</mat-label>\r\n                    <input matInput autocomplete=\"off\" placeholder=\"\" formControlName=\"strikePrice\" type=\"text\">\r\n                    <mat-error *ngIf=\"contractForm.controls.strikePrice.errors?.required\">Strike Price is required</mat-error>                \r\n                </mat-form-field> \r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                    <mat-label>Instrument Type</mat-label>\r\n                    <mat-select placeholder=\"\" formControlName=\"instrumentType\">\r\n                        <mat-option *ngFor=\"let instrumentType of InstrumentTypeList\" [value]=\"instrumentType.id\">\r\n                          {{instrumentType.name}}\r\n                        </mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                    <mat-label>Option Type</mat-label>\r\n                    <mat-select placeholder=\"\" formControlName=\"optionType\">\r\n                        <mat-option *ngFor=\"let optionType of OptionTypeList\" [value]=\"optionType.id\">\r\n                          {{optionType.name}}\r\n                        </mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Tradeable Lot</mat-label>\r\n                    <input matInput autocomplete=\"off\" placeholder=\"\" formControlName=\"tradeableLot\" type=\"text\">\r\n                    <mat-error *ngIf=\"contractForm.controls.tradeableLot.errors?.required\">Tradeable Lot is required</mat-error>                \r\n                </mat-form-field> \r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Maturity</mat-label>\r\n                    <input matInput [matDatepicker]=\"Maturity\" formControlName=\"maturity\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"Maturity\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #Maturity></mat-datepicker>\r\n                </mat-form-field>                  \r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div fxFlex=\"100\" class=\"mt-2 text-center space-between-btns\">\r\n        <button mat-raised-button color=\"warn\" (click)=\"close()\">Cancel</button>            \r\n        <button mat-raised-button color=\"primary\" class=\"uppercase\" type=\"submit\">Save</button> \r\n    </div>\r\n</form>","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { AppSettings } from \"src/app/app.settings\";\r\nimport { Settings } from \"src/app/app.settings.model\";\r\nimport { MasterService } from \"../master.service\";\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { AddContractMasterComponent } from \"./contract-master-dialog/add-contract-master.component\";\r\nimport { DatatableComponent } from \"@swimlane/ngx-datatable\";\r\nimport { AppService } from \"src/app/service/app.service\";\r\nimport { ConfirmationDialog } from \"../../Dialog/confirmation-dialog/confirmation-dialog.component\";\r\nimport { CommonUtility } from \"../../../shared/common-utility\";\r\nimport { forkJoin, map } from \"rxjs\";\r\n\r\n@Component({\r\n    selector: 'app-blank',\r\n    templateUrl: './contract-master.component.html',\r\n    styleUrls: ['./contract-master.component.scss']\r\n})\r\n\r\nexport class ContractMasterComponent implements OnInit {\r\n    @ViewChild(DatatableComponent) table: DatatableComponent;\r\n    editing = {};\r\n    rows = [];\r\n    temp = [];\r\n    selected = [];\r\n    loadingIndicator: boolean = true;\r\n    reorderable: boolean = true;\r\n    selectedExId: any;\r\n    exchangeList: any;\r\n   \r\n    public settings: Settings;\r\n    contractList: any = [];\r\n    constructor(public appSettings: AppSettings, private _appService: AppService, public dialog: MatDialog, private _masterService: MasterService) {\r\n      this.settings = this.appSettings.settings;\r\n    }\r\n\r\n    ngOnInit() {\r\n      this.getExchangeList();\r\n    }\r\n\r\n    getExchangeList(){\r\n      forkJoin([this._masterService.getExchangeName()]).pipe(map(response => {\r\n        this.exchangeList = response[0];\r\n      })).subscribe(res => {\r\n      });\r\n    }\r\n\r\n    agGridOptions: any = {\r\n      defaultColDef: {\r\n        filter: true,\r\n        flex: 1,\r\n        sortable: true,\r\n        wraptext: true,\r\n        resizable: true\r\n      }\r\n    }\r\n\r\n    columnDefs = [\r\n      { headerName: 'Exchange', field: 'exName', filter: true, sorting: true, resizable: true },\r\n      { headerName: 'InstrumentType', field: 'insName', filter: true, sorting: true, resizable: true },\r\n      { headerName: 'Symbol', field: 'symbol', filter: true, sorting: true, resizable: true },\r\n      { headerName: 'Item Name', field: 'itemName', filter: true, sorting: true, resizable: true },\r\n      { headerName: 'Maturity', field: 'maturityDate', filter: true, sorting: true, resizable: true },\r\n      { headerName: 'OptionType', field: 'optionType', filter: true, sorting: true, resizable: true },  \r\n      { headerName: 'StrikePrice', field: 'strikePrice', filter: true, sorting: true, resizable: true, valueFormatter: params => CommonUtility.formatNumber(params.data.strikePrice), type: 'rightAligned' },\r\n      { headerName: 'TradeableLot', field: 'tradeableLot', filter: true, sorting: true, resizable: true, valueFormatter: params => CommonUtility.formatNumber(params.data.tradeableLot), type: 'rightAligned' },\r\n\r\n    \r\n    ];\r\n\r\n    getcontractList(id: any) {\r\n      this._appService.getContract(id).subscribe((results) => {\r\n       this.contractList = results;       \r\n      });\r\n    }\r\n\r\n    public actionCellRenderer(params: any) {\r\n      let eGui = document.createElement(\"div\");\r\n      let editingCells = params.api.getEditingCells();\r\n      let isCurrentRowEditing = editingCells.some((cell: any) => {\r\n        return cell.rowIndex === params.node.rowIndex;\r\n      });\r\n      eGui.innerHTML = `<button class=\"material-icons action-button-edit\" data-action=\"edit\">edit </button>\r\n                        <button class=\"material-icons action-button-red\" delete data-action=\"delete\">delete</button>`;\r\n  \r\n      return eGui;\r\n    }\r\n\r\n    onBranchChange(event: any){\r\n      console.log(event);\r\n      this.getcontractList(this.selectedExId);\r\n    }\r\n\r\n    onGridClick(params: any) {\r\n      debugger\r\n      if (params.event.target.dataset.action == \"edit\")\r\n      {\r\n        this.openCompanyDialog(params.data.id);\r\n      }\r\n      if (params.event.target.dataset.action == \"delete\")\r\n      {\r\n        const dialogRef = this.dialog.open(ConfirmationDialog, {\r\n          data: {\r\n            message: 'Do you really want to delete this record?',\r\n            buttonText: {\r\n              ok: 'Yes',\r\n              cancel: 'No'\r\n            }\r\n          }\r\n        });\r\n  \r\n        dialogRef.afterClosed().subscribe((confirmed: boolean) => {\r\n          if (confirmed) {\r\n            this._masterService.deleteContract(params.data.id).subscribe((res) => {\r\n              this.getcontractList(this.selectedExId);\r\n            });\r\n          }\r\n        });\r\n  \r\n  \r\n      }\r\n    }\r\n\r\n    public openCompanyDialog(user) {\r\n        let dialogRef = this.dialog.open(AddContractMasterComponent, {\r\n          data: { id:user }\r\n        });\r\n      \r\n        dialogRef.afterClosed().subscribe(user => {\r\n          this.getcontractList(this.selectedExId);\r\n          if (user) {\r\n            /* (user.id) ? this.updateUser(user) : this.addUser(user);*/\r\n          }\r\n        });\r\n    }\r\n}\r\n","<div class=\"row paret-form\">\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"space-between\" class=\"mt-2\">\r\n    <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n      <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n          <mat-label>Exchange</mat-label>\r\n          <mat-select placeholder=\"\" [(ngModel)]=\"selectedExId\" (selectionChange)=\"onBranchChange($event)\">\r\n              <mat-option *ngFor=\"let exchange of exchangeList\" [value]=\"exchange.id\">\r\n                {{exchange.name}}\r\n              </mat-option>\r\n          </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n    <div>\r\n      <button mat-raised-button color=\"primary\" class=\"icon-btn\">\r\n        <mat-icon>file_download</mat-icon> \r\n        Export\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-xl-12 mt-2\">\r\n    <ag-grid-angular style=\" height: 535px;\"\r\n                     class=\"ag-theme-material\"\r\n                     [rowData]=\"contractList\"\r\n                     [pagination]=\"true\"\r\n                      [rowHeight]=\"31\"\r\n                     [columnDefs]=\"columnDefs\"\r\n                     [defaultColDef]=\"agGridOptions.defaultColDef\"\r\n                     headerHeight=\"34\">\r\n    </ag-grid-angular>\r\n  </div>\r\n</div>  \r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { UntypedFormGroup, UntypedFormBuilder, Validators} from '@angular/forms';\r\nimport { MasterService } from '../../master.service';\r\nimport { forkJoin, map } from 'rxjs';\r\nimport { AppService } from 'src/app/service/app.service';\r\nimport { MasterSecondService } from '../../master-second.service';\r\n\r\n@Component({\r\n  selector: 'app-add-interest-master',\r\n  templateUrl: './add-interest-master.component.html',\r\n  styleUrls: ['./add-interest-master.component.scss']\r\n})\r\nexport class AddInterestMasterComponent implements OnInit {\r\n\r\n  public itemForm: UntypedFormGroup;\r\n  exchangeList: any;\r\n  selectedId: any;\r\n  accountList: any[];\r\n  typeList: any[];\r\n  applyOnList: any[];\r\n  filteredAccountList: any[] = [];\r\n  postVoucherList: any[];\r\n  filterPostVoucherList: any[];\r\n  filterTypeList: any[];\r\n  filterApplyOnList: any[];\r\n\r\n  constructor(private formBuilder: UntypedFormBuilder, public dialogRef: MatDialogRef<AddInterestMasterComponent>, @Inject(MAT_DIALOG_DATA) public data: any, private _masterService: MasterService, private _masterSeconedService: MasterSecondService, private _appService: AppService) {\r\n   \r\n    this.selectedId = data.id;\r\n    if (data.id == null) { this.selectedId = 0; }\r\n   \r\n  }\r\n\r\n  bindFormControls() {\r\n    this.itemForm = this.formBuilder.group({\r\n      'accountId': ['', Validators.required],\r\n      'type': ['', Validators.required],\r\n      'applyOn': ['', Validators.required],\r\n      'postVouchers': ['', Validators.required],\r\n      'intRate': ['', Validators.required],\r\n      'yearDays': ['', Validators.required],\r\n      'fromDt': ['', Validators.required],\r\n      'toDt': ['', Validators.required],\r\n      'id': ['0']\r\n    });\r\n   this.initialApiCalls();\r\n}\r\n\r\n\r\n  initialApiCalls() {\r\n    forkJoin([this._appService.getIntrestApplyOnDDL(), this._masterService.getAccount(), this._appService.getIntrestTypeDLL(), this._appService.getPostVoucherDLL()]).pipe(map(response => {\r\n      this.applyOnList = response[0];\r\n      this.filterApplyOnList = response[0];\r\n      this.filteredAccountList = response[1];\r\n      this.accountList = response[1];\r\n      this.typeList = response[2];\r\n      this.filterTypeList = response[2];\r\n      this.postVoucherList = response[3];\r\n      this.filterPostVoucherList = response[3];\r\n    })).subscribe(res => {\r\n    \r\n    });\r\n  }\r\n\r\n\r\n  getItemInfo()\r\n  {\r\n    this._masterSeconedService.getInterestId(this.selectedId).subscribe((res) => {\r\n      this.itemForm.get('accountId').setValue(res.accountId);\r\n      this.itemForm.get('type').setValue(res.type);\r\n      this.itemForm.get('applyOn').setValue(res.applyOn);\r\n      this.itemForm.get('postVouchers').setValue(res.postVouchers);\r\n      this.itemForm.get('intRate').setValue(res.intRate);\r\n\r\n      this.itemForm.get('yearDays').setValue(res.yearDays);\r\n      this.itemForm.get('fromDt').setValue(res.fromDt);\r\n      this.itemForm.get('toDt').setValue(res.toDt);\r\n      this.itemForm.get('id').setValue(res.id);\r\n\r\n      \r\n    });\r\n\r\n  }\r\n\r\n  /* to filter select account dropdown*/\r\n  onInputChange(event: any) {\r\n    const searchInput = event.target.value.toLowerCase();\r\n\r\n    this.filteredAccountList = this.accountList.filter((data) => {\r\n      const prov = data.name.toLowerCase();\r\n      return prov.includes(searchInput);\r\n    });\r\n\r\n    if (searchInput === '') {\r\n      this.filteredAccountList = [...this.accountList];\r\n    }\r\n  }\r\n\r\n  /* to filter select account dropdown*/\r\n  onInputTypeChange(event: any) {\r\n    const searchInput = event.target.value.toLowerCase();\r\n\r\n    this.filterTypeList = this.typeList.filter((data) => {\r\n      const prov = data.name.toLowerCase();\r\n      return prov.includes(searchInput);\r\n    });\r\n\r\n    if (searchInput === '') {\r\n      this.filterTypeList = [...this.typeList];\r\n    }\r\n  }\r\n\r\n  onInputApplyOnChange(event: any) {\r\n    const searchInput = event.target.value.toLowerCase();\r\n\r\n    this.filterApplyOnList = this.applyOnList.filter((data) => {\r\n      const prov = data.name.toLowerCase();\r\n      return prov.includes(searchInput);\r\n    });\r\n\r\n    if (searchInput === '') {\r\n      this.filterApplyOnList = [...this.applyOnList];\r\n    }\r\n  }\r\n\r\n  onInputVoucherChange(event: any) {\r\n    const searchInput = event.target.value.toLowerCase();\r\n\r\n    this.filterPostVoucherList = this.postVoucherList.filter((data) => {\r\n      const prov = data.name.toLowerCase();\r\n      return prov.includes(searchInput);\r\n    });\r\n\r\n    if (searchInput === '') {\r\n      this.filterPostVoucherList = [...this.postVoucherList];\r\n    }\r\n  }\r\n\r\n  public onSubmit(values: Object): void {\r\n    var body = this.itemForm.value;\r\n\r\n    if (this.itemForm.valid) {\r\n      //const body = JSON.stringify(addFormData);\r\n      this._masterSeconedService.saveInterest(body).subscribe(result => {\r\n        console.log(\"result\", result);\r\n        this.dialogRef.close();\r\n      }, err => {\r\n        console.log(err);\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.bindFormControls();\r\n    if (this.selectedId != 0) {\r\n      this.getItemInfo();\r\n    }\r\n    else\r\n    {\r\n      this.itemForm.get('id').setValue(0);\r\n    }\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}","<h2 class=\"heading\">Add Item</h2>\r\n<a (click)=\"close()\" class=\"close-btn\">\r\n    <span class=\"material-symbols-outlined\">\r\n      <mat-icon>close</mat-icon>\r\n    </span>\r\n</a>\r\n<form [formGroup]=\"itemForm\" (ngSubmit)=\"onSubmit(itemForm.value)\" fxLayout=\"row wrap\" class=\"user-form\">\r\n    <div class=\"white-block pb-5\">\r\n        <h3><span>Item</span></h3>\r\n        <div class=\"tab-party-details-parent\">\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n                <div class=\"dropdown-wrapper\">\r\n                    <mat-form-field class=\"select-slab-mat\" appearance=\"outline\">\r\n                      <mat-label>Select Account</mat-label>\r\n                      <mat-select #select placeholder=\"Select Account\" panelClass=\"custom-select-panel\" formControlName=\"accountId\">\r\n                        <input class=\"milti-search-box\" #multiUserSearch type=\"text\" autocomplete=\"off\" matInput placeholder=\"Search Account\" (input)=\"onInputChange($event)\" />\r\n                        <mat-option *ngFor=\"let option of filteredAccountList\" [value]=\"option.id\">\r\n                          {{ option.name }}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n                <div class=\"dropdown-wrapper\">\r\n                    <mat-form-field class=\"select-slab-mat\" appearance=\"outline\">\r\n                      <mat-label>Select Type</mat-label>\r\n                      <mat-select #select placeholder=\"Select Type\" panelClass=\"custom-select-panel\" formControlName=\"type\">\r\n                        <input class=\"milti-search-box\" #multiUserSearch type=\"text\" autocomplete=\"off\" matInput placeholder=\"Search Type\" (input)=\"onInputTypeChange($event)\" />\r\n                        <mat-option *ngFor=\"let option of filterTypeList\" [value]=\"option.id\">\r\n                          {{ option.name }}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n                <div class=\"dropdown-wrapper\">\r\n                    <mat-form-field class=\"select-slab-mat\" appearance=\"outline\">\r\n                      <mat-label>Select ApplyOn</mat-label>\r\n                      <mat-select #select placeholder=\"Select ApplyOn\" panelClass=\"custom-select-panel\" formControlName=\"applyOn\">\r\n                        <input class=\"milti-search-box\" #multiUserSearch type=\"text\" autocomplete=\"off\" matInput placeholder=\"Search ApplyOn\" (input)=\"onInputApplyOnChange($event)\" />\r\n                        <mat-option *ngFor=\"let option of filterApplyOnList\" [value]=\"option.id\">\r\n                          {{ option.name }}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n                <div class=\"dropdown-wrapper\">\r\n                    <mat-form-field class=\"select-slab-mat\" appearance=\"outline\">\r\n                      <mat-label>Select Post Voucher</mat-label>\r\n                      <mat-select #select placeholder=\"Select Post Voucher\" panelClass=\"custom-select-panel\" formControlName=\"postVouchers\">\r\n                        <input class=\"milti-search-box\" #multiUserSearch type=\"text\" autocomplete=\"off\" matInput placeholder=\"Search Post Voucher\" (input)=\"onInputVoucherChange($event)\" />\r\n                        <mat-option *ngFor=\"let option of filterPostVoucherList\" [value]=\"option.id\">\r\n                          {{ option.name }}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label>Year Days</mat-label>\r\n                  <input matInput autocomplete=\"off\" placeholder=\"Year Days\" formControlName=\"yearDays\" type=\"number\">\r\n                  <mat-error *ngIf=\"itemForm.controls.yearDays.errors?.required\">yearDays is required</mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label>Int Rate</mat-label>\r\n                  <input matInput autocomplete=\"off\" placeholder=\"Int Rate\" formControlName=\"intRate\" type=\"number\">\r\n                  <mat-error *ngIf=\"itemForm.controls.intRate.errors?.required\">Int Rate is required</mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label>From</mat-label>\r\n                  <input matInput [matDatepicker]=\"picker1\" formControlName=\"fromDt\">\r\n                  <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\r\n                  <mat-datepicker #picker1></mat-datepicker>\r\n                </mat-form-field>\r\n              </div>\r\n              <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <input matInput [matDatepicker]=\"picker2\" placeholder=\"To\" formControlName=\"toDt\">\r\n                  <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\r\n                  <mat-datepicker #picker2></mat-datepicker>\r\n                </mat-form-field>\r\n              </div>            \r\n        </div>\r\n    </div>\r\n    <div fxFlex=\"100\" class=\"mt-2 text-center space-between-btns\">\r\n        <button mat-raised-button color=\"warn\" (click)=\"close()\">Cancel</button>            \r\n        <button mat-raised-button color=\"primary\" class=\"uppercase\" [disabled]=\"!itemForm.valid\" type=\"submit\">Save</button> \r\n    </div>\r\n</form>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { DatatableComponent } from \"@swimlane/ngx-datatable\";\r\nimport { AppSettings } from \"src/app/app.settings\";\r\nimport { Settings } from \"src/app/app.settings.model\";\r\nimport { AppService } from \"src/app/service/app.service\";\r\nimport { MasterService } from \"../master.service\";\r\nimport { ConfirmationDialog } from \"../../Dialog/confirmation-dialog/confirmation-dialog.component\";\r\nimport { MasterSecondService } from \"../master-second.service\";\r\nimport { AddInterestMasterComponent } from \"./add-interest-master/add-interest-master.component\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\n\r\n@Component({\r\n  selector: 'app-interest-master',\r\n  templateUrl: './interest-master.component.html',\r\n  styleUrls: ['./interest-master.component.scss']\r\n})\r\nexport class InterestMasterComponent implements OnInit {\r\n\r\n  @ViewChild(DatatableComponent) table: DatatableComponent;\r\n  editing = {};\r\n  rows = [];\r\n  temp = [];\r\n  selected = [];\r\n  loadingIndicator: boolean = true;\r\n  reorderable: boolean = true;\r\n \r\n  public settings: Settings;\r\n  interestMasterList: any;\r\nconstructor(public appSettings: AppSettings, public snackBar: MatSnackBar,\r\n  public dialog: MatDialog, private _masterService: MasterService, private _masterSecondService: MasterSecondService) {\r\n      this.settings = this.appSettings.settings;\r\n    }\r\n\r\n  ngOnInit() {\r\n      this.getInterestList();\r\n  }\r\n\r\n  agGridOptions: any = {\r\n      defaultColDef: {\r\n        filter: true,\r\n        flex: 1,\r\n        sortable: true,\r\n        wraptext: true,\r\n        resizable: true\r\n      }\r\n  }\r\n\r\n  columnDefs = [\r\n      {\r\n        headerName: 'Action', field: 'fileIcon', cellRenderer: this.actionCellRenderer, minWidth: 80,\r\n        maxWidth: 110, resizable: true, filter: false\r\n      },\r\n      { headerName: 'Account Name', field: 'acName', filter: true, sorting: true, resizable: true },\r\n    { headerName: 'ApplyOn', field: 'applyOnName', filter: true, sorting: true, resizable: true },  \r\n    { headerName: 'From Date', field: 'fromDtFormat', filter: true, sorting: true, resizable: true },  \r\n    { headerName: 'To Date', field: 'toDtFormat', filter: true, sorting: true, resizable: true },  \r\n    { headerName: 'Type', field: 'typeName', filter: true, sorting: true, resizable: true },  \r\n    { headerName: 'Post Vouchers', field: 'postVouchersName', filter: true, sorting: true, resizable: true },  \r\n    { headerName: 'Int Rate', field: 'intRate', filter: true, sorting: true, resizable: true },  \r\n    { headerName: 'Year Days', field: 'yearDays', filter: true, sorting: true, resizable: true },  \r\n  ];\r\n\r\ngetInterestList() {\r\n  this._masterSecondService.getInterestList().subscribe((results) => {\r\n       this.interestMasterList = results;       \r\n      });\r\n  }\r\n\r\n  public actionCellRenderer(params: any) {\r\n      let eGui = document.createElement(\"div\");\r\n      let editingCells = params.api.getEditingCells();\r\n      let isCurrentRowEditing = editingCells.some((cell: any) => {\r\n        return cell.rowIndex === params.node.rowIndex;\r\n      });\r\n      eGui.innerHTML = `<button class=\"material-icons action-button-edit\" data-action=\"edit\">edit </button>\r\n                        <button class=\"material-icons action-button-red\" delete data-action=\"delete\">delete</button>`;    \r\n      return eGui;\r\n  }\r\n\r\n  onGridClick(params: any) {\r\n    if (params.event.target.dataset.action == \"edit\")\r\n    {\r\n      this.openAddIMDialog(params.data.id);\r\n    }\r\n    if (params.event.target.dataset.action == \"delete\")\r\n    {\r\n      const dialogRef = this.dialog.open(ConfirmationDialog, {\r\n        data: {\r\n          message: 'Do you really want to delete this record?',\r\n          buttonText: {\r\n            ok: 'Yes',\r\n            cancel: 'No'\r\n          }\r\n        }\r\n      });\r\n\r\n      dialogRef.afterClosed().subscribe((confirmed: boolean) => {\r\n        if (confirmed) {\r\n          this._masterSecondService.deleteInterest(params.data.id).subscribe((res) => {\r\n            if(res.isSuccess){\r\n              this.showToaster(res.message);\r\n              this.getInterestList();\r\n            } else {\r\n              this.showToaster(res.message, true);\r\n            }\r\n          });\r\n        }\r\n      });\r\n\r\n\r\n    }\r\n  }\r\n\r\n  showToaster(message, isError = false) {\r\n    const panelClass = isError ? ['red-text'] : undefined;\r\n    const label = isError ? \"Error\" : \"Success\";\r\n    const time = isError? 6000 : 3000;\r\n  \r\n    this.snackBar.open(message, label, {\r\n      duration: time,\r\n      panelClass: panelClass,\r\n    });\r\n  }\r\n\r\n  public openAddIMDialog(user) {\r\n      let dialogRef = this.dialog.open(AddInterestMasterComponent, {\r\n        data: { id:user }\r\n      });\r\n    \r\n      dialogRef.afterClosed().subscribe(user => {\r\n        this.getInterestList();\r\n        if (user) {\r\n          /* (user.id) ? this.updateUser(user) : this.addUser(user);*/\r\n        }\r\n      });\r\n  } \r\n}\r\n","<div class=\"row\">\n    <div fxLayout=\"row\" class=\"mt-2 flex-end\">\n      <button mat-raised-button color=\"accent\" (click)=\"openAddIMDialog(null)\" class=\"icon-btn ml-15\">\n        <mat-icon>add</mat-icon> Add Interest Master\n      </button>\n    </div>\n    <div class=\"col-xl-12 mt-2\">\n        <ag-grid-angular style=\" height: 535px;\"\n                         class=\"ag-theme-material\"\n                           [rowHeight]=\"31\"\n                         [rowData]=\"interestMasterList\"\n                         [pagination]=\"true\"\n                         [columnDefs]=\"columnDefs\"\n                         [defaultColDef]=\"agGridOptions.defaultColDef\"\n                         (cellClicked)=\"onGridClick($event)\"\n                         headerHeight=\"34\">\n        </ag-grid-angular>\n      </div>\n  </div>","import { Component, OnInit, Inject, ViewChild } from '@angular/core';\nimport { FormGroup, UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from '@angular/material/dialog';\nimport { MasterService } from '../../master.service';\nimport { forkJoin, map } from 'rxjs';\nimport { AppSettings } from 'src/app/app.settings';\nimport { AppService } from 'src/app/service/app.service';\nimport { MatSelect } from '@angular/material/select';\nimport { MatOption } from '@angular/material/core';\nimport { MasterSecondService } from '../../master-second.service';\nimport { ErrorDialog } from '../../../Dialog/confirmation-dialog/error-dialog.component';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n\n\n@Component({\n  selector: 'app-add-item-group',\n  templateUrl: './add-item-group.component.html',\n  styleUrls: ['./add-item-group.component.scss']\n})\nexport class AddItemGroupComponent implements OnInit {\n  @ViewChild('select') select: MatSelect;\n  public itemGroupNameForm: UntypedFormGroup;\n  public exchangeForm: UntypedFormGroup;\n  applyOnList: any;\n  exchangeList:any;\n  selectedId: any;\n  selectedName: any;\n  accountList: any[];\n  accountIds: Array<string>;\n\n  accountAllSellected: boolean = false;\n  itemGroupList: any[] =[];\n  accountApplyOnList: any[];\n  gridApi: any;\n  isRowSelected: boolean = false;\n  agGridOptions: any = {\n    defaultColDef: {\n      filter: true,\n      //flex:1,\n      sortable: true,\n      wraptext: true,\n      resizable: true,\n      /* minWidth: 100,*/\n\n    },\n    /* suppressRowHoverHighlight: true,*/\n  }\n\n  columnDefs = [{\n    headerName: 'Added account Item Group list',\n    children: [\n      {\n        headerName: '', editable: false, minwidth: 45, width: 45, maxwidth: 45, resizable: false, sortable: false, filter: false, checkboxSelection: true, headerCheckboxSelection: true,\n      },\n      { headerName: 'Exchange Name', field: 'exName', filter: true, sorting: true, resizable: true, flex: 1, },\n      { headerName: 'Item Name', field: 'itemName', filter: true, sorting: true, resizable: true, flex: 1, },\n    ]\n  }];\n\n  constructor(public appSettings: AppSettings,\n    private formBuilder: UntypedFormBuilder, public dialogRef: MatDialogRef<AddItemGroupComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any, private _masterService: MasterService,\n    private _masterSecondService: MasterSecondService, public dialog: MatDialog, public snackBar: MatSnackBar) {\n\n    this.selectedId = data.id;\n    if (data.id == null) { this.selectedId = 0; }\n  }\n\n\n\n  checkTaxSelect() {\n    if (this.selectedId == 0) {\n      const dialogRef = this.dialog.open(ErrorDialog, {\n        data: {\n          message: 'Please select or save tax to add account tax',\n          buttonText: {\n            ok: 'OK',\n\n          }\n        }\n\n      });\n    }\n  }\n\n  /* to filter select account dropdown*/\n  onInputChange(event: any) {\n    const searchInput = event.target.value.toLowerCase();\n\n    this.accountList = this.accountList.filter((data) => {\n      const prov = data.name.toLowerCase();\n      return prov.includes(searchInput);\n    });\n  }\n\n  bindFormControls() {\n    this.itemGroupNameForm = this.formBuilder.group({\n      'name': ['', Validators.required],\n      'id': [0]\n    });\n\n  }\n\n  bindExchangeFormControls() {\n    this.exchangeForm = this.formBuilder.group({\n      'accounts': ['', Validators.required],\n      'id': [0]\n    });\n  }\n\n  onExchangeSelection(selectedExchangeId: any) {\n    if (selectedExchangeId) {\n      this._masterService.getItemListExchange(selectedExchangeId).subscribe(\n        (response) => {\n          this.accountList = response;\n        },\n        (error) => {\n          console.error('Error fetching item list:', error);\n        }\n      );\n    }\n  }\n\n  \n\n  onGridReady(event) { this.gridApi = event.api; }\n\n  accountAllSelection() {\n    this.accountAllSellected = true;\n    var isAllChecked = this.select.options.first.selected;\n    this.select.options.forEach(\n      (item: MatOption, index) => {\n        if (isAllChecked) { item.select(); }\n        else { item.deselect() }\n        \n      }\n    );\n  }\n\n  initialApiCalls() {\n    forkJoin([this._masterService.getExchangeName()]).pipe(map(response => {\n      this.exchangeList = response[0];\n    })).subscribe(res => {\n\n    });\n    if (this.selectedId != 0) { this.getItemGroupList(); }\n  }\n\n  getItemGroupId() {\n    this._masterSecondService.getItemGroupId(this.selectedId).subscribe((res) => {\n      this.itemGroupNameForm.get('name').setValue(res.name);\n      this.itemGroupNameForm.get('id').setValue(res.id);\n      this.selectedName = res.name;\n    });\n  }\n\n  getItemGroupList() {\n    this._masterSecondService.getItemGroupList(this.selectedId).subscribe((res) => {\n      this.itemGroupList = res;\n    });\n  }\n\n\n  public onSubmit(values: Object): void {\n    this.itemGroupNameForm.controls['name'].setValue(String(this.itemGroupNameForm.get('name').value));\n    var body = this.itemGroupNameForm.value;\n    if (this.itemGroupNameForm.valid) {\n      this._masterSecondService.saveItemGroup(body).subscribe(result => {\n        console.log(result);\n        if(result.isSuccess){\n          this.selectedId = result.id;\n          this.itemGroupNameForm.get('id').setValue(result.id);\n          this.showToaster(result.message);\n        } else {\n          this.showToaster(result.message, true);\n        }\n        // this.dialogRef.close();\n      }, err => {\n        console.log(err);\n      });\n    }\n  }\n\n  deleteItemGroup()\n  {\n    var selectedRecord = this.gridApi.getSelectedRows();\n    if (selectedRecord.length == 0) {\n      const dialogRef = this.dialog.open(ErrorDialog, {\n        data: {\n          message: 'Please select record to delete',\n          buttonText: {\n            ok: 'OK',\n\n          }\n        }\n\n      });\n\n    }\n    else\n    {\n      var req = selectedRecord.map(x => x.id);\n      this._masterSecondService.removeMultipleItemGroup(req).subscribe(result => {\n        this.getItemGroupList();\n        this.showToaster(result);\n      });\n    }\n  }\n\n  showToaster(message, isError = false) {\n    const panelClass = isError ? ['red-text'] : undefined;\n    const label = isError ? \"Error\" : \"Success\";\n  \n    this.snackBar.open(message, label, {\n      duration: 30000,\n      panelClass: panelClass,\n    });\n  }\n\n  public onExchangeSubmit(values: Object): void {\n\n    if (this.selectedId == 0) {\n      const dialogRef = this.dialog.open(ErrorDialog, {\n        data: {\n          message: 'Please save Exchange to add Item Groups',\n          buttonText: {\n            ok: 'OK',\n\n          }\n        }\n\n      });\n      return;\n    }\n\n    var body = this.exchangeForm.value;\n    //to remove select all option value that is '-1'\n    body.accounts.forEach((value, index) => {\n      if (value == '-1') body.accounts.splice(index, 1);\n    });\n    var req = {\n      \"groupId\": this.selectedId,\n      \"itemList\": body.accounts\n    }\n  \n    if (this.exchangeForm.valid) {\n      this._masterSecondService.addItemGroup(req).subscribe(result => {\n        this.getItemGroupList();\n      });\n    }\n  }\n\n  ngOnInit() {\n    this.bindFormControls();\n    this.bindExchangeFormControls();\n    this.initialApiCalls();\n    if (this.selectedId != 0) {\n      this.getItemGroupId();\n     \n    }\n    else {\n      this.itemGroupNameForm.get('id').setValue(0);\n    }\n  }\n\n  close(): void {\n    this.dialogRef.close();\n  }\n}\n","<h2 class=\"heading mb-10\">Add Item Group</h2>\r\n<a (click)=\"close()\" class=\"close-btn\">\r\n    <span class=\"material-symbols-outlined\">\r\n      <mat-icon>close</mat-icon>\r\n    </span>\r\n</a>\r\n<mat-tab-group>\r\n    <mat-tab label=\"Item Group\" (click)=\"checkTaxSelect()\">\r\n        <form [formGroup]=\"itemGroupNameForm\" (ngSubmit)=\"onSubmit(itemGroupNameForm.value)\" fxLayout=\"row wrap\" class=\"user-form\">\r\n            <div class=\"tab-party-details-parent\">\r\n                <div class=\"white-block pb-0\">\r\n                  <h3><span>Group Name</span></h3>\r\n                    <div fxFlex=\"100\" fxFlex.gt-sm=\"87\" fxFlex.sm=\"87\">\r\n                        <mat-form-field appearance=\"outline\">\r\n                          <mat-label>Group Name</mat-label>\r\n                          <input matInput autocomplete=\"off\" placeholder=\"Group Name\" formControlName=\"name\" type=\"text\">\r\n                          <mat-error *ngIf=\"itemGroupNameForm.controls.name.errors?.required\">Group Name is required</mat-error>\r\n                        </mat-form-field>\r\n                      </div>\r\n                      <button mat-raised-button color=\"primary\" class=\"uppercase save-btn mt-4\" [disabled]=\"!itemGroupNameForm.valid\" type=\"submit\">Save</button> \r\n                </div>\r\n            </div>\r\n        </form>\r\n        <form [formGroup]=\"exchangeForm\" (ngSubmit)=\"onExchangeSubmit(exchangeForm.value)\" fxLayout=\"row wrap\" class=\"user-form\">\r\n            <div class=\"tab-party-details-parent\">\r\n                <div class=\"white-block pb-0 mt-20\">\r\n                    <h3><span>Add Item</span></h3>\r\n                    <div fxFlex=\"100\" fxFlex.gt-sm=\"33.33\" fxFlex.sm=\"33.33\">\r\n                          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <mat-label>Exchange </mat-label>\r\n                            <mat-select placeholder=\"Select Exchange\" (selectionChange)=\"onExchangeSelection($event.value)\">\r\n                              <mat-option *ngFor=\"let exchange of exchangeList\" [value]=\"exchange.id\">\r\n                                {{exchange.name}}\r\n                              </mat-option>\r\n                            </mat-select>\r\n                          </mat-form-field>\r\n                    </div>\r\n                    <div fxFlex=\"100\" fxFlex.gt-sm=\"33.33\" fxFlex.sm=\"33.33\">\r\n                        <div class=\"dropdown-wrapper\">\r\n                            <mat-form-field class=\"select-slab-mat\" appearance=\"outline\">\r\n                              <mat-label>Select Item Group</mat-label>\r\n\r\n                              <mat-select #select multiple placeholder=\"Select Account\" panelClass=\"custom-select-panel\" formControlName=\"accounts\">\r\n                                <input class=\"milti-search-box\" #multiUserSearch type=\"text\" autocomplete=\"off\" matInput placeholder=\"Search Item Group\" (input)=\"onInputChange($event)\" />\r\n                                <mat-option value=-1 (click)=\"accountAllSelection()\">Select All</mat-option>\r\n                                <mat-option *ngFor=\"let option of accountList\" [value]=\"option.id\">\r\n                                  {{ option.itemName }}\r\n                                </mat-option>\r\n                              </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div fxFlex=\"100\" class=\"mt-2 text-center space-between-btns\">\r\n                <button mat-raised-button color=\"warn\" type=\"button\" (click)=\"close()\">Cancel</button>\r\n                <button mat-raised-button color=\"primary\" class=\"uppercase\" [disabled]=\"!exchangeForm.valid\" type=\"submit\">Save</button>\r\n            </div>\r\n        </form>\r\n        <div class=\"col-xl-12 mt-2 position-relative\">\r\n            <span class=\"material-symbols-outlined delete-icon\" (click)=\"deleteItemGroup()\">\r\n              <mat-icon>delete_sweep</mat-icon>\r\n            </span>\r\n            <ag-grid-angular style=\" height: 240px;\"\r\n                          class=\"ag-theme-material mt-2\"\r\n                          [rowData]=\"itemGroupList\"\r\n                          [pagination]=\"true\"\r\n                          [rowHeight]=\"31\"\r\n                          [columnDefs]=\"columnDefs\"\r\n                          [rowSelection]=\"'multiple'\"\r\n                          [rowMultiSelectWithClick]=\"true\"\r\n                          [defaultColDef]=\"agGridOptions.defaultColDef\"\r\n                          (gridReady)=\"onGridReady($event)\"\r\n                          headerHeight=\"34\">\r\n            </ag-grid-angular>\r\n        </div>\r\n    </mat-tab>\r\n</mat-tab-group>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { DatatableComponent } from \"@swimlane/ngx-datatable\";\r\nimport { AppSettings } from \"src/app/app.settings\";\r\nimport { Settings } from \"src/app/app.settings.model\";\r\nimport { AppService } from \"src/app/service/app.service\";\r\nimport { MasterService } from \"../master.service\";\r\nimport { ConfirmationDialog } from \"../../Dialog/confirmation-dialog/confirmation-dialog.component\";\r\nimport { MasterSecondService } from \"../master-second.service\";\r\nimport { AddItemGroupComponent } from \"./add-item-group/add-item-group.component\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\n\r\n@Component({\r\n  selector: 'app-item-group',\r\n  templateUrl: './item-group.component.html',\r\n  styleUrls: ['./item-group.component.scss']\r\n})\r\nexport class ItemGroupComponent implements OnInit {\r\n  @ViewChild(DatatableComponent) table: DatatableComponent;\r\n  editing = {};\r\n  rows = [];\r\n  temp = [];\r\n  selected = [];\r\n  loadingIndicator: boolean = true;\r\n  reorderable: boolean = true;\r\n \r\n  public settings: Settings;\r\n  taxList: any[]=[];\r\nconstructor(public appSettings: AppSettings,\r\n  public dialog: MatDialog, public snackBar: MatSnackBar, private _masterService: MasterService, private _masterSecondService: MasterSecondService) {\r\n      this.settings = this.appSettings.settings;\r\n    }\r\n\r\n  ngOnInit() {\r\n      this.getItemGroupNameList();\r\n  }\r\n\r\n  agGridOptions: any = {\r\n      defaultColDef: {\r\n        filter: true,\r\n        flex: 1,\r\n        sortable: true,\r\n        wraptext: true,\r\n        resizable: true\r\n      }\r\n  }\r\n\r\n  columnDefs = [\r\n      {\r\n        headerName: 'Action', field: 'fileIcon', cellRenderer: this.actionCellRenderer, minWidth: 80,\r\n        maxWidth: 110, resizable: true, filter: false\r\n      },\r\n      { headerName: 'Name', field: 'name', filter: true, sorting: true, resizable: true },\r\n  ];\r\n\r\n  getItemGroupNameList() {\r\n    this._masterSecondService.getItemGroupNameList().subscribe((results) => {\r\n        this.taxList = results;       \r\n        });\r\n  }\r\n\r\n  public actionCellRenderer(params: any) {\r\n      let eGui = document.createElement(\"div\");\r\n      let editingCells = params.api.getEditingCells();\r\n      let isCurrentRowEditing = editingCells.some((cell: any) => {\r\n        return cell.rowIndex === params.node.rowIndex;\r\n      });\r\n      eGui.innerHTML = `<button class=\"material-icons action-button-edit\" data-action=\"edit\">edit </button>\r\n                        <button class=\"material-icons action-button-red\" delete data-action=\"delete\">delete</button>`;    \r\n      return eGui;\r\n  }\r\n\r\n  showToaster(message){\r\n    this.snackBar.open(message, \"Success\", {\r\n      duration: 6000,\r\n    });\r\n  }\r\n\r\n  onGridClick(params: any) {\r\n    if (params.event.target.dataset.action == \"edit\")\r\n    {\r\n      this.openTaxDialog(params.data.id);\r\n    }\r\n    if (params.event.target.dataset.action == \"delete\")\r\n    {\r\n      const dialogRef = this.dialog.open(ConfirmationDialog, {\r\n        data: {\r\n          message: 'Do you really want to delete this record?',\r\n          buttonText: {\r\n            ok: 'Yes',\r\n            cancel: 'No'\r\n          }\r\n        }\r\n      });\r\n\r\n      dialogRef.afterClosed().subscribe((confirmed: boolean) => {\r\n        if (confirmed) {\r\n          this._masterSecondService.deleteItemGroup(params.data.id).subscribe((res) => {\r\n            this.getItemGroupNameList();\r\n            if(res.isSuccess){\r\n              this.showToaster(res.message);\r\n            }\r\n          });\r\n        }\r\n      });\r\n\r\n\r\n    }\r\n  }\r\n\r\n  public openTaxDialog(user) {\r\n      let dialogRef = this.dialog.open(AddItemGroupComponent, {\r\n        data: { id:user }\r\n      });\r\n    \r\n      dialogRef.afterClosed().subscribe(user => {\r\n        this.getItemGroupNameList();\r\n        if (user) {\r\n          /* (user.id) ? this.updateUser(user) : this.addUser(user);*/\r\n        }\r\n      });\r\n  } \r\n}","<div class=\"row\">\n    <div fxLayout=\"row\" class=\"mt-2 flex-end\">\n      <button mat-raised-button color=\"primary\" class=\"delete-slab icon-btn\">\n        <mat-icon>\n          <span class=\"material-icons-outlined\">        \n            file_download\n          </span>\n        </mat-icon> \n        Export\n      </button>\n      <button mat-raised-button color=\"accent\" (click)=\"openTaxDialog(null)\" class=\"icon-btn ml-15\">\n        <mat-icon>add</mat-icon> Add Item Group\n      </button>\n    </div>\n    <div class=\"col-xl-12 mt-2\">\n        <ag-grid-angular style=\" height: 535px;\"\n                         class=\"ag-theme-material\"\n                           [rowHeight]=\"31\"\n                         [rowData]=\"taxList\"\n                         [pagination]=\"true\"\n                         [columnDefs]=\"columnDefs\"\n                         [defaultColDef]=\"agGridOptions.defaultColDef\"\n                         (cellClicked)=\"onGridClick($event)\"\n                         headerHeight=\"34\">\n        </ag-grid-angular>\n      </div>\n  </div>","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { AppSettings } from \"src/app/app.settings\";\r\nimport { Settings } from \"src/app/app.settings.model\";\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { DatatableComponent } from \"@swimlane/ngx-datatable\";\r\nimport { AppService } from \"src/app/service/app.service\";\r\nimport { forkJoin, map } from \"rxjs\";\r\nimport { MasterService } from \"../../master.service\";\r\nimport { ConfirmationDialog } from \"src/app/Forms/Dialog/confirmation-dialog/confirmation-dialog.component\";\r\nimport { CommonUtility } from \"src/app/shared/common-utility\";\r\nimport { ErrorDialog } from \"src/app/Forms/Dialog/confirmation-dialog/error-dialog.component\";\r\n\r\n@Component({\r\n  selector: 'app-contract-dialog',\r\n  templateUrl: './contract-dialog.component.html',\r\n  styleUrls: ['./contract-dialog.component.scss']\r\n})\r\nexport class ContractDialogComponent implements OnInit {\r\n  @ViewChild(DatatableComponent) table: DatatableComponent;\r\n  editing = {};\r\n  rows = [];\r\n  temp = [];\r\n  gridApi: any;\r\n  selected = [];\r\n  loadingIndicator: boolean = true;\r\n  reorderable: boolean = true;\r\n  selectedExId: any;\r\n  exchangeList: any;\r\n \r\n  public settings: Settings;\r\n  contractList: any = [];\r\n  constructor(public appSettings: AppSettings, private _appService: AppService, public dialogRef: MatDialogRef<ContractDialogComponent>, public dialog: MatDialog, private _masterService: MasterService) {\r\n    this.settings = this.appSettings.settings;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getExchangeList();\r\n  }\r\n\r\n  getExchangeList(){\r\n    forkJoin([this._masterService.getExchangeName()]).pipe(map(response => {\r\n      this.exchangeList = response[0];\r\n    })).subscribe(res => {\r\n    });\r\n  }\r\n\r\n  agGridOptions: any = {\r\n    defaultColDef: {\r\n      filter: true,\r\n      flex: 1,\r\n      sortable: true,\r\n      wraptext: true,\r\n      resizable: true\r\n    }\r\n  }\r\n\r\n  columnDefs = [\r\n    {\r\n      headerName: '', editable: false, minwidth: 45, width: 45, maxwidth: 45, resizable: false, sortable: false, filter: false, checkboxSelection: true, headerCheckboxSelection: true,\r\n    },\r\n    { headerName: 'Item Name', field: 'itemName', filter: true, sorting: true, resizable: true },\r\n  \r\n  ];\r\n\r\n  getcontractList(id: any) {\r\n    this._appService.getContractListItemImport(id).subscribe((results) => {\r\n     this.contractList = results;       \r\n    });\r\n  }\r\n\r\n  public actionCellRenderer(params: any) {\r\n    let eGui = document.createElement(\"div\");\r\n    let editingCells = params.api.getEditingCells();\r\n    let isCurrentRowEditing = editingCells.some((cell: any) => {\r\n      return cell.rowIndex === params.node.rowIndex;\r\n    });\r\n    eGui.innerHTML = `<button class=\"material-icons action-button-edit\" data-action=\"edit\">edit </button>\r\n                      <button class=\"material-icons action-button-red\" delete data-action=\"delete\">delete</button>`;\r\n\r\n    return eGui;\r\n  }\r\n\r\n  onBranchChange(event: any){\r\n    console.log(event);\r\n    this.getcontractList(this.selectedExId);\r\n  }\r\n\r\n  onGridReady(event) { this.gridApi = event.api; }\r\n\r\n  onGridClick(params: any) {\r\n    \r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  importContractItems()\r\n  {\r\n    var selectedRecord = this.gridApi.getSelectedRows();\r\n    if (selectedRecord.length == 0) {\r\n      const dialogRef = this.dialog.open(ErrorDialog, {\r\n        data: {\r\n          message: 'Please select record to Import',\r\n          buttonText: {\r\n            ok: 'OK',\r\n\r\n          }\r\n        }\r\n\r\n      });\r\n\r\n    }\r\n    else\r\n    {\r\n      const reqObj = selectedRecord.map(i => i.id);\r\n      this._masterService.importItem(reqObj).subscribe(result => {\r\n        this.dialogRef.close();\r\n      });\r\n    }\r\n  }\r\n}\r\n","<h2 class=\"heading\">Import</h2>\r\n<a (click)=\"close()\" class=\"close-btn\">\r\n    <span class=\"material-symbols-outlined\">\r\n      <mat-icon>close</mat-icon>\r\n    </span>\r\n</a>\r\n<div style=\"padding: 20px;\" class=\"row paret-form\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between\" class=\"mt-2\">\r\n      <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Exchange</mat-label>\r\n            <mat-select placeholder=\"\" [(ngModel)]=\"selectedExId\" (selectionChange)=\"onBranchChange($event)\">\r\n                <mat-option *ngFor=\"let exchange of exchangeList\" [value]=\"exchange.id\">\r\n                  {{exchange.name}}\r\n                </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n        <button mat-raised-button color=\"primary\" class=\"delete-slab icon-btn\" (click)=\"importContractItems()\">\r\n            Save\r\n        </button>\r\n    </div>\r\n    <div class=\"col-xl-12 mt-2\">\r\n      <ag-grid-angular style=\"width: 990px; height: 535px;\"\r\n                       class=\"ag-theme-material\"\r\n                       [rowData]=\"contractList\"\r\n                       [pagination]=\"true\"\r\n                        [rowHeight]=\"31\"\r\n                        [rowSelection]=\"'multiple'\"\r\n                       [columnDefs]=\"columnDefs\"\r\n                       (gridReady)=\"onGridReady($event)\"\r\n                       [defaultColDef]=\"agGridOptions.defaultColDef\"\r\n                       headerHeight=\"34\">\r\n      </ag-grid-angular>\r\n    </div>\r\n  </div>  \r\n  ","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { UntypedFormGroup, UntypedFormBuilder, Validators} from '@angular/forms';\r\nimport { User, UserContacts, UserProfile, UserSettings, UserSocial, UserWork } from '../../../../pages/users/user.model';\r\nimport { MasterService } from '../../master.service';\r\nimport { Item } from '../item.model';\r\nimport { forkJoin, map } from 'rxjs';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n\r\n@Component({\r\n  selector: 'app-item-dialog',\r\n  templateUrl: './add-item.component.html',\r\n  styleUrls: ['./add-item.component.scss']\r\n})\r\nexport class AddItemComponent implements OnInit {\r\n  public itemForm: UntypedFormGroup;\r\n  exchangeList: any;\r\n  selectedId: any;\r\n\r\n  constructor(public snackBar: MatSnackBar, private formBuilder: UntypedFormBuilder, public dialogRef: MatDialogRef<AddItemComponent>, @Inject(MAT_DIALOG_DATA) public data: any, private _appService: MasterService) {\r\n   \r\n    this.selectedId = data.id;\r\n    if (data.id == null) { this.selectedId = 0; }\r\n   \r\n  }\r\n\r\n  bindFormControls() {\r\n    this.itemForm = this.formBuilder.group({\r\n     \r\n      'ExId': ['', Validators.required],\r\n      'itemCode': ['', Validators.required],\r\n      'itemName': ['', Validators.required],\r\n      'exchangeSymbol': [],\r\n      'lotSizeValueMultiplier': [],\r\n      'IsinCode': [],\r\n      'ApplyCtt': [true],\r\n      'applyRiskManagementFees': [],\r\n      'id': []\r\n    });\r\n   this.initialApiCalls();\r\n}\r\n\r\n\r\n  initialApiCalls() {\r\n    forkJoin([this._appService.getExchangeName()]).pipe(map(response => {\r\n      this.exchangeList = response[0];\r\n    })).subscribe(res => {\r\n    \r\n    });\r\n  }\r\n\r\n\r\n  getItemInfo()\r\n  {\r\n    this._appService.getItemById(this.selectedId).subscribe((res) => {\r\n      debugger\r\n      this.itemForm.get('itemCode').setValue(res.itemCode);\r\n      this.itemForm.get('itemName').setValue(res.itemName);\r\n      this.itemForm.get('exchangeSymbol').setValue(res.exchangeSymbol);\r\n      this.itemForm.get('ExId').setValue(res.exId);\r\n      this.itemForm.get('IsinCode').setValue(res.isinCode);\r\n\r\n      this.itemForm.get('lotSizeValueMultiplier').setValue(res.lotSizeValueMultiplier.toFixed(2));\r\n      this.itemForm.get('ApplyCtt').setValue(res.applyCtt);\r\n      this.itemForm.get('applyRiskManagementFees').setValue(res.applyRiskManagementFees);\r\n      this.itemForm.get('id').setValue(res.id);\r\n\r\n      \r\n    });\r\n\r\n  }\r\n\r\n  public onSubmit(values: Object): void {\r\n\r\n    if ((this.itemForm.get('ApplyCtt').value) == null)\r\n    {\r\n      this.itemForm.controls['ApplyCtt'].setValue(false);\r\n    }\r\n    if ((this.itemForm.get('applyRiskManagementFees').value) == null) {\r\n      this.itemForm.controls['applyRiskManagementFees'].setValue(false);\r\n    }\r\n\r\n    this.itemForm.controls['lotSizeValueMultiplier'].setValue(Number(this.itemForm.get('lotSizeValueMultiplier').value));\r\n\r\n    var body = this.itemForm.value;\r\n    debugger;\r\n    //body.accountGroupId = this.getAcGroupId(this.acGroupCtrl.value);\r\n    //body.accountHeadId = this.getAcHeadId(this.acHeadCtrl.value);\r\n    //body.CityId = this.getCityId(this.cityCtrl.value);\r\n\r\n    if (this.itemForm.valid) {\r\n      //const body = JSON.stringify(addFormData);\r\n      this._appService.saveItem(body).subscribe(result => {\r\n        if(result.isSuccess){\r\n          console.log(\"result\", result);\r\n          this.dialogRef.close();\r\n        } else {\r\n          this.showToaster(result.message, true);\r\n        }\r\n      }, err => {\r\n        console.log(err);\r\n      });\r\n    }\r\n  }\r\n\r\n  showToaster(message, isError = false) {\r\n    const panelClass = isError ? ['red-text'] : undefined;\r\n    const label = isError ? \"Error\" : \"Success\";\r\n    const time = isError? 600000 : 300000;\r\n  \r\n    this.snackBar.open(message, label, {\r\n      duration: time,\r\n      panelClass: panelClass,\r\n    });\r\n  }\r\n\r\n  populateFields() {\r\n    if(!this.selectedId){\r\n      const itemCodeValue = this.itemForm.get('itemCode').value;\r\n      this.itemForm.get('itemName').setValue(itemCodeValue);\r\n      this.itemForm.get('exchangeSymbol').setValue(itemCodeValue);\r\n    }\r\n  }\r\n  \r\n\r\n  ngOnInit() {\r\n    this.bindFormControls();\r\n    if (this.selectedId != 0) {\r\n      this.getItemInfo();\r\n    }\r\n    else\r\n    {\r\n      this.itemForm.get('id').setValue(0);\r\n    }\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<h2 class=\"heading\">Add Item</h2>\r\n<a (click)=\"close()\" class=\"close-btn\">\r\n    <span class=\"material-symbols-outlined\">\r\n      <mat-icon>close</mat-icon>\r\n    </span>\r\n</a>\r\n<form [formGroup]=\"itemForm\" (ngSubmit)=\"onSubmit(itemForm.value)\" fxLayout=\"row wrap\" class=\"user-form\">\r\n    <div class=\"white-block pb-5\">\r\n        <h3><span>Item</span></h3>\r\n        <div class=\"tab-party-details-parent\">\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                <mat-label>Exchange</mat-label>\r\n                <mat-select placeholder=\"Select Tax\" formControlName=\"ExId\">\r\n                  <mat-option *ngFor=\"let exchange of exchangeList\" [value]=\"exchange.id\">\r\n                    {{exchange.name}}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Item Code</mat-label>\r\n                    <input matInput autocomplete=\"off\" placeholder=\"item Code\" formControlName=\"itemCode\" type=\"text\" (blur)=\"populateFields()\">\r\n                    <mat-error *ngIf=\"itemForm.controls.itemCode.errors?.required\">Item Code is required</mat-error>                \r\n                </mat-form-field> \r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Item Name</mat-label>\r\n                    <input matInput autocomplete=\"off\" placeholder=\"item Name\" formControlName=\"itemName\" type=\"text\">\r\n                    <mat-error *ngIf=\"itemForm.controls.itemName.errors?.required\">Item Name is required</mat-error>                \r\n                </mat-form-field> \r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Exchange Symbol</mat-label>\r\n                    <input matInput autocomplete=\"off\" placeholder=\"Exchange Symbol\" formControlName=\"exchangeSymbol\" type=\"text\">\r\n                    <mat-error *ngIf=\"itemForm.controls.exchangeSymbol.errors?.required\">Exchange Symbol is required</mat-error>                \r\n                </mat-form-field> \r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>lot size value multiplier</mat-label>\r\n                    <input matInput autocomplete=\"off\" placeholder=\"lot size value multiplier\" formControlName=\"lotSizeValueMultiplier\" type=\"number\" appCurrencyFormatter>\r\n                    <mat-error *ngIf=\"itemForm.controls.lotSizeValueMultiplier.errors?.required\">lot size value multiplier is required</mat-error>                \r\n                </mat-form-field> \r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Isin code</mat-label>\r\n                    <input matInput autocomplete=\"off\" placeholder=\"Isin code\" formControlName=\"IsinCode\" type=\"text\">\r\n                    <mat-error *ngIf=\"itemForm.controls.IsinCode.errors?.required\">Isin Code is required</mat-error>                \r\n                </mat-form-field> \r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\" class=\"pt-5 pb-5 pl-10\">\r\n                <mat-checkbox formControlName=\"ApplyCtt\">Apply Ctt</mat-checkbox>\r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\" class=\"pt-5 pb-5 pl-10\">\r\n                <mat-checkbox formControlName=\"applyRiskManagementFees\">Apply Risk Management Fees</mat-checkbox>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div fxFlex=\"100\" class=\"mt-2 text-center space-between-btns\">\r\n        <button mat-raised-button color=\"warn\" type=\"button\" (click)=\"close()\">Cancel</button>            \r\n        <button mat-raised-button color=\"primary\" class=\"uppercase\" [disabled]=\"!itemForm.valid\" type=\"submit\">Save</button> \r\n    </div>\r\n</form>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\r\n\r\nimport { AppSettings } from '../../../app.settings';\r\nimport { Settings } from '../../../app.settings.model';\r\nimport { AppService } from '../../../service/app.service';\r\nimport { CommonUtility } from '../../../shared/common-utility';\r\nimport { ConfirmationDialog } from '../../Dialog/confirmation-dialog/confirmation-dialog.component';\r\nimport { MasterService } from '../master.service';\r\nimport { AddItemComponent } from './item-dialog/add-item.component';\r\nimport { ContractDialogComponent } from './contract-dialog/contract-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-blank',\r\n  templateUrl: './item.component.html',\r\n  styleUrls: ['./item.component.css']\r\n})\r\nexport class ItemComponent implements OnInit {\r\n\r\n  @ViewChild(DatatableComponent) table: DatatableComponent;\r\n  editing = {};\r\n  rows = [];\r\n  temp = [];\r\n  selected = [];\r\n  loadingIndicator: boolean = true;\r\n  reorderable: boolean = true;\r\n  columns = [\r\n    { prop: 'Name' },\r\n    { name: 'item' },\r\n    { name: 'name' }\r\n  ];\r\n  public settings: Settings;\r\n  itemList: any;\r\n  constructor(public appSettings: AppSettings, private _appService: AppService, public dialog: MatDialog, private _masterService: MasterService) {\r\n    this.settings = this.appSettings.settings;\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getitemList();\r\n  }\r\n\r\n  agGridOptions: any = {\r\n    defaultColDef: {\r\n      filter: true,\r\n      flex: 1,\r\n      sortable: true,\r\n      wraptext: true,\r\n      resizable: true\r\n    }\r\n  }\r\n\r\n\r\n  columnDefs = [\r\n    {\r\n      headerName: 'Action', field: 'fileIcon', cellRenderer: this.actionCellRenderer, minWidth: 80,\r\n      maxWidth: 110, resizable: true, filter: false\r\n    },\r\n    { headerName: 'Code', field: 'itemCode', filter: true, sorting: true, resizable: true },\r\n    { headerName: 'Item', field: 'itemName', filter: true, sorting: true, resizable: true },\r\n    { headerName: 'ExSymbol', field: 'exchangeSymbol', filter: true, sorting: true, resizable: true },\r\n    { headerName: 'Exchange', field: 'exName', filter: true, sorting: true, resizable: true },    \r\n    { headerName: 'LotSize', field: 'lotSizeValueMultiplier', filter: true, sorting: true, resizable: true, valueFormatter: params => CommonUtility.formatNumber(params.data.lotSizeValueMultiplier), type: 'rightAligned' },\r\n    { headerName: 'IsinCode', field: 'isinCode', filter: true, sorting: true, resizable: true },\r\n    { headerName: 'ApplyCtt', field: 'applyCtt', filter: true, sorting: true, resizable: true },\r\n    { headerName: 'ApplyRiskManagementFees', field: 'applyRiskManagementFees', filter: true, sorting: true, resizable: true }\r\n\r\n  ];\r\n\r\n  onActivate(event) {\r\n    console.log('Activate Event', event);\r\n  }\r\n\r\n  getitemList() {\r\n    this._appService.getitems().subscribe((results) => {\r\n     this.itemList = results;\r\n     \r\n    });\r\n  }\r\n\r\n  public actionCellRenderer(params: any) {\r\n    let eGui = document.createElement(\"div\");\r\n    let editingCells = params.api.getEditingCells();\r\n    let isCurrentRowEditing = editingCells.some((cell: any) => {\r\n      return cell.rowIndex === params.node.rowIndex;\r\n    });\r\n    eGui.innerHTML = `<button class=\"material-icons action-button-edit\" data-action=\"edit\">edit </button>\r\n                      <button class=\"material-icons action-button-red\" delete data-action=\"delete\">delete</button>`;\r\n\r\n    return eGui;\r\n  }\r\n\r\n  onGridClick(params: any) {\r\n    debugger\r\n    if (params.event.target.dataset.action == \"edit\")\r\n    {\r\n      this.openUserDialog(params.data.id);\r\n\r\n    }\r\n    if (params.event.target.dataset.action == \"delete\")\r\n    {\r\n      const dialogRef = this.dialog.open(ConfirmationDialog, {\r\n        data: {\r\n          message: 'Do you really want to delete this record?',\r\n          buttonText: {\r\n            ok: 'Yes',\r\n            cancel: 'No'\r\n          }\r\n        }\r\n      });\r\n\r\n      dialogRef.afterClosed().subscribe((confirmed: boolean) => {\r\n        if (confirmed) {\r\n          this._masterService.deleteItem(params.data.id).subscribe((res) => {\r\n            this.getitemList();\r\n          });\r\n        }\r\n      });\r\n\r\n\r\n    }\r\n  }\r\n\r\n  public importContractMaster(){\r\n    let dialogRef = this.dialog.open(ContractDialogComponent);\r\n\r\n    dialogRef.afterClosed().subscribe(user => {\r\n      this.getitemList();\r\n    });\r\n  }\r\n\r\n  public openUserDialog(user) {\r\n    let dialogRef = this.dialog.open(AddItemComponent, {\r\n      data: { id:user }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(user => {\r\n\r\n      this.getitemList();\r\n      if (user)\r\n      {\r\n      \r\n       /* (user.id) ? this.updateUser(user) : this.addUser(user);*/\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","\r\n<div class=\"row\">\r\n  <div fxLayout=\"row\" class=\"mt-2 flex-end\">\r\n    <button mat-raised-button color=\"primary\" class=\"import-btn-item\" (click)=\"importContractMaster()\">\r\n      Import\r\n    </button>\r\n    <button mat-raised-button color=\"primary\" class=\"delete-slab icon-btn\" >\r\n      <mat-icon>\r\n        <span class=\"material-icons-outlined\">        \r\n          file_download\r\n        </span>\r\n      </mat-icon> \r\n      Export\r\n    </button>\r\n    <button mat-raised-button color=\"accent\" (click)=\"openUserDialog(null)\" class=\"icon-btn ml-15\">\r\n      <mat-icon>add</mat-icon> Add Item\r\n    </button>\r\n  </div>\r\n  <div class=\"col-xl-12 mt-2\">\r\n    <ag-grid-angular style=\" height: 535px;\"\r\n                     class=\"ag-theme-material\"\r\n                       [rowHeight]=\"31\"\r\n                     [rowData]=\"itemList\"\r\n                     [pagination]=\"true\"\r\n                     [columnDefs]=\"columnDefs\"\r\n                     [defaultColDef]=\"agGridOptions.defaultColDef\"\r\n                     (cellClicked)=\"onGridClick($event)\"\r\n                     headerHeight=\"34\">\r\n    </ag-grid-angular>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule, DatePipe } from '@angular/common';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { AccountComponent } from './account/account.component';\r\nimport { AddAccountComponent } from './account/account-dialog/add-account.component';\r\nimport { AddTransporterComponent } from './transporter/transporter-dialog/add-transporter.component';\r\nimport { AgGridModule } from 'ag-grid-angular';\r\nimport { ItemComponent } from './item/item.component';\r\nimport { TransporterComponent } from './transporter/transporter.component';\r\nimport { CompanyComponent } from './company/company.component';\r\nimport { AddCompanyComponent } from './company/company-dialog/add-company.component';\r\nimport { AddItemComponent } from './item/item-dialog/add-item.component';\r\nimport { SaudaComponent } from './sauda/sauda.component';\r\nimport { AddSaudaComponent } from './sauda/sauda-dialog/add-sauda.component';\r\nimport { ProductComponent } from './product/product.component';\r\nimport { AddProductComponent } from './product/product-dialog/add-product.component';\r\nimport { ContractMasterComponent } from './contract-master/contract-master.component';\r\nimport { AddContractMasterComponent } from './contract-master/contract-master-dialog/add-contract-master.component';\r\nimport { BrokerageSlabComponent } from './brokerage-slab/brokerage-slab.component';\r\nimport { ConfirmationDialog } from '../Dialog/confirmation-dialog/confirmation-dialog.component';\r\nimport { ErrorDialog } from '../Dialog/confirmation-dialog/error-dialog.component';\r\nimport { MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport { BrokerageSetupComponent } from './brokerage-setup/brokerage-setup.component';\r\nimport { AddSlabDetailsComponent } from './brokerage-slab/add-slab-details/add-slab-details.component';\r\nimport { AddSlabComponent } from './brokerage-slab/add-slab/add-slab.component';\r\nimport { AddSetupDetailsComponent } from './brokerage-setup/add-setup-details/add-setup-details.component';\r\nimport { BranchComponent } from './branch/branch.component';\r\nimport { TaxComponent } from './tax-master/tax-master.component';\r\nimport { AddTaxComponent } from './tax-master/tax-dialog/add-tax-master.component';\r\nimport { AddBranchAccountComponent } from './branch/add-branch-account/add-branch-account.component';\r\nimport { ExchangeComponent } from './exchange/exchange.component';\r\nimport { AddExchangeComponent } from './exchange/add-exchange/add-exchange.component';\r\nimport { AccountHeadComponent } from './account-head/account-head.component';\r\nimport { AddAccountHeadComponent } from './account-head/add-account-head/add-account-head.component';\r\nimport { InterestMasterComponent } from './interest-master/interest-master.component';\r\nimport { AddInterestMasterComponent } from './interest-master/add-interest-master/add-interest-master.component';\r\nimport { SymbolMappingComponent } from './symbol-mapping/symbol-mapping.component';\r\nimport { AddInteresetComponent } from './account/account-dialog/add-intereset/add-intereset.component';\r\nimport { FileCodeTabComponent } from './account/account-dialog/file-code-tab/file-code-tab.component';\r\nimport { SelfShareTabComponent } from './account/account-dialog/self-share-tab/self-share-tab.component';\r\nimport { BrokerageTabComponent } from './account/account-dialog/brokerage-tab/brokerage-tab.component';\r\nimport { ConfirmationAccountDialog } from '../Dialog/confirmation-dialog/confirmation-account-dialog.component';\r\nimport { ItemGroupComponent } from './item-group/item-group.component';\r\nimport { AddItemGroupComponent } from './item-group/add-item-group/add-item-group.component';\r\nimport { LockBrokerageComponent } from './brokerage-setup/lock-brokerage/lock-brokerage.component';\r\nimport { ViewItemGroupComponent } from './brokerage-setup/view-item-group/view-item-group.component';\r\nimport { SubBrokerageSetupComponent } from './sub-brokerage-setup/sub-brokerage-setup.component';\r\nimport { SubAddSetupDetailsComponent } from './sub-brokerage-setup/sub-add-setup-details/sub-add-setup-details.component';\r\nimport { SubLockBrokerageComponent } from './sub-brokerage-setup/sub-lock-brokerage/sub-lock-brokerage.component';\r\nimport { SharingSetupComponent } from './sharing-setup/sharing-setup.component';\r\nimport { AddSharingSetupComponent } from './sharing-setup/add-sharing-setup/add-sharing-setup.component';\r\nimport { LockSharingSetupComponent } from './sharing-setup/lock-sharing-setup/lock-sharing-setup.component';\r\nimport { InviteUserComponent } from '../User/invite-user/invite-user.component';\r\nimport { changePasswordComponent } from '../User/change-password/change-password.component';\r\nimport { ContractDialogComponent } from './item/contract-dialog/contract-dialog.component';\r\nimport { TradeFileComponent } from './trade-file/trade-file.component';\r\n\r\nexport const routes: Routes = [\r\n  { path: '', redirectTo: 'account', pathMatch: 'full' },\r\n  { path: 'account', component: AccountComponent, data: { breadcrumb: 'Account' } },\r\n  { path: 'item', component: ItemComponent, data: { breadcrumb: 'Item' } },\r\n  { path: 'transporter', component: TransporterComponent, data: { breadcrumb: 'Transporter' } },\r\n  { path: 'company', component: CompanyComponent, data: { breadcrumb: 'Company' } },\r\n  { path: 'sauda', component: SaudaComponent, data: { breadcrumb: 'Sauda' } },\r\n  { path: 'product', component: ProductComponent, data: { breadcrumb: 'Product' } },\r\n  { path: 'contract-master', component: ContractMasterComponent, data: { breadcrumb: 'Contract Master' } },\r\n  { path: 'brokerage-slab', component: BrokerageSlabComponent, data: { breadcrumb: 'Brokerage Slab' } },\r\n  { path: 'brokerage-setup', component: BrokerageSetupComponent, data: { breadcrumb: 'Brokerage Setup' } },\r\n  { path: 'sub-brokerage-setup', component: SubBrokerageSetupComponent, data: { breadcrumb: 'Sub Brokerage Setup' } },\r\n  { path: 'sharing-setup', component: SharingSetupComponent, data: { breadcrumb: 'Sharing Setup' } },\r\n  { path: 'branch', component: BranchComponent, data: { breadcrumb: 'Branch' } },\r\n  { path: 'tax', component: TaxComponent, data: { breadcrumb: 'Tax' } },\r\n  { path: 'trade-file', component: TradeFileComponent, data: { breadcrumb: 'Trade File' } },\r\n  { path: 'exchange', component: ExchangeComponent, data: { breadcrumb: 'Exchange' } },\r\n  { path: 'interest-master', component: InterestMasterComponent, data: { breadcrumb: 'Interest Master' } },\r\n  { path: 'account-head', component: AccountHeadComponent, data: { breadcrumb: 'Account Head' } },\r\n  { path: 'symbol-mapping', component: SymbolMappingComponent, data: { breadcrumb: 'Symbol Mapping' } },\r\n  { path: 'item-group', component: ItemGroupComponent, data: { breadcrumb: 'Item Group' } },\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    AgGridModule,\r\n  ],\r\n  declarations: [\r\n    AccountComponent,\r\n    AddAccountComponent,\r\n    AddTransporterComponent,\r\n    ItemComponent,\r\n    AddItemComponent,\r\n    TransporterComponent,\r\n    CompanyComponent,\r\n    AddCompanyComponent,\r\n    SaudaComponent,\r\n    AddSaudaComponent,\r\n    ProductComponent,\r\n    AddProductComponent,\r\n    ContractMasterComponent,\r\n    AddContractMasterComponent,\r\n    BrokerageSlabComponent,\r\n    ConfirmationDialog,\r\n    ConfirmationAccountDialog,\r\n    BrokerageSetupComponent,\r\n     ErrorDialog,\r\n     AddSlabDetailsComponent,\r\n     AddSlabComponent,\r\n     AddAccountComponent,\r\n     AddSetupDetailsComponent,\r\n     BranchComponent,\r\n     TaxComponent,\r\n     AddTaxComponent,\r\n     AddBranchAccountComponent,\r\n     AddExchangeComponent,\r\n     AccountHeadComponent,\r\n     AddAccountHeadComponent,\r\n     InterestMasterComponent,\r\n     AddInterestMasterComponent,\r\n     SymbolMappingComponent,\r\n     AddInteresetComponent,\r\n     FileCodeTabComponent,\r\n     SelfShareTabComponent,\r\n     BrokerageTabComponent,\r\n     ItemGroupComponent,\r\n     AddItemGroupComponent,\r\n     LockBrokerageComponent,\r\n     ViewItemGroupComponent,\r\n     SubBrokerageSetupComponent,\r\n     SubAddSetupDetailsComponent,\r\n     SubLockBrokerageComponent,\r\n     SharingSetupComponent,\r\n     AddSharingSetupComponent,\r\n     LockSharingSetupComponent,\r\n     InviteUserComponent,\r\n     changePasswordComponent,\r\n     ContractDialogComponent,\r\n     TradeFileComponent\r\n  ],\r\n  providers: [\r\n    DatePipe,\r\n    { provide: MAT_DATE_LOCALE, useValue: 'en-GB' }\r\n  ],\r\n})\r\nexport class MasterModule { }\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormControl, UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { Product } from '../product.model';\r\nimport { MasterService } from '../../master.service';\r\nimport { forkJoin, map } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'app-product-dialog',\r\n    templateUrl: './add-product.component.html',\r\n    styleUrls: ['./add-product.component.scss']\r\n})\r\n\r\nexport class AddProductComponent implements OnInit {\r\n    public productForm:UntypedFormGroup;\r\n    exchangeList: any;\r\n    selectedId: any;\r\n\r\n    constructor(private formBuilder: UntypedFormBuilder, public dialogRef: MatDialogRef<AddProductComponent>, @Inject(MAT_DIALOG_DATA) public data: any, private _appService: MasterService) {\r\n        this.selectedId = data.id;\r\n        if (data.id == null) { this.selectedId = 0; }\r\n    }\r\n\r\n    bindFormControls() {\r\n        this.productForm = this.formBuilder.group({\r\n            'ExId': ['', Validators.required],           \r\n            'symbol': ['', Validators.required],\r\n            'priceUnit': ['', Validators.required],\r\n            'description': ['', Validators.required],\r\n            'lotSize': ['', Validators.required],\r\n            'isincode': ['', Validators.required],\r\n            'qtyUnit': ['', Validators.required],\r\n            'securityGroup': ['', Validators.required],\r\n            'id': [0]\r\n        });\r\n        this.initialApiCalls();\r\n    }\r\n\r\n    initialApiCalls() {\r\n        forkJoin([this._appService.getExchangeName()]).pipe(map(response => {\r\n          this.exchangeList = response[0];\r\n        })).subscribe(res => {\r\n        \r\n        });\r\n    }\r\n\r\n    getProductInfo()\r\n    {\r\n        this._appService.getProductById(this.selectedId).subscribe((res) => {\r\n        this.productForm.get('symbol').setValue(res.symbol);\r\n        this.productForm.get('priceUnit').setValue(res.priceUnit);\r\n        this.productForm.get('description').setValue(res.description);\r\n        this.productForm.get('lotSize').setValue(res.lotSize);\r\n        this.productForm.get('qtyUnit').setValue(res.qtyUnit);\r\n        this.productForm.get('isincode').setValue(res.isincode);\r\n        this.productForm.get('securityGroup').setValue(res.securityGroup);\r\n        this.productForm.get('id').setValue(res.id);  \r\n        this.productForm.get('ExId').setValue(res.exId);     \r\n        });\r\n    }\r\n\r\n    public onSubmit(values: Object): void {\r\n    \r\n        this.productForm.controls['symbol'].setValue(String(this.productForm.get('symbol').value));\r\n        this.productForm.controls['priceUnit'].setValue(String(this.productForm.get('priceUnit').value));\r\n        this.productForm.controls['description'].setValue(String(this.productForm.get('description').value));\r\n        this.productForm.controls['lotSize'].setValue(Number(this.productForm.get('lotSize').value));\r\n        this.productForm.controls['qtyUnit'].setValue(Number(this.productForm.get('qtyUnit').value));\r\n        this.productForm.controls['isincode'].setValue(String(this.productForm.get('isincode').value));\r\n        this.productForm.controls['securityGroup'].setValue(String(this.productForm.get('securityGroup').value));\r\n    \r\n        var body = this.productForm.value;\r\n        debugger;\r\n        //body.accountGroupId = this.getAcGroupId(this.acGroupCtrl.value);\r\n        //body.accountHeadId = this.getAcHeadId(this.acHeadCtrl.value);\r\n        //body.CityId = this.getCityId(this.cityCtrl.value);\r\n    \r\n        if (this.productForm.valid) {\r\n          //const body = JSON.stringify(addFormData);\r\n          this._appService.saveProduct(body).subscribe(result => {\r\n            console.log(\"result\", result);\r\n            this.dialogRef.close();\r\n          }, err => {\r\n            console.log(err);\r\n          });\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.bindFormControls();\r\n        if (this.selectedId != 0) {\r\n            this.getProductInfo();\r\n        }\r\n        else {\r\n            this.productForm.get('id').setValue(0);\r\n        }\r\n    }\r\n\r\n    close(): void {\r\n        this.dialogRef.close();\r\n    }\r\n}","<h2 class=\"heading mb-0\">Add Product</h2>\r\n<a (click)=\"close()\" class=\"close-btn\">\r\n    <span class=\"material-symbols-outlined\">\r\n      <mat-icon>close</mat-icon>\r\n    </span>\r\n</a>\r\n<form [formGroup]=\"productForm\" (ngSubmit)=\"onSubmit(productForm.value)\" fxLayout=\"row wrap\" class=\"user-form\">\r\n    <div class=\"white-block pb-5\">\r\n        <h3><span>Product</span></h3>\r\n        <div class=\"tab-party-details-parent\">\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                    <mat-label>Exchange</mat-label>\r\n                    <mat-select placeholder=\"\" formControlName=\"ExId\">\r\n                        <mat-option *ngFor=\"let exchange of exchangeList\" [value]=\"exchange.id\">\r\n                          {{exchange.name}}\r\n                        </mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Symbol</mat-label>\r\n                    <input matInput autocomplete=\"off\" placeholder=\"\" formControlName=\"symbol\" type=\"text\">\r\n                    <mat-error *ngIf=\"productForm.controls.symbol.errors?.required\">Symbol is required</mat-error>                \r\n                </mat-form-field> \r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Price Unit</mat-label>\r\n                    <input matInput autocomplete=\"off\" placeholder=\"\" formControlName=\"priceUnit\" type=\"text\">\r\n                    <mat-error *ngIf=\"productForm.controls.priceUnit.errors?.required\">Price unit is required</mat-error>                \r\n                </mat-form-field> \r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"40\" fxFlex.sm=\"50\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Description</mat-label>\r\n                    <input matInput autocomplete=\"off\" placeholder=\"\" formControlName=\"description\" type=\"text\">\r\n                    <mat-error *ngIf=\"productForm.controls.description.errors?.required\">Description is required</mat-error>                \r\n                </mat-form-field> \r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Lot Size</mat-label>\r\n                    <input matInput autocomplete=\"off\" placeholder=\"\" formControlName=\"lotSize\" type=\"text\">\r\n                    <mat-error *ngIf=\"productForm.controls.lotSize.errors?.required\">lot size is required</mat-error>                \r\n                </mat-form-field> \r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Isin Size</mat-label>\r\n                    <input matInput autocomplete=\"off\" placeholder=\"\" formControlName=\"isincode\" type=\"text\">\r\n                    <mat-error *ngIf=\"productForm.controls.isincode.errors?.required\">isincode is required</mat-error>                \r\n                </mat-form-field> \r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Qty Unit</mat-label>\r\n                    <input matInput autocomplete=\"off\" placeholder=\"\" formControlName=\"qtyUnit\" type=\"text\">\r\n                    <mat-error *ngIf=\"productForm.controls.qtyUnit.errors?.required\">Qty Unit is required</mat-error>                \r\n                </mat-form-field> \r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"40\" fxFlex.sm=\"50\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Security Group</mat-label>\r\n                    <input matInput autocomplete=\"off\" placeholder=\"\" formControlName=\"securityGroup\" type=\"text\">\r\n                    <mat-error *ngIf=\"productForm.controls.securityGroup.errors?.required\">security Group is required</mat-error>                \r\n                </mat-form-field> \r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div fxFlex=\"100\" class=\"mt-2 text-center space-between-btns\">\r\n        <button mat-raised-button color=\"warn\" (click)=\"close()\">Cancel</button>            \r\n        <button mat-raised-button color=\"primary\" class=\"uppercase\" type=\"submit\">Save</button> \r\n    </div>\r\n</form>","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { AppSettings } from \"src/app/app.settings\";\r\nimport { Settings } from \"src/app/app.settings.model\";\r\nimport { MasterService } from \"../master.service\";\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\r\nimport { AddProductComponent } from \"./product-dialog/add-product.component\";\r\nimport { AppService } from \"src/app/service/app.service\";\r\nimport { ConfirmationDialog } from \"../../Dialog/confirmation-dialog/confirmation-dialog.component\";\r\nimport { CommonUtility } from \"../../../shared/common-utility\";\r\n\r\n@Component({\r\n    selector: 'app-blank',\r\n    templateUrl: './product.component.html',\r\n    styleUrls: ['./product.component.scss']\r\n})\r\n\r\nexport class ProductComponent implements OnInit {\r\n    @ViewChild(DatatableComponent) table: DatatableComponent;\r\n    editing = {};\r\n    rows = [];\r\n    temp = [];\r\n    selected = [];\r\n    loadingIndicator: boolean = true;\r\n    reorderable: boolean = true;\r\n   \r\n    public settings: Settings;\r\n    productList: any;\r\n    constructor(public appSettings: AppSettings, private _appService: AppService, public dialog: MatDialog, private _masterService: MasterService) {\r\n      this.settings = this.appSettings.settings;\r\n    }\r\n\r\n    ngOnInit() {\r\n      this.getproductList();\r\n    }\r\n\r\n    agGridOptions: any = {\r\n      defaultColDef: {\r\n        filter: true,\r\n        flex: 1,\r\n        sortable: true,\r\n        wraptext: true,\r\n        resizable: true\r\n      }\r\n    }\r\n\r\n    columnDefs = [\r\n      {\r\n        headerName: 'Action', field: 'fileIcon', cellRenderer: this.actionCellRenderer, minWidth: 80,\r\n        maxWidth: 110, resizable: true, filter: false\r\n      },\r\n      { headerName: 'Exchange', field: 'exName', filter: true, sorting: true, resizable: true },\r\n      { headerName: 'Symbol', field: 'symbol', filter: true, sorting: true, resizable: true },\r\n      { headerName: 'PriceUnit', field: 'priceUnit', filter: true, sorting: true, resizable: true },\r\n      { headerName: 'Description', field: 'description', filter: true, sorting: true, resizable: true },    \r\n      { headerName: 'LotSize', field: 'lotSize', filter: true, sorting: true, resizable: true, valueFormatter: params => CommonUtility.formatNumber(params.data.lotSize), type: 'rightAligned' },\r\n      { headerName: 'QtyUnit', field: 'qtyUnit', filter: true, sorting: true, resizable: true },\r\n      { headerName: 'Isincode', field: 'isincode', filter: true, sorting: true, resizable: true },\r\n      { headerName: 'SecurityGroup', field: 'securityGroup', filter: true, sorting: true, resizable: true },\r\n    \r\n    ];\r\n\r\n    getproductList() {\r\n      this._appService.getProduct().subscribe((results) => {\r\n       this.productList = results;       \r\n      });\r\n    }\r\n\r\n    public actionCellRenderer(params: any) {\r\n      let eGui = document.createElement(\"div\");\r\n      let editingCells = params.api.getEditingCells();\r\n      let isCurrentRowEditing = editingCells.some((cell: any) => {\r\n        return cell.rowIndex === params.node.rowIndex;\r\n      });\r\n      eGui.innerHTML = `<button class=\"material-icons action-button-edit\" data-action=\"edit\">edit </button>\r\n                        <button class=\"material-icons action-button-red\" delete data-action=\"delete\">delete</button>`;\r\n  \r\n      return eGui;\r\n    }\r\n\r\n    onGridClick(params: any) {\r\n      debugger\r\n      if (params.event.target.dataset.action == \"edit\")\r\n      {\r\n        this.openSaudaDialog(params.data.id);\r\n      }\r\n      if (params.event.target.dataset.action == \"delete\")\r\n      {\r\n        const dialogRef = this.dialog.open(ConfirmationDialog, {\r\n          data: {\r\n            message: 'Do you really want to delete this record?',\r\n            buttonText: {\r\n              ok: 'Yes',\r\n              cancel: 'No'\r\n            }\r\n          }\r\n        });\r\n  \r\n        dialogRef.afterClosed().subscribe((confirmed: boolean) => {\r\n          if (confirmed) {\r\n            this._masterService.deleteProduct(params.data.id).subscribe((res) => {\r\n              this.getproductList();\r\n            });\r\n          }\r\n        });\r\n  \r\n  \r\n      }\r\n    }\r\n\r\n    public openSaudaDialog(user) {\r\n        let dialogRef = this.dialog.open(AddProductComponent, {\r\n          data: { id:user }\r\n        });\r\n      \r\n        dialogRef.afterClosed().subscribe(user => {\r\n          this.getproductList();\r\n          if (user) {\r\n            /* (user.id) ? this.updateUser(user) : this.addUser(user);*/\r\n          }\r\n        });\r\n    }    \r\n\r\n}\r\n","<div class=\"row\">\r\n  <div fxLayout=\"row\" class=\"mt-2 flex-end\">\r\n    <button mat-raised-button color=\"primary\" class=\"delete-slab icon-btn\" >\r\n      <mat-icon>\r\n        <span class=\"material-icons-outlined\">        \r\n          file_download\r\n        </span>\r\n      </mat-icon> \r\n      Export\r\n    </button>\r\n    <button mat-raised-button color=\"accent\" (click)=\"openSaudaDialog(null)\" class=\"icon-btn ml-15\">\r\n      <mat-icon>add</mat-icon> Add Product\r\n    </button>\r\n  </div>\r\n  <div class=\"col-xl-12 mt-2\">\r\n    <ag-grid-angular style=\" height: 535px;\"\r\n                     class=\"ag-theme-material\"\r\n                       [rowHeight]=\"31\"\r\n                     [rowData]=\"productList\"\r\n                     [pagination]=\"true\"\r\n                     [columnDefs]=\"columnDefs\"\r\n                     [defaultColDef]=\"agGridOptions.defaultColDef\"\r\n                     (cellClicked)=\"onGridClick($event)\"\r\n                     headerHeight=\"34\">\r\n    </ag-grid-angular>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormControl, UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { forkJoin, map } from 'rxjs';\r\nimport { ACGroup } from '../../account/account-dialog/add-account.component';\r\nimport { MasterService } from \"../../master.service\";\r\nimport { Sauda } from '../sauda.model';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  selector: 'app-sauda-dialog',\r\n  templateUrl: './add-sauda.component.html',\r\n  styleUrls: ['./add-sauda.component.scss']\r\n})\r\n\r\nexport class AddSaudaComponent implements OnInit {\r\n  public saudaForm: UntypedFormGroup;\r\n  instrumentList: ACGroup[];\r\n  optionType: any;\r\n  itemList: any;\r\n selectedId: any;\r\n\r\n\r\n  constructor(public snackBar: MatSnackBar, private formBuilder: UntypedFormBuilder, public dialogRef: MatDialogRef<AddSaudaComponent>, @Inject(MAT_DIALOG_DATA) public data: any, private _appService: MasterService) {\r\n    debugger\r\n    this.selectedId = data.id;\r\n    if (data.id == null) { this.selectedId = 0; }\r\n  }\r\n\r\n  bindFormControls() {\r\n    this.saudaForm = this.formBuilder.group({\r\n      'itemId': ['', Validators.required],\r\n      'saudaCode': ['', Validators.required],\r\n      'maturity': ['', Validators.required],\r\n      'instrumentType': ['', Validators.required],\r\n      'optionType': ['', Validators.required],\r\n      'strikePrice': [],\r\n      'firstTradingDate': [],\r\n      'lastTradingDate': [],\r\n      'id': [],\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.bindFormControls();\r\n    this.initialApiCalls();\r\n    if (this.selectedId != 0) {\r\n      this.getInfo();\r\n    }\r\n    else {\r\n      this.saudaForm.get('id').setValue(0);\r\n    }\r\n    \r\n  }\r\n\r\n  getInfo() {\r\n    this._appService.getSaudaById(this.selectedId).subscribe((res) => {\r\n      debugger\r\n      this.saudaForm.get('itemId').setValue(res.itemId);\r\n      this.saudaForm.get('saudaCode').setValue(res.saudaCode);\r\n      this.saudaForm.get('maturity').setValue(res.maturity);\r\n      this.saudaForm.get('instrumentType').setValue(res.instrumentType);\r\n      this.saudaForm.get('optionType').setValue(res.optionType);\r\n          \r\n      this.saudaForm.get('strikePrice').setValue(res.strikePrice);\r\n      this.saudaForm.get('firstTradingDate').setValue(res.firstTradingDate);\r\n      this.saudaForm.get('lastTradingDate').setValue(res.lastTradingDate);\r\n      this.saudaForm.get('id').setValue(res.id);\r\n\r\n\r\n    });\r\n\r\n  }\r\n\r\n\r\n  initialApiCalls() {\r\n    forkJoin([this._appService.getInstrumentList(), this._appService.getOptionList(),\r\n    this._appService.getItemListDrp()]).pipe(map(response => {\r\n      debugger\r\n      this.instrumentList = response[0];\r\n      this.optionType = response[1];\r\n      this.itemList = response[2]\r\n    })).subscribe(res => {\r\n     \r\n    });\r\n  }\r\n  onKey(event: any)\r\n  {\r\n    this.itemList = this.search(event);\r\n  }\r\n\r\n  search(value: string) {\r\n    let filter = value.toLowerCase();\r\n    return this.itemList.filter(option => option.toLowerCase().startsWith(filter));\r\n  }\r\n  \r\n  public onSubmit(values: Object): void {\r\n\r\n    //if ((this.saudaForm.get('ApplyCtt').value) == null) {\r\n    //  this.saudaForm.controls['ApplyCtt'].setValue(false);\r\n    //}\r\n    //if ((this.saudaForm.get('applyRiskManagementFees').value) == null) {\r\n    //  this.saudaForm.controls['applyRiskManagementFees'].setValue(false);\r\n    //}\r\n\r\n    this.saudaForm.controls['strikePrice'].setValue(Number(this.saudaForm.get('strikePrice').value));\r\n\r\n    var body = this.saudaForm.value;\r\n    debugger;\r\n    //body.accountGroupId = this.getAcGroupId(this.acGroupCtrl.value);\r\n    //body.accountHeadId = this.getAcHeadId(this.acHeadCtrl.value);\r\n    //body.CityId = this.getCityId(this.cityCtrl.value);\r\n\r\n    if (this.saudaForm.valid) {\r\n      //const body = JSON.stringify(addFormData);\r\n      this._appService.saveSauda(body).subscribe(result => {\r\n        if(result.isSuccess){\r\n          console.log(\"result\", result);\r\n          this.dialogRef.close();\r\n        } else {\r\n          this.showToaster(result.message, true);\r\n        }\r\n      }, err => {\r\n        console.log(err);\r\n      });\r\n    }\r\n  }\r\n\r\n  showToaster(message, isError = false) {\r\n    const panelClass = isError ? ['red-text'] : undefined;\r\n    const label = isError ? \"Error\" : \"Success\";\r\n    const time = isError? 600000 : 300000;\r\n  \r\n    this.snackBar.open(message, label, {\r\n      duration: time,\r\n      panelClass: panelClass,\r\n    });\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n"," <h2 class=\"heading mb-0\">Sauda Master</h2>\r\n <a (click)=\"close()\" class=\"close-btn\">\r\n  <span class=\"material-symbols-outlined\">\r\n    <mat-icon>close</mat-icon>\r\n  </span>\r\n</a>\r\n<form [formGroup]=\"saudaForm\" (ngSubmit)=\"onSubmit(saudaForm.value)\" fxLayout=\"row wrap\" class=\"user-form\">\r\n    <div class=\"white-block pb-5\">\r\n        <h3><span>Sauda Master Details</span></h3>\r\n        <div class=\"tab-party-details-parent\">\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                <mat-label>Item</mat-label>\r\n              \r\n                <mat-select placeholder=\"Select Item\" formControlName=\"itemId\">\r\n                  <!--<input (keyup)=\"onKey($event.target.value)\">-->\r\n                  <mat-option *ngFor=\"let item of itemList\" [value]=\"item.id\">\r\n                    {{item.name}}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Sauda Code</mat-label>\r\n                    <input matInput autocomplete=\"off\" placeholder=\"\" formControlName=\"saudaCode\" type=\"text\">\r\n                    <mat-error *ngIf=\"saudaForm.controls.saudaCode.errors?.required\">saudaCode is required</mat-error>                \r\n                </mat-form-field> \r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Maturity</mat-label>\r\n                    <input matInput [matDatepicker]=\"Maturity\" formControlName=\"maturity\" >\r\n                    <mat-datepicker-toggle matSuffix [for]=\"Maturity\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #Maturity></mat-datepicker>\r\n                </mat-form-field>                  \r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                <mat-label>Instrument Type</mat-label>\r\n                <mat-select placeholder=\"Select InsType\" formControlName=\"instrumentType\">\r\n                  <mat-option *ngFor=\"let exchange of instrumentList\" [value]=\"exchange.id\">\r\n                    {{exchange.name}}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                <mat-label>Option Type</mat-label>\r\n                <mat-select placeholder=\"Select Option\" formControlName=\"optionType\">\r\n                  <mat-option *ngFor=\"let option of optionType\" [value]=\"option.id\">\r\n                    {{option.name}}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Strike Price</mat-label>\r\n                    <input matInput autocomplete=\"off\" placeholder=\"\" formControlName=\"strikePrice\" type=\"number\">\r\n                    <mat-error *ngIf=\"saudaForm.controls.strikePrice.errors?.required\">strikePrice is required</mat-error>                \r\n                </mat-form-field> \r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>First Trading Date</mat-label>\r\n                    <input matInput [matDatepicker]=\"FirstTradingDate\" formControlName=\"firstTradingDate\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"FirstTradingDate\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #FirstTradingDate></mat-datepicker>\r\n                </mat-form-field>                  \r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Last Trading Date</mat-label>\r\n                    <input matInput [matDatepicker]=\"LastTradingDate\" formControlName=\"lastTradingDate\" >\r\n                    <mat-datepicker-toggle matSuffix [for]=\"LastTradingDate\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #LastTradingDate></mat-datepicker>\r\n                </mat-form-field>                  \r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div fxFlex=\"100\" class=\"mt-2 text-center space-between-btns\">\r\n        <button mat-raised-button color=\"warn\" (click)=\"close()\">Cancel</button>            \r\n        <button mat-raised-button color=\"primary\" class=\"uppercase\" [disabled]=\"!saudaForm.valid\" type=\"submit\">Save</button> \r\n    </div>\r\n</form>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { AddSaudaComponent } from './sauda-dialog/add-sauda.component';\r\nimport { AppSettings } from \"src/app/app.settings\";\r\nimport { Settings } from \"src/app/app.settings.model\";\r\nimport { MasterService } from '../master.service';\r\nimport { ConfirmationDialog } from '../../Dialog/confirmation-dialog/confirmation-dialog.component';\r\nimport { CommonUtility } from '../../../shared/common-utility';\r\n\r\n@Component({\r\n    selector: 'app-blank',\r\n    templateUrl: './sauda.component.html',\r\n    styleUrls: ['./sauda.component.scss']\r\n})\r\n\r\nexport class SaudaComponent implements OnInit {\r\n\r\n  editing = {};\r\n  rows = [];\r\n  temp = [];\r\n  selected = [];\r\n  loadingIndicator: boolean = true;\r\n  reorderable: boolean = true;\r\n  columns = [\r\n    { prop: 'Name' },\r\n    { name: 'item' },\r\n    { name: 'name' }\r\n  ];\r\n  public settings: Settings;\r\n  itemList: any;\r\n  constructor(public appSettings: AppSettings,  public dialog: MatDialog, private _masterService: MasterService) {\r\n    this.settings = this.appSettings.settings;\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getList();\r\n  }\r\n\r\n  agGridOptions: any = {\r\n    defaultColDef: {\r\n      filter: true,\r\n      flex: 1,\r\n      sortable: true,\r\n      wraptext: true,\r\n      resizable: true\r\n    }\r\n  }\r\n\r\n\r\n  columnDefs = [\r\n    {\r\n      headerName: 'Action', field: 'fileIcon', cellRenderer: this.actionCellRenderer, minWidth: 80,\r\n      maxWidth: 110, resizable: true, filter: false\r\n    },\r\n    { headerName: 'Item', field: 'itemName', filter: true, sorting: true, resizable: true },\r\n    { headerName: 'SaudaCode', field: 'saudaCode', filter: true, sorting: true, resizable: true },\r\n    { headerName: 'Maturity', field: 'maturityDate', filter: true, sorting: true, resizable: true },\r\n    { headerName: 'InsType', field: 'insName', filter: true, sorting: true, resizable: true },\r\n    { headerName: 'OptionType', field: 'optionType', filter: true, sorting: true, resizable: true },\r\n    { headerName: 'StrikePrice', field: 'strikePrice', filter: true, sorting: true, resizable: true, valueFormatter: params => CommonUtility.formatNumber(params.data.strikePrice), type: 'rightAligned' },\r\n    { headerName: 'FirstTradingDate', field: 'firstTradingDt', filter: true, sorting: true, resizable: true },\r\n    { headerName: 'LastTradingDate', field: 'lastTradingDt', filter: true, sorting: true, resizable: true }\r\n\r\n  ];\r\n\r\n  onActivate(event) {\r\n    console.log('Activate Event', event);\r\n  }\r\n\r\n  getList() {\r\n    this._masterService.getSaudaList().subscribe((results) => {\r\n      this.itemList = results;\r\n\r\n    });\r\n  }\r\n\r\n  public actionCellRenderer(params: any) {\r\n    let eGui = document.createElement(\"div\");\r\n    let editingCells = params.api.getEditingCells();\r\n    let isCurrentRowEditing = editingCells.some((cell: any) => {\r\n      return cell.rowIndex === params.node.rowIndex;\r\n    });\r\n    eGui.innerHTML = `<button class=\"material-icons action-button-edit\" data-action=\"edit\">edit </button>\r\n                      <button class=\"material-icons action-button-red\" delete data-action=\"delete\">delete</button>`;\r\n\r\n    return eGui;\r\n  }\r\n\r\n  onGridClick(params: any) {\r\n    debugger\r\n    if (params.event.target.dataset.action == \"edit\") {\r\n      this.openDialog(params.data.id);\r\n\r\n    }\r\n    if (params.event.target.dataset.action == \"delete\") {\r\n      const dialogRef = this.dialog.open(ConfirmationDialog, {\r\n        data: {\r\n          message: 'Do you really want to delete this record?',\r\n          buttonText: {\r\n            ok: 'Yes',\r\n            cancel: 'No'\r\n          }\r\n        }\r\n      });\r\n\r\n      dialogRef.afterClosed().subscribe((confirmed: boolean) => {\r\n        if (confirmed) {\r\n          this._masterService.deleteSauda(params.data.id).subscribe((res) => {\r\n            this.getList();\r\n          });\r\n        }\r\n      });\r\n\r\n\r\n    }\r\n  }\r\n\r\n  public openDialog(user) {\r\n    let dialogRef = this.dialog.open(AddSaudaComponent, {\r\n      data: { id: user }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(user => {\r\n\r\n      this.getList();\r\n      if (user) {\r\n\r\n        /* (user.id) ? this.updateUser(user) : this.addUser(user);*/\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"row\">\r\n  <div fxLayout=\"row\" class=\"mt-2 flex-end\">\r\n    <button mat-raised-button color=\"primary\" class=\"delete-slab icon-btn\" >\r\n      <mat-icon>\r\n        <span class=\"material-icons-outlined\">        \r\n          file_download\r\n        </span>\r\n      </mat-icon> \r\n      Export\r\n    </button>\r\n    <button mat-raised-button color=\"accent\" (click)=\"openDialog(null)\" class=\"icon-btn ml-15\">\r\n      <mat-icon>add</mat-icon> Add Sauda\r\n    </button>\r\n  </div>\r\n  <div class=\"col-xl-12 mt-2\">\r\n    <ag-grid-angular style=\" height: 535px;\"\r\n                      class=\"ag-theme-material\"\r\n                       [rowHeight]=\"31\"\r\n                     [rowData]=\"itemList\"\r\n                     [pagination]=\"true\"\r\n                     [columnDefs]=\"columnDefs\"\r\n                     [defaultColDef]=\"agGridOptions.defaultColDef\"\r\n                     (cellClicked)=\"onGridClick($event)\"\r\n                     headerHeight=\"34\">\r\n    </ag-grid-angular>\r\n  </div>\r\n</div>\r\n  \r\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { MasterService } from '../../master.service';\nimport { forkJoin, map } from 'rxjs';\nimport { DatePipe, formatDate } from '@angular/common';\nimport { MasterSecondService } from '../../master-second.service';\n\n@Component({\n  selector: 'app-add-sharing-setup',\n  templateUrl: './add-sharing-setup.component.html',\n  styleUrls: ['./add-sharing-setup.component.scss']\n})\nexport class AddSharingSetupComponent implements OnInit {\n\n  public itemForm: UntypedFormGroup;\n  exchangeList: any;\n  selectedId: any;\n  instrumentList: any;\n  itemList: any;\n  applyOnQtyList: any;\n  applyOnList: any;\n  salbId: any;\n  accountList: any;\n  parentData: any;\n  isEditMode: any;\n\n\n  constructor(private datePipe: DatePipe, private formBuilder: UntypedFormBuilder, public dialogRef: MatDialogRef<AddSharingSetupComponent>, @Inject(MAT_DIALOG_DATA) public data: any, private _appService: MasterService, private _masterSecondService: MasterSecondService) {\n   this.salbId = data.slabId;\n   this.parentData = data;\n  }\n\n  bindFormControls() {\n    this.itemForm = this.formBuilder.group({\n     'applyOn': ['', Validators.required],\n     'shareValue': ['', Validators.required],\n     'id':[0],\n    });\n   this.initialApiCalls();\n}\n\ninitialApiCalls() {\n  forkJoin([this._appService.getSharingApplyOnDDL(),\n  ]).pipe(map(response => {\n    this.applyOnList = response[0];\n  })).subscribe(res => {\n    \n  });\n}\n\n  ngOnInit(): void {\n    this.bindFormControls();\n    this.isEditMode = this.parentData.isEditMode;\n    if(this.parentData.isEditMode === 2 && this.parentData.editParms){\n      this.getSelectedSlabDetailsInfo(this.parentData.editParms);\n    }\n  }\n\n  getSelectedSlabDetailsInfo(editParms) {\n      this.itemForm.patchValue({\n        applyOn: editParms.applyOn,\n        shareValue: editParms.shareValue,\n      });\n  }\n\n  close(): void {\n    this.dialogRef.close();\n  }\n\n  public onSubmit(values: object) {\n    console.log(values);\n    var body = this.itemForm.value;\n    console.log(body);\n    body.slabId = this.salbId;\n    body.id = this.parentData.isEditMode;\n    body.branchId = this.parentData.branchIds;\n    body.accounts = this.parentData.accountIds.filter((val)=> val != -1);\n    \n    body.fromDate = this.datePipe.transform(this.parentData.fromDt, 'yyyy-MM-dd');\n    body.toDate = this.datePipe.transform(this.parentData.toDt, 'yyyy-MM-dd');\n    body.exchanges = this.parentData.exchangeIds.filter((val)=> val != -1);\n    body.higherSideOnly= false;\n\n    if (this.itemForm.valid) {\n      //const body = JSON.stringify(addFormData);\n      if(this.parentData.isEditMode === 2){\n        body.id = this.parentData.editParms.id;\n        this._masterSecondService.updateSingleSharing(body).subscribe(result => {\n          this.dialogRef.close();\n        });\n      } else {\n        this._masterSecondService.saveSharing(body).subscribe(result => {\n          console.log(\"result\", result);\n          this.dialogRef.close();\n        });\n      }\n    }\n  }\n\n}\n","<h2 class=\"heading\" *ngIf=\"isEditMode == 0; else modifyEditHeading\">\n    Add Sub Brokerage\n  </h2>\n  <ng-template #modifyEditHeading>\n    <h2 class=\"heading\" *ngIf=\"isEditMode == 1\">Modify Sub Brokerage</h2>\n    <h2 class=\"heading\" *ngIf=\"isEditMode == 2\">Edit Sub Brokerage</h2>\n  </ng-template>\n<a (click)=\"close()\" class=\"close-btn\">\n  <span class=\"material-symbols-outlined\">\n    <mat-icon>close</mat-icon>\n  </span>\n</a>\n<form [formGroup]=\"itemForm\" (ngSubmit)=\"onSubmit(itemForm.value)\" fxLayout=\"row wrap\" class=\"user-form\">\n    <div class=\"white-block pb-5\">\n        <h3><span>Sub Brokerage</span></h3>\n        <div class=\"tab-party-details-parent\">\n              <div fxFlex=\"100\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                  <mat-label>ApplyOn</mat-label>\n                \n                  <mat-select placeholder=\"Select Item\" formControlName=\"applyOn\">\n                    <!--<input (keyup)=\"onKey($event.target.value)\">-->\n                    <mat-option *ngFor=\"let item of applyOnList\" [value]=\"item.id\">\n                      {{item.name}}\n                    </mat-option>\n                  </mat-select>\n                </mat-form-field>\n              </div>\n              <div fxFlex=\"100\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>share Value</mat-label>\n                    <input matInput autocomplete=\"off\" placeholder=\"Share Value\" formControlName=\"shareValue\" type=\"number\">\n                    <mat-error *ngIf=\"itemForm.controls.shareValue.errors?.required\">Share Value is required</mat-error>                \n                </mat-form-field> \n            </div>\n        </div>\n    </div>\n    <div fxFlex=\"100\" class=\"mt-2 text-center space-between-btns\">\n        <button mat-raised-button color=\"warn\" type=\"button\" (click)=\"close()\">Cancel</button>            \n        <button mat-raised-button color=\"primary\" class=\"uppercase\" [disabled]=\"!itemForm.valid\" type=\"submit\">Save</button> \n    </div>\n</form>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { MasterService } from '../../master.service';\nimport { forkJoin, map } from 'rxjs';\nimport { DatePipe, formatDate } from '@angular/common';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MasterSecondService } from '../../master-second.service';\n\n@Component({\n  selector: 'app-lock-sharing-setup',\n  templateUrl: './lock-sharing-setup.component.html',\n  styleUrls: ['./lock-sharing-setup.component.scss']\n})\nexport class LockSharingSetupComponent implements OnInit {\n  public itemForm: UntypedFormGroup;\n  parentData: any;\n\n\n  constructor( public snackBar: MatSnackBar, private datePipe: DatePipe, private formBuilder: UntypedFormBuilder, public dialogRef: MatDialogRef<LockSharingSetupComponent>, @Inject(MAT_DIALOG_DATA) public data: any, private _masterSecondService: MasterSecondService) {\n   this.parentData = data;\n  }\n\n  bindFormControls() {\n    this.itemForm = this.formBuilder.group({\n     'lockBrokDate': ['', Validators.required],\n    });\n}\n\n  ngOnInit(): void {\n    this.bindFormControls();\n  }\n\n  close(): void {\n    this.dialogRef.close();\n  }\n\n  public onSubmit(values: object) {\n    console.log(values);\n    debugger;\n    var body = this.itemForm.value;\n    console.log(body);\n    body.lockBrokDate = this.datePipe.transform(body.lockBrokDate, 'yyyy-MM-dd');\n    body.id = this.parentData.isEditMode;\n    body.accounts = this.parentData.accountIds.filter((val)=> val != -1);\n    body.branchId = this.parentData.branchIds;\n    body.fromDate = this.datePipe.transform(this.parentData.fromDt, 'yyyy-MM-dd');\n    body.toDate = this.datePipe.transform(this.parentData.toDt, 'yyyy-MM-dd');\n    body.exchanges = this.parentData.exchangeIds.filter((val)=> val != -1);\n    body.higherSideOnly= false;\n\n    if (this.itemForm.valid) {\n      //const body = JSON.stringify(addFormData);\n      this._masterSecondService.lockSharing(body).subscribe(result => {\n        console.log(\"result\", result);\n        this.showToaster(result.message);\n        this.dialogRef.close();\n      });\n    }\n  }\n\n  showToaster(message){\n    this.snackBar.open(message, \"Success\", {\n      duration: 3000,\n    });\n  }\n\n}\n","<h2 class=\"heading\">Add Item</h2>\n<a (click)=\"close()\" class=\"close-btn\">\n  <span class=\"material-symbols-outlined\">\n    <mat-icon>close</mat-icon>\n  </span>\n</a>\n<form [formGroup]=\"itemForm\" (ngSubmit)=\"onSubmit(itemForm.value)\" fxLayout=\"row wrap\" class=\"user-form\">\n    <div class=\"white-block pb-5\">\n        <h3><span>Loak Brokerage</span></h3>\n        <div class=\"tab-party-details-parent\">\n            <div class=\"dropdown-wrapper\">\n                <mat-form-field appearance=\"outline\">\n                  <mat-label>Lock Brokerage</mat-label>\n                  <input matInput [matDatepicker]=\"lockPicker\" formControlName=\"lockBrokDate\">\n                  <mat-datepicker-toggle matSuffix [for]=\"lockPicker\"></mat-datepicker-toggle>\n                  <mat-datepicker #lockPicker></mat-datepicker>\n                </mat-form-field>\n              </div>\n        </div>\n    </div>\n    <div fxFlex=\"100\" class=\"mt-2 text-center space-between-btns\">\n        <button mat-raised-button color=\"warn\" type=\"button\" (click)=\"close()\">Cancel</button>            \n        <button mat-raised-button color=\"primary\" class=\"uppercase\" [disabled]=\"!itemForm.valid\" type=\"submit\">Save</button> \n    </div>\n</form>\n","import { Component, OnInit, Inject, ViewChild } from '@angular/core';\r\nimport { AppSettings } from \"src/app/app.settings\";\r\nimport { Settings } from \"src/app/app.settings.model\";\r\nimport { MasterService } from \"../master.service\";\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSelect } from '@angular/material/select';\r\nimport { MatOption } from '@angular/material/core';\r\nimport { AppService } from 'src/app/service/app.service';\r\nimport { ConfirmationDialog } from '../../Dialog/confirmation-dialog/confirmation-dialog.component';\r\nimport { CommonUtility } from 'src/app/shared/common-utility';\r\nimport { forkJoin, map } from 'rxjs';\r\nimport { MasterSecondService } from '../master-second.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { DatePipe } from '@angular/common';\r\nimport { AddSharingSetupComponent } from './add-sharing-setup/add-sharing-setup.component';\r\nimport { LockSharingSetupComponent } from './lock-sharing-setup/lock-sharing-setup.component';\r\n\r\n@Component({\r\n  selector: 'app-sharing-setup',\r\n  templateUrl: './sharing-setup.component.html',\r\n  styleUrls: ['./sharing-setup.component.scss']\r\n})\r\nexport class SharingSetupComponent implements OnInit {\r\n  @ViewChild('select') select: MatSelect;\r\n  @ViewChild('selectAccount') selectAccount: MatSelect;\r\n  @ViewChild('selectExchange') selectExchange: MatSelect;\r\n  public settings: Settings;\r\n  slabId: number;\r\n  slabList: any[];\r\n  fromDt: any;\r\n  toDt: any;\r\n  accountList: any[];\r\n  branchList: any[];\r\n  instrumentType: any;\r\n  itemGroupIds: any;\r\n  filteredItemGroup: any;\r\n  itemGroupIdList: any;\r\n  exchangeList: any;\r\n  exchangeIds: any;\r\n  filteredExchangeList: any;\r\n\r\n  searchedData: any;\r\n  branchIds: Array<string>;\r\n  accountIds: any[];\r\n  filteredProviders: any[];\r\n  filteredAccountList: any[];\r\n  brokeragesetupList: any = [];\r\n  branchAllSellected: boolean = false;\r\n  companydetails: any;\r\n  constructor(private datePipe: DatePipe, public snackBar: MatSnackBar, public appSettings: AppSettings, private _appService: AppService, public dialog: MatDialog, private _masterService: MasterService, private _masterSecondService: MasterSecondService) {\r\n    this.settings = this.appSettings.settings;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.fetchDropdownData();\r\n    this.getBrokerageSetupList();\r\n  }\r\n\r\n  agGridOptions: any = {\r\n    defaultColDef: {\r\n      filter: true,\r\n       flex:1,\r\n      sortable: true,\r\n      wraptext: true,\r\n      resizable: true,\r\n      minWidth: 100,\r\n    \r\n    },\r\n    suppressRowHoverHighlight: true,\r\n   \r\n    //suppressSizeToFit: true,\r\n    \r\n  }\r\n  onGridReady(event) { }\r\n\r\n  columnDefs = [\r\n    {\r\n      headerName: 'Action', field: 'fileIcon', cellRenderer: this.actionCellRenderer, resizable: true, filter: false\r\n    },\r\n    { headerName: 'ApplyOn',  field: 'applyOnName', filter: true, sorting: true, resizable: true },\r\n    // { headerName: 'Apply OnQty',  field: 'applyOnQtyName', filter: true, sorting: true, resizable: true },\r\n    { headerName: 'Exchange', minWidth: 120, maxWidth: 120, field: 'exchange', filter: true, sorting: true, resizable: true },\r\n    { headerName: 'Share Value',   field: 'shareValue', filter: true, sorting: true, resizable: true },\r\n/*    { headerName: 'IntradaySingleSideOnly', field: 'intradaySingleSideOnly', filter: true, sorting: true, resizable: true },*/\r\n    { headerName: 'FromDT', field: 'fromDT',   filter: true, sorting: true, resizable: true },\r\n    { headerName: 'ToDT', field: 'toDT',  filter: true, sorting: true, resizable: true },\r\n    \r\n  ];\r\n\r\n  getBrokerageSetupList() {\r\n    if(this.areRequiredValuesSelected()){\r\n      var accountIds = this.accountIds.filter((val)=> val != -1);\r\n      var req = {\r\n        \"exchange\": this.exchangeIds.filter((val)=> val != -1),\r\n        \"branchId\": this.branchIds,\r\n        \"accounts\": accountIds,\r\n        \"fromDate\": this.datePipe.transform(this.fromDt, 'yyyy-MM-dd'),\r\n        \"toDate\": this.datePipe.transform(this.toDt, 'yyyy-MM-dd'),\r\n      };\r\n      this._masterSecondService.getSharingSetupList(req).subscribe((results) => {\r\n        this.searchedData = req;\r\n       this.brokeragesetupList = results.data;       \r\n      });\r\n    }\r\n  }\r\n\r\n  async getBrokerageAddValidation(): Promise<string> {\r\n    const accountIds = this.accountIds.filter((val) => val != \"-1\");\r\n    const req = {\r\n      branchId : this.branchIds,\r\n      itemGroupId: this.itemGroupIds,\r\n      accounts: accountIds,\r\n      exchange: this.exchangeIds.filter((val) => val != \"-1\"),\r\n      fromDate: this.datePipe.transform(this.fromDt, 'yyyy-MM-dd'),\r\n      toDate: this.datePipe.transform(this.toDt, 'yyyy-MM-dd'),\r\n      instrumentType: this.instrumentType,\r\n    };\r\n  \r\n    try {\r\n      const results = await this._masterSecondService.getSharingAddValidation(req).toPromise();\r\n  \r\n      if (results.message) {\r\n        this.showToaster(results.message);\r\n        this.searchedData = req;\r\n        this.brokeragesetupList = results.data;\r\n        return results.message;\r\n      } else {\r\n        return results.message;\r\n      }\r\n    } catch (error) {\r\n      // Handle error here\r\n      console.error('Error during validation:', error);\r\n      return '';\r\n    }\r\n  }\r\n\r\n  showToaster(message, isError = false) {\r\n    const panelClass = isError ? ['red-text'] : undefined;\r\n    const label = isError ? \"Error\" : \"Success\";\r\n    const time = isError? 6000 : 3000;\r\n  \r\n    this.snackBar.open(message, label, {\r\n      duration: time,\r\n      panelClass: panelClass,\r\n    });\r\n  }\r\n\r\n  areRequiredValuesSelected(): boolean {\r\n    return this.branchIds && this.accountIds && this.exchangeIds && this.fromDt && this.toDt;\r\n  }\r\n\r\n  fetchDropdownData() {\r\n    forkJoin([\r\n      this._masterService.getBranchDDLList(), \r\n      this._masterService.getAccount(),\r\n      this._masterService.getExchangeName(),\r\n      this._appService.getCompany(),\r\n    ]).pipe(map(response => {\r\n      this.branchList = response[0];\r\n      this.filteredProviders = response[0];\r\n      // this.accountList = response[2];\r\n      // this.filteredAccountList = response[2];\r\n      this.exchangeList = response[2];\r\n      this.filteredExchangeList = response[2];\r\n      this.companydetails = response[3];\r\n      this.fromDt = new Date(this.companydetails[0].finBeginDt);\r\n      this.toDt = new Date(this.companydetails[0].finEndDt);\r\n    })).subscribe(res => {\r\n      \r\n    });\r\n\r\n    \r\n  }\r\n\r\n  public actionCellRenderer(params: any) {\r\n    let eGui = document.createElement(\"div\");\r\n    let editingCells = params.api.getEditingCells();\r\n    let isCurrentRowEditing = editingCells.some((cell: any) => {\r\n      return cell.rowIndex === params.node.rowIndex;\r\n    });\r\n    eGui.innerHTML = `<button class=\"material-icons action-button-edit\" data-action=\"edit\">edit </button>\r\n                      <button class=\"material-icons action-button-red\" delete data-action=\"delete\">delete</button>`;\r\n\r\n    return eGui;\r\n}\r\n\r\n  onInputChange(event: any) {\r\n    const searchInput = event.target.value.toLowerCase();\r\n\r\n    this.filteredProviders = this.branchList.filter((data) => {\r\n      const prov = data.name.toLowerCase();\r\n      return prov.includes(searchInput);\r\n    });\r\n  }\r\n\r\n  onInputAccountListChange(event: any) {\r\n    const searchInput = event.target.value.toLowerCase();\r\n\r\n    this.filteredAccountList = this.accountList.filter((data) => {\r\n      const prov = data.name.toLowerCase();\r\n      return prov.includes(searchInput);\r\n    });\r\n  }\r\n\r\n  onInputExchangeChange(event: any) {\r\n    const searchInput = event.target.value.toLowerCase();\r\n\r\n    this.filteredExchangeList = this.exchangeList.filter((data) => {\r\n      const prov = data.name.toLowerCase();\r\n      return prov.includes(searchInput);\r\n    });\r\n  }\r\n\r\n  branchAllSelection()\r\n  {\r\n    this.branchAllSellected = true;\r\n    var isAllChecked = this.select.options.first.selected;\r\n    this.select.options.forEach(\r\n      (item: MatOption, index) =>\r\n      {\r\n      \r\n        if (isAllChecked) { item.select(); }\r\n          else { item.deselect() }\r\n          if(index === this.select.options.length -1){\r\n            this.onBranchChange([], true);\r\n          }\r\n      }\r\n     \r\n    );\r\n   \r\n  }\r\n\r\n\r\n  accountAllSelection()\r\n  {\r\n    var isAllChecked = this.selectAccount.options.first.selected;\r\n    this.selectAccount.options.forEach(\r\n      (item: MatOption) => {\r\n\r\n        if (isAllChecked) { item.select(); }\r\n        else { item.deselect() }\r\n      }\r\n\r\n    );\r\n\r\n  }\r\n\r\n  exchangeAllSelection(){\r\n    var isAllChecked = this.selectExchange.options.first.selected;\r\n    this.selectExchange.options.forEach(\r\n      (item: MatOption) => {\r\n\r\n        if (isAllChecked) { item.select(); }\r\n        else { item.deselect() }\r\n      }\r\n\r\n    );\r\n  }\r\n\r\n\r\n  onKey(value) {\r\n    this.branchList = this.search(value);\r\n}\r\n\r\n\r\n  search(value: string) {\r\n  let filter = value.toLowerCase();\r\n  return this.branchList.filter(option => option.toLowerCase().startsWith(filter));\r\n}\r\n\r\n  onBranchChange(event: any, isLastIndex?: boolean) {\r\n    if(this.branchAllSellected && !isLastIndex){\r\n      return;\r\n    }\r\n    if(this.branchIds.length < 2 && this.branchIds[0] == '-1'){\r\n      return;\r\n    }\r\n    //event.source.options._results[1]._selected = true;\r\n    //event.source.options._results[1]._active = true;\r\n    if (this.branchIds) {\r\n      this._masterService.getFilterBranchAccounts(this.branchIds).subscribe(\r\n        response => {\r\n          this.accountList = response;\r\n          this.filteredAccountList = this.accountList;\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  addBrokerage(event: any) { }\r\n\r\n  public async openSlabDetailsDialog(event) {\r\n    const isValid = await this.getBrokerageAddValidation();\r\n    if (isValid == '' && event === 'add') {\r\n      const dialogRef = this.dialog.open(AddSharingSetupComponent, {\r\n        data: {\r\n          selectedSlabId: null,\r\n          fromDt: this.fromDt,\r\n          toDt: this.toDt,\r\n          branchIds: this.branchIds,\r\n          accountIds: this.accountIds,\r\n          exchangeIds: this.exchangeIds,\r\n          isEditMode: 0\r\n        },\r\n      });\r\n      dialogRef.afterClosed().subscribe((user) => {\r\n        this.getBrokerageSetupList();\r\n      });\r\n    } else if(isValid !== '' && event === 'lock'){\r\n      const dialogRef = this.dialog.open(LockSharingSetupComponent, {\r\n        data: {\r\n          selectedSlabId: null,\r\n          fromDt: this.fromDt,\r\n          toDt: this.toDt,\r\n          branchIds: this.branchIds,\r\n          accountIds: this.accountIds,\r\n          exchangeIds: this.exchangeIds,\r\n          isEditMode: 0\r\n        },\r\n      });\r\n      dialogRef.afterClosed().subscribe((user) => {\r\n        this.getBrokerageSetupList();\r\n      });\r\n    }\r\n  }\r\n\r\n  public openModifySetupDialog() {\r\n    const dialogRef = this.dialog.open(AddSharingSetupComponent, {\r\n      data: {\r\n        selectedSlabId: null,\r\n        fromDt: this.fromDt,\r\n        toDt: this.toDt,\r\n        branchIds: this.branchIds,\r\n        accountIds: this.accountIds,\r\n        exchangeIds: this.exchangeIds,\r\n        isEditMode: 1\r\n      },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((user) => {\r\n      this.getBrokerageSetupList();\r\n    });\r\n  }\r\n\r\n  onFromDateChange() {\r\n    console.log(\"fromDt changed:\", this.fromDt);\r\n  }\r\n\r\n  openEditBrokerageDetails(params) {\r\n    const dialogRef = this.dialog.open(AddSharingSetupComponent, {\r\n      data: {\r\n        selectedSlabId: null,\r\n        fromDt: this.searchedData.fromDate,\r\n        toDt: this.searchedData.toDate,\r\n        branchIds: this.searchedData.branchId,\r\n        accountIds: this.searchedData.accounts,\r\n        exchangeIds: this.searchedData.exchange,\r\n        isEditMode: 2,\r\n        editParms: params\r\n      },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((user) => {\r\n      this.getBrokerageSetupList();\r\n    });\r\n  }\r\n\r\nonGridClick(params: any) {\r\n  if (params.event.target.dataset.action == \"edit\")\r\n  {\r\n    this.openEditBrokerageDetails(params.data);\r\n\r\n  }\r\n  if (params.event.target.dataset.action == \"delete\")\r\n  {\r\n    const dialogRef = this.dialog.open(ConfirmationDialog, {\r\n      data: {\r\n        message: 'Do you really want to delete this record?',\r\n        buttonText: {\r\n          ok: 'Yes',\r\n          cancel: 'No'\r\n        }\r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((confirmed: boolean) => {\r\n      if (confirmed) {\r\n        this._masterService.deleteSubBrokerageSetup(params.data.id).subscribe((res) => {\r\n          if(res.isSuccess){\r\n            this.showToaster(res.message);\r\n            this.getBrokerageSetupList();\r\n          } else {\r\n            this.showToaster(res.message, true);\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n\r\n  }\r\n}\r\n\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"mt-2\">\r\n      <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"20\">\r\n        <div class=\"dropdown-container\">\r\n          <div class=\"dropdown-wrapper\">\r\n            <mat-form-field class=\"select-slab-mat\" appearance=\"outline\">\r\n              <mat-label>Select Branch *</mat-label>\r\n              <mat-select #select  [(ngModel)]=\"branchIds\" placeholder=\"Select Branch\" (selectionChange)=\"onBranchChange($event)\" panelClass=\"custom-select-panel\">\r\n                <input class=\"milti-search-box\" #multiUserSearch type=\"text\" autocomplete=\"off\" matInput placeholder=\"Search Branch\" (input)=\"onInputChange($event)\"/>\r\n                <mat-option *ngFor=\"let option of filteredProviders\" [value]=\"option.id\">\r\n                  {{ option.name }}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"20\">\r\n        <div class=\"dropdown-container\">\r\n          <div class=\"dropdown-wrapper\">\r\n            <mat-form-field class=\"select-slab-mat\" appearance=\"outline\">\r\n              <mat-label>Select Account *</mat-label>          \r\n              <mat-select #selectAccount [(ngModel)]=\"accountIds\" multiple placeholder=\"Select Account\" panelClass=\"custom-select-panel\">\r\n                <input class=\"milti-search-box\" #multiUserSearch type=\"text\" autocomplete=\"off\" matInput placeholder=\"Search Account\" (input)=\"onInputAccountListChange($event)\"/>\r\n                <mat-option value=-1 (click)=\"accountAllSelection()\">Select All</mat-option>\r\n                <mat-option *ngFor=\"let option of filteredAccountList\" [value]=\"option.id\">\r\n                  {{ option.name }}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"20\">\r\n        <div class=\"dropdown-container\">\r\n          <div class=\"dropdown-wrapper\">\r\n            <mat-form-field class=\"select-slab-mat\" appearance=\"outline\">\r\n              <mat-label>Select Exchange *</mat-label>          \r\n              <mat-select #selectExchange [(ngModel)]=\"exchangeIds\" multiple placeholder=\"Select Exchange\" panelClass=\"custom-select-panel\">\r\n                <input class=\"milti-search-box\" #multiUserSearch type=\"text\" autocomplete=\"off\" matInput placeholder=\"Search Exchange\" (input)=\"onInputExchangeChange($event)\"/>\r\n                <mat-option value=-1 (click)=\"exchangeAllSelection()\">Select All</mat-option>\r\n                <mat-option *ngFor=\"let option of filteredExchangeList\" [value]=\"option.id\">\r\n                  {{ option.name }}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div fxFlex=\"100\" fxFlex.gt-sm=\"15\" fxFlex.sm=\"15\">\r\n        <div class=\"dropdown-container\">\r\n          <div class=\"dropdown-wrapper\">\r\n            <mat-form-field appearance=\"outline\" class=\"calendar\">\r\n              <mat-label>From</mat-label>\r\n              <input matInput [matDatepicker]=\"picker1\" [(ngModel)]=\"fromDt\" (ngModelChange)=\"onFromDateChange()\">\r\n              <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\r\n              <mat-datepicker #picker1></mat-datepicker>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div fxFlex=\"100\" fxFlex.gt-sm=\"15\" fxFlex.sm=\"15\">\r\n        <div class=\"dropdown-container\">\r\n          <div class=\"dropdown-wrapper\">\r\n            <mat-form-field appearance=\"outline\" class=\"calendar\">\r\n                <mat-label>To</mat-label>\r\n              <input matInput [matDatepicker]=\"picker2\" placeholder=\"To\" [(ngModel)]=\"toDt\">\r\n              <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\r\n              <mat-datepicker #picker2></mat-datepicker>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div fxFlex=\"100\" fxFlex.gt-sm=\"7\" fxFlex.sm=\"7\">\r\n        <button mat-raised-button color=\"primary\" (click)=\"getBrokerageSetupList()\" [disabled]=\"!areRequiredValuesSelected()\" class=\"search-icon-btn\">\r\n          <mat-icon>search</mat-icon>\r\n        </button>\r\n      </div>\r\n      <div class=\"btn-group\">\r\n        <button mat-raised-button matTooltip=\"Lock Sharing\" matTooltipPosition=\"above\" color=\"accent\" [disabled]=\"!areRequiredValuesSelected()\" (click)=\"openSlabDetailsDialog('lock')\" class=\"icon-btn\">\r\n          <mat-icon class=\"lock-icon\">lock</mat-icon>\r\n        </button>\r\n        <button mat-raised-button matTooltip=\"Modify Sahring\" matTooltipPosition=\"above\" color=\"accent\" [disabled]=\"!areRequiredValuesSelected()\" (click)=\"openModifySetupDialog()\" class=\"icon-btn ml-15\">\r\n          <mat-icon class=\"edit-icon\">exposure</mat-icon>\r\n        </button>\r\n        <button mat-raised-button color=\"accent\" matTooltip=\"Add Sharing\" matTooltipPosition=\"above\" [disabled]=\"!areRequiredValuesSelected()\" (click)=\"openSlabDetailsDialog('add')\" class=\"icon-btn\">\r\n          <mat-icon>add_to_queue</mat-icon>\r\n        </button>\r\n      </div>\r\n    </div>\r\n      <div class=\"col-xl-12 mt-2\">\r\n        <ag-grid-angular style=\" height: 535px;\"\r\n                         class=\"ag-theme-material\"\r\n                         [rowData]=\"brokeragesetupList\"\r\n                         [pagination]=\"true\"\r\n                         [rowHeight]=\"31\"\r\n                         [columnDefs]=\"columnDefs\"\r\n                         [defaultColDef]=\"agGridOptions.defaultColDef\"\r\n                         (cellClicked)=\"onGridClick($event)\"\r\n                         (gridReady)=\"onGridReady($event)\"\r\n                          headerHeight=\"34\">\r\n        </ag-grid-angular>\r\n      </div>\r\n    </div>  \r\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { MasterService } from '../../master.service';\nimport { forkJoin, map } from 'rxjs';\nimport { DatePipe, formatDate } from '@angular/common';\n\n@Component({\n  selector: 'app-sub-add-setup-details',\n  templateUrl: './sub-add-setup-details.component.html',\n  styleUrls: ['./sub-add-setup-details.component.scss']\n})\nexport class SubAddSetupDetailsComponent implements OnInit {\n\n  public itemForm: UntypedFormGroup;\n  exchangeList: any;\n  selectedId: any;\n  instrumentList: any;\n  itemList: any;\n  applyOnQtyList: any;\n  applyOnList: any;\n  salbId: any;\n  accountList: any;\n  parentData: any;\n  isEditMode: any;\n\n\n  constructor(private datePipe: DatePipe, private formBuilder: UntypedFormBuilder, public dialogRef: MatDialogRef<SubAddSetupDetailsComponent>, @Inject(MAT_DIALOG_DATA) public data: any, private _appService: MasterService) {\n   this.salbId = data.slabId;\n   this.parentData = data;\n  }\n\n  bindFormControls() {\n    this.itemForm = this.formBuilder.group({\n     'applyOn': ['', Validators.required],\n     'applyOnQty': ['', Validators.required],\n     'deliveryBrokRate': ['', Validators.required],\n     'intradayBrokRate': ['', Validators.required],\n     'intradaySingleSideonly': [false],\n     'id':[0],\n    });\n   this.initialApiCalls();\n}\n\ninitialApiCalls() {\n  forkJoin([this._appService.getExchangeName(), this._appService.getInstrumentList(), this._appService.getItemListDrp(),\n    this._appService.getApplyOnQtyDDL(),\n    this._appService.getApplyOnDDL(),\n    this._appService.getAccount(),\n  ]).pipe(map(response => {\n    this.exchangeList = response[0];\n    this.instrumentList = response[1];\n    this.itemList = response[2]\n    this.applyOnQtyList = response[3]\n    this.applyOnList = response[4];\n    this.accountList = response[5];\n  })).subscribe(res => {\n    \n  });\n}\n\n  ngOnInit(): void {\n    this.bindFormControls();\n    this.isEditMode = this.parentData.isEditMode;\n    if(this.parentData.isEditMode === 2 && this.parentData.editParms){\n      this.getSelectedSlabDetailsInfo(this.parentData.editParms);\n    }\n  }\n\n  getSelectedSlabDetailsInfo(editParms) {\n      this.itemForm.patchValue({\n        applyOn: editParms.applyOn,\n        applyOnQty: editParms.applyOnQty,\n        deliveryBrokRate: editParms.deliveryBrokRate,\n        intradayBrokRate: editParms.intradayBrokRate,\n        intradaySingleSideonly: editParms.intradaySingleSideonly\n      });\n  }\n\n  close(): void {\n    this.dialogRef.close();\n  }\n\n  public onSubmit(values: object) {\n    console.log(values);\n    var body = this.itemForm.value;\n    console.log(body);\n    body.slabId = this.salbId;\n    body.id = this.parentData.isEditMode;\n    body.branchId = this.parentData.branchIds;\n    body.accounts = this.parentData.accountIds.filter((val)=> val != -1);;\n    \n    body.fromDate = this.datePipe.transform(this.parentData.fromDt, 'yyyy-MM-dd');\n    body.toDate = this.datePipe.transform(this.parentData.toDt, 'yyyy-MM-dd');\n    body.instrumentType = this.parentData.instrumentType;\n    body.itemGroupId = this.parentData.itemGroupIds;\n    body.higherSideOnly= false;\n\n    if (this.itemForm.valid) {\n      //const body = JSON.stringify(addFormData);\n      if(this.parentData.isEditMode === 2){\n        body.id = this.parentData.editParms.id;\n        this._appService.updateSingleSubBrokerage(body).subscribe(result => {\n          this.dialogRef.close();\n        });\n      } else {\n        this._appService.saveSubBrokerageSetup(body).subscribe(result => {\n          console.log(\"result\", result);\n          this.dialogRef.close();\n        });\n      }\n    }\n  }\n\n}\n","<h2 class=\"heading\" *ngIf=\"isEditMode == 0; else modifyEditHeading\">\n    Add Sub Brokerage\n  </h2>\n  <ng-template #modifyEditHeading>\n    <h2 class=\"heading\" *ngIf=\"isEditMode == 1\">Modify Sub Brokerage</h2>\n    <h2 class=\"heading\" *ngIf=\"isEditMode == 2\">Edit Sub Brokerage</h2>\n  </ng-template>\n<a (click)=\"close()\" class=\"close-btn\">\n  <span class=\"material-symbols-outlined\">\n    <mat-icon>close</mat-icon>\n  </span>\n</a>\n<form [formGroup]=\"itemForm\" (ngSubmit)=\"onSubmit(itemForm.value)\" fxLayout=\"row wrap\" class=\"user-form\">\n    <div class=\"white-block pb-5\">\n        <h3><span>Sub Brokerage</span></h3>\n        <div class=\"tab-party-details-parent\">\n              <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                  <mat-label>ApplyOn</mat-label>\n                \n                  <mat-select placeholder=\"Select Item\" formControlName=\"applyOn\">\n                    <!--<input (keyup)=\"onKey($event.target.value)\">-->\n                    <mat-option *ngFor=\"let item of applyOnList\" [value]=\"item.id\">\n                      {{item.name}}\n                    </mat-option>\n                  </mat-select>\n                </mat-form-field>\n              </div>\n              <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                  <mat-label>ApplyOnQTY</mat-label>\n                \n                  <mat-select placeholder=\"Select Item\" formControlName=\"applyOnQty\">\n                    <!--<input (keyup)=\"onKey($event.target.value)\">-->\n                    <mat-option *ngFor=\"let item of applyOnQtyList\" [value]=\"item.id\">\n                      {{item.name}}\n                    </mat-option>\n                  </mat-select>\n                </mat-form-field>\n              </div>\n              <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>DeliveryBrokeRate</mat-label>\n                    <input matInput autocomplete=\"off\" placeholder=\"item Code\" formControlName=\"deliveryBrokRate\" type=\"number\">\n                    <mat-error *ngIf=\"itemForm.controls.deliveryBrokRate.errors?.required\">DeliveryBrokeRate is required</mat-error>                \n                </mat-form-field> \n            </div>\n              <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>IntraDayBrokeRate</mat-label>\n                    <input matInput autocomplete=\"off\" placeholder=\"item Code\" formControlName=\"intradayBrokRate\" type=\"number\">\n                    <mat-error *ngIf=\"itemForm.controls.intradayBrokRate.errors?.required\">IntraDayBrokeRate is required</mat-error>                \n                </mat-form-field> \n            </div>\n            \n            <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\" class=\"pt-5 pb-5 pl-10\">\n                <mat-checkbox formControlName=\"intradaySingleSideonly\">Intradaysingleside</mat-checkbox>\n            </div>\n        </div>\n    </div>\n    <div fxFlex=\"100\" class=\"mt-2 text-center space-between-btns\">\n        <button mat-raised-button color=\"warn\" type=\"button\" (click)=\"close()\">Cancel</button>            \n        <button mat-raised-button color=\"primary\" class=\"uppercase\" [disabled]=\"!itemForm.valid\" type=\"submit\">Save</button> \n    </div>\n</form>\n","import { Component, OnInit, Inject, ViewChild } from '@angular/core';\r\nimport { AppSettings } from \"src/app/app.settings\";\r\nimport { Settings } from \"src/app/app.settings.model\";\r\nimport { MasterService } from \"../master.service\";\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSelect } from '@angular/material/select';\r\nimport { MatOption } from '@angular/material/core';\r\nimport { AppService } from 'src/app/service/app.service';\r\nimport { ConfirmationDialog } from '../../Dialog/confirmation-dialog/confirmation-dialog.component';\r\nimport { CommonUtility } from 'src/app/shared/common-utility';\r\nimport { forkJoin, map } from 'rxjs';\r\nimport { MasterSecondService } from '../master-second.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { DatePipe } from '@angular/common';\r\nimport { SubAddSetupDetailsComponent } from './sub-add-setup-details/sub-add-setup-details.component';\r\nimport { SubLockBrokerageComponent } from './sub-lock-brokerage/sub-lock-brokerage.component';\r\nimport { ViewItemGroupComponent } from '../brokerage-setup/view-item-group/view-item-group.component';\r\n\r\n@Component({\r\n  selector: 'app-sub-brokerage-setup',\r\n  templateUrl: './sub-brokerage-setup.component.html',\r\n  styleUrls: ['./sub-brokerage-setup.component.scss']\r\n})\r\nexport class SubBrokerageSetupComponent implements OnInit {\r\n  @ViewChild('select') select: MatSelect;\r\n  @ViewChild('selectAccount') selectAccount: MatSelect;\r\n  public settings: Settings;\r\n  slabId: number;\r\n  slabList: any[];\r\n  fromDt: any;\r\n  toDt: any;\r\n  accountList: any[];\r\n  branchList: any[];\r\n  instrumentList: any[];\r\n  instrumentType: any;\r\n  itemGroupIds: any;\r\n  filteredItemGroup: any;\r\n  itemGroupIdList: any;\r\n\r\n  searchedData: any;\r\n  branchIds: Array<string>;\r\n  accountIds: any[];\r\n  filteredProviders: any[];\r\n  filteredAccountList: any[];\r\n  brokeragesetupList: any = [];\r\n  branchAllSellected: boolean = false;\r\n  companydetails: any;\r\n\r\n  constructor(private datePipe: DatePipe, public snackBar: MatSnackBar, public appSettings: AppSettings, private _appService: AppService, public dialog: MatDialog, private _masterService: MasterService, private _masterSecondService: MasterSecondService) {\r\n    this.settings = this.appSettings.settings;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.fetchDropdownData();\r\n    this.getBrokerageSetupList();\r\n  }\r\n\r\n  agGridOptions: any = {\r\n    defaultColDef: {\r\n      filter: true,\r\n       flex:1,\r\n      sortable: true,\r\n      wraptext: true,\r\n      resizable: true,\r\n      minWidth: 100,\r\n    \r\n    },\r\n    suppressRowHoverHighlight: true,\r\n   \r\n    //suppressSizeToFit: true,\r\n    \r\n  }\r\n  onGridReady(event) { }\r\n\r\n  columnDefs = [\r\n    {\r\n      headerName: 'Action', field: 'fileIcon', cellRenderer: this.actionCellRenderer, resizable: true, filter: false\r\n    },\r\n    { headerName: 'ApplyOn',  field: 'applyOnName', filter: true, sorting: true, resizable: true },\r\n    { headerName: 'Apply OnQty',  field: 'applyOnQtyName', filter: true, sorting: true, resizable: true },\r\n    { field: 'Intraday BrokRate',   headerName: 'IntradayBrokRate', filter: true, sorting: true, resizable: true, valueFormatter: params => CommonUtility.formatNumber(params.data.intradayBrokRate) },\r\n    { headerName: 'Delivery BrokRate', field: 'deliveryBrokRate', filter: true, sorting: true, resizable: true, valueFormatter: params => CommonUtility.formatNumber(params.data.deliveryBrokRate)},    \r\n    /*{ headerName: 'HigherSide Only', minWidth: 120, maxWidth: 120, field: 'higherSideOnly', filter: true, sorting: true, resizable: true },*/\r\n    { headerName: 'Instrument',   field: 'instrumentType', filter: true, sorting: true, resizable: true },\r\n/*    { headerName: 'IntradaySingleSideOnly', field: 'intradaySingleSideOnly', filter: true, sorting: true, resizable: true },*/\r\n    { headerName: 'FromDT', field: 'fromDT',   filter: true, sorting: true, resizable: true },\r\n    { headerName: 'ToDT', field: 'toDT',  filter: true, sorting: true, resizable: true },\r\n    \r\n  ];\r\n\r\n  getBrokerageSetupList() {\r\n    if(this.areRequiredValuesSelected()){\r\n      var accountIds = this.accountIds.filter((val)=> val != -1);\r\n      var req = {\r\n        \"branchId\": this.branchIds,\r\n        \"itemGroupId\": this.itemGroupIds,\r\n        \"accounts\": accountIds,\r\n        \"fromDate\": this.datePipe.transform(this.fromDt, 'yyyy-MM-dd'),\r\n        \"toDate\": this.datePipe.transform(this.toDt, 'yyyy-MM-dd'),\r\n        \"instrumentType\": this.instrumentType\r\n      };\r\n      this._appService.getSubBrokeageList(req).subscribe((results) => {\r\n        this.searchedData = req;\r\n       this.brokeragesetupList = results.data;       \r\n      });\r\n    }\r\n  }\r\n\r\n  async getBrokerageAddValidation(): Promise<string> {\r\n    const accountIds = this.accountIds.filter((val) => val != \"-1\");\r\n    const req = {\r\n      branchId : this.branchIds,\r\n      itemGroupId: this.itemGroupIds,\r\n      accounts: accountIds,\r\n      fromDate: this.datePipe.transform(this.fromDt, 'yyyy-MM-dd'),\r\n      toDate: this.datePipe.transform(this.toDt, 'yyyy-MM-dd'),\r\n      instrumentType: this.instrumentType,\r\n    };\r\n  \r\n    try {\r\n      const results = await this._appService.getSubBrokerageAddValidation(req).toPromise();\r\n  \r\n      if (results.message) {\r\n        this.showToaster(results.message);\r\n        this.searchedData = req;\r\n        this.brokeragesetupList = results.data;\r\n        return results.message;\r\n      } else {\r\n        return results.message;\r\n      }\r\n    } catch (error) {\r\n      // Handle error here\r\n      console.error('Error during validation:', error);\r\n      return '';\r\n    }\r\n  }\r\n\r\n  showToaster(message, isError = false) {\r\n    const panelClass = isError ? ['red-text'] : undefined;\r\n    const label = isError ? \"Error\" : \"Success\";\r\n    const time = isError? 6000 : 3000;\r\n  \r\n    this.snackBar.open(message, label, {\r\n      duration: time,\r\n      panelClass: panelClass,\r\n    });\r\n  }\r\n\r\n  areRequiredValuesSelected(): boolean {\r\n    return this.branchIds && this.accountIds && this.itemGroupIds && this.instrumentType && this.fromDt && this.toDt;\r\n  }\r\n\r\n  fetchDropdownData() {\r\n    forkJoin([\r\n      this._masterService.getBranchDDLList(), \r\n      this._masterService.getInstrumentList(),\r\n      this._masterService.getAccount(),\r\n      this._masterSecondService.getItemGroupNameList(),\r\n      this._appService.getCompany(),\r\n    ]).pipe(map(response => {\r\n      this.branchList = response[0];\r\n      this.filteredProviders = response[0];\r\n      this.instrumentList = response[1];\r\n      this.instrumentList = response[1];\r\n      // this.accountList = response[2];\r\n      // this.filteredAccountList = response[2];\r\n      this.itemGroupIdList = response[3];\r\n      this.filteredItemGroup = response[3];\r\n      this.companydetails = response[4];\r\n      this.fromDt = new Date(this.companydetails[0].finBeginDt);\r\n      this.toDt = new Date(this.companydetails[0].finEndDt);\r\n    })).subscribe(res => {\r\n      \r\n    });\r\n\r\n    \r\n  }\r\n\r\n  public actionCellRenderer(params: any) {\r\n    let eGui = document.createElement(\"div\");\r\n    let editingCells = params.api.getEditingCells();\r\n    let isCurrentRowEditing = editingCells.some((cell: any) => {\r\n      return cell.rowIndex === params.node.rowIndex;\r\n    });\r\n    eGui.innerHTML = `<button class=\"material-icons action-button-edit\" data-action=\"edit\">edit </button>\r\n                      <button class=\"material-icons action-button-red\" delete data-action=\"delete\">delete</button>`;\r\n\r\n    return eGui;\r\n}\r\n\r\n  onInputChange(event: any) {\r\n    const searchInput = event.target.value.toLowerCase();\r\n\r\n    this.filteredProviders = this.branchList.filter((data) => {\r\n      const prov = data.name.toLowerCase();\r\n      return prov.includes(searchInput);\r\n    });\r\n  }\r\n\r\n  onInputItemGroupChange(event: any) {\r\n    const searchInput = event.target.value.toLowerCase();\r\n\r\n    this.filteredItemGroup = this.itemGroupIdList.filter((data) => {\r\n      const prov = data.name.toLowerCase();\r\n      return prov.includes(searchInput);\r\n    });\r\n  }\r\n\r\n  onInputAccountListChange(event: any) {\r\n    const searchInput = event.target.value.toLowerCase();\r\n\r\n    this.filteredAccountList = this.accountList.filter((data) => {\r\n      const prov = data.name.toLowerCase();\r\n      return prov.includes(searchInput);\r\n    });\r\n  }\r\n\r\n  branchAllSelection()\r\n  {\r\n    this.branchAllSellected = true;\r\n    var isAllChecked = this.select.options.first.selected;\r\n    this.select.options.forEach(\r\n      (item: MatOption, index) =>\r\n      {\r\n      \r\n        if (isAllChecked) { item.select(); }\r\n          else { item.deselect() }\r\n          if(index === this.select.options.length -1){\r\n            this.onBranchChange([], true);\r\n          }\r\n      }\r\n     \r\n    );\r\n   \r\n  }\r\n\r\n\r\n  accountAllSelection()\r\n  {\r\n    var isAllChecked = this.selectAccount.options.first.selected;\r\n    this.selectAccount.options.forEach(\r\n      (item: MatOption) => {\r\n\r\n        if (isAllChecked) { item.select(); }\r\n        else { item.deselect() }\r\n      }\r\n\r\n    );\r\n\r\n  }\r\n\r\n\r\n  onKey(value) {\r\n    this.branchList = this.search(value);\r\n}\r\n\r\n\r\n  search(value: string) {\r\n  let filter = value.toLowerCase();\r\n  return this.branchList.filter(option => option.toLowerCase().startsWith(filter));\r\n}\r\n\r\n  onBranchChange(event: any, isLastIndex?: boolean) {\r\n    if(this.branchAllSellected && !isLastIndex){\r\n      return;\r\n    }\r\n    if(this.branchIds.length < 2 && this.branchIds[0] == '-1'){\r\n      return;\r\n    }\r\n    //event.source.options._results[1]._selected = true;\r\n    //event.source.options._results[1]._active = true;\r\n    if (this.branchIds) {\r\n      this._masterService.getFilterBranchAccounts(this.branchIds).subscribe(\r\n        response => {\r\n          this.accountList = response;\r\n          this.filteredAccountList = this.accountList;\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  addBrokerage(event: any) { }\r\n\r\n  public async openSlabDetailsDialog(event) {\r\n    const isValid = await this.getBrokerageAddValidation();\r\n    if (isValid == '' && event === 'add') {\r\n      const dialogRef = this.dialog.open(SubAddSetupDetailsComponent, {\r\n        data: {\r\n          selectedSlabId: null,\r\n          fromDt: this.fromDt,\r\n          toDt: this.toDt,\r\n          branchIds: this.branchIds,\r\n          accountIds: this.accountIds,\r\n          itemGroupIds: this.itemGroupIds,\r\n          instrumentType: this.instrumentType,\r\n          isEditMode: 0\r\n        },\r\n      });\r\n      dialogRef.afterClosed().subscribe((user) => {\r\n        this.getBrokerageSetupList();\r\n      });\r\n    } else if(isValid !== '' && event === 'lock'){\r\n      const dialogRef = this.dialog.open(SubLockBrokerageComponent, {\r\n        data: {\r\n          selectedSlabId: null,\r\n          fromDt: this.fromDt,\r\n          toDt: this.toDt,\r\n          branchIds: this.branchIds,\r\n          accountIds: this.accountIds,\r\n          itemGroupIds: this.itemGroupIds,\r\n          instrumentType: this.instrumentType,\r\n          isEditMode: 0\r\n        },\r\n      });\r\n      dialogRef.afterClosed().subscribe((user) => {\r\n        this.getBrokerageSetupList();\r\n      });\r\n    }\r\n  }\r\n\r\n  public openModifySetupDialog() {\r\n    const dialogRef = this.dialog.open(SubAddSetupDetailsComponent, {\r\n      data: {\r\n        selectedSlabId: null,\r\n        fromDt: this.fromDt,\r\n        toDt: this.toDt,\r\n        branchIds: this.branchIds,\r\n        accountIds: this.accountIds,\r\n        itemGroupIds: this.itemGroupIds,\r\n        instrumentType: this.instrumentType,\r\n        isEditMode: 1\r\n      },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((user) => {\r\n      this.getBrokerageSetupList();\r\n    });\r\n  }\r\n\r\n  onFromDateChange() {\r\n    console.log(\"fromDt changed:\", this.fromDt);\r\n  }\r\n\r\n  openEditBrokerageDetails(params) {\r\n    const dialogRef = this.dialog.open(SubAddSetupDetailsComponent, {\r\n      data: {\r\n        selectedSlabId: null,\r\n        fromDt: this.searchedData.fromDate,\r\n        toDt: this.searchedData.toDate,\r\n        branchIds: this.searchedData.branchId,\r\n        accountIds: this.searchedData.accounts,\r\n        itemGroupIds: this.searchedData.itemGroupId,\r\n        instrumentType: this.searchedData.instrumentType,\r\n        isEditMode: 2,\r\n        editParms: params\r\n      },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((user) => {\r\n      this.getBrokerageSetupList();\r\n    });\r\n  }\r\n\r\nonGridClick(params: any) {\r\n  if (params.event.target.dataset.action == \"edit\")\r\n  {\r\n    this.openEditBrokerageDetails(params.data);\r\n\r\n  }\r\n  if (params.event.target.dataset.action == \"delete\")\r\n  {\r\n    const dialogRef = this.dialog.open(ConfirmationDialog, {\r\n      data: {\r\n        message: 'Do you really want to delete this record?',\r\n        buttonText: {\r\n          ok: 'Yes',\r\n          cancel: 'No'\r\n        }\r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((confirmed: boolean) => {\r\n      if (confirmed) {\r\n        this._masterService.deleteSubBrokerageSetup(params.data.id).subscribe((res) => {\r\n          this.getBrokerageSetupList();\r\n          if(res.isSuccess){\r\n            this.showToaster(res.message);\r\n          } else {\r\n            this.showToaster(res.message, true);\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n\r\n  }\r\n}\r\n\r\nviewAllItemGroups(){\r\n  let dialogRef = this.dialog.open(ViewItemGroupComponent, {\r\n    data: { id:this.itemGroupIds }\r\n  });\r\n\r\n  dialogRef.afterClosed().subscribe(user => {\r\n   \r\n  });\r\n}\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"mt-2\">\r\n      <div fxFlex=\"100\" fxFlex.gt-sm=\"15\" fxFlex.sm=\"15\">\r\n        <div class=\"dropdown-container\">\r\n          <div class=\"dropdown-wrapper\">\r\n            <mat-form-field class=\"select-slab-mat\" appearance=\"outline\">\r\n              <mat-label>Select Branch *</mat-label>\r\n              <mat-select #select  [(ngModel)]=\"branchIds\" placeholder=\"Select Branch\" (selectionChange)=\"onBranchChange($event)\" panelClass=\"custom-select-panel\">\r\n                <input class=\"milti-search-box\" #multiUserSearch type=\"text\" autocomplete=\"off\" matInput placeholder=\"Search Branch\" (input)=\"onInputChange($event)\"/>\r\n                <mat-option *ngFor=\"let option of filteredProviders\" [value]=\"option.id\">\r\n                  {{ option.name }}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div fxFlex=\"100\" fxFlex.gt-sm=\"15\" fxFlex.sm=\"15\">\r\n        <div class=\"dropdown-container\">\r\n          <div class=\"dropdown-wrapper\">\r\n            <mat-form-field class=\"select-slab-mat\" appearance=\"outline\">\r\n              <mat-label>Select Account *</mat-label>          \r\n              <mat-select #selectAccount [(ngModel)]=\"accountIds\" multiple placeholder=\"Select Account\" panelClass=\"custom-select-panel\">\r\n                <input class=\"milti-search-box\" #multiUserSearch type=\"text\" autocomplete=\"off\" matInput placeholder=\"Search Account\" (input)=\"onInputAccountListChange($event)\"/>\r\n                <mat-option value=-1 (click)=\"accountAllSelection()\">Select All</mat-option>\r\n                <mat-option *ngFor=\"let option of filteredAccountList\" [value]=\"option.id\">\r\n                  {{ option.name }}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div fxFlex=\"100\" fxFlex.gt-sm=\"23\" fxFlex.sm=\"23\">\r\n        <div class=\"dropdown-container\">\r\n          <div class=\"dropdown-wrapper\">\r\n            <mat-icon class=\"info-icon\" (click)=\"viewAllItemGroups()\" matTooltip=\"View All Item\" matTooltipPosition=\"above\">info</mat-icon>\r\n            <mat-form-field class=\"select-slab-mat\" appearance=\"outline\">\r\n              <mat-label>Select Item Group *</mat-label>\r\n              <mat-select #select  [(ngModel)]=\"itemGroupIds\" placeholder=\"Select Item Group\" panelClass=\"custom-select-panel\">\r\n                <input class=\"milti-search-box\" #multiUserSearch type=\"text\" autocomplete=\"off\" matInput placeholder=\"Search Item Group\" (input)=\"onInputItemGroupChange($event)\"/>\r\n                <mat-option *ngFor=\"let option of filteredItemGroup\" [value]=\"option.id\">\r\n                  {{ option.name }}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div fxFlex=\"100\" fxFlex.gt-sm=\"23\" fxFlex.sm=\"15\">\r\n        <div class=\"dropdown-container\">\r\n          <div class=\"dropdown-wrapper\">\r\n            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n              <mat-label>Instrument Type *</mat-label>\r\n              <mat-select placeholder=\"Select InsType\" [(ngModel)]=\"instrumentType\">\r\n                <mat-option *ngFor=\"let exchange of instrumentList\" [value]=\"exchange.id\">\r\n                  {{exchange.name}}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div fxFlex=\"100\" fxFlex.gt-sm=\"23\" fxFlex.sm=\"15\">\r\n        <div class=\"dropdown-container\">\r\n          <div class=\"dropdown-wrapper\">\r\n            <mat-form-field appearance=\"outline\" class=\"calendar\">\r\n              <mat-label>From</mat-label>\r\n              <input matInput [matDatepicker]=\"picker1\" [(ngModel)]=\"fromDt\" (ngModelChange)=\"onFromDateChange()\">\r\n              <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\r\n              <mat-datepicker #picker1></mat-datepicker>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div fxFlex=\"100\" fxFlex.gt-sm=\"23\" fxFlex.sm=\"15\">\r\n        <div class=\"dropdown-container\">\r\n          <div class=\"dropdown-wrapper\">\r\n            <mat-form-field appearance=\"outline\" class=\"calendar\">\r\n                <mat-label>To</mat-label>\r\n              <input matInput [matDatepicker]=\"picker2\" placeholder=\"To\" [(ngModel)]=\"toDt\">\r\n              <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\r\n              <mat-datepicker #picker2></mat-datepicker>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div fxFlex=\"100\" fxFlex.gt-sm=\"7\" fxFlex.sm=\"7\">\r\n        <button mat-raised-button color=\"primary\" (click)=\"getBrokerageSetupList()\" [disabled]=\"!areRequiredValuesSelected()\" class=\"search-icon-btn\">\r\n          <mat-icon>search</mat-icon>\r\n        </button>\r\n      </div>\r\n      <div class=\"btn-group\">\r\n        <button mat-raised-button color=\"accent\" matTooltip=\"Lock Sub Brokerage\" matTooltipPosition=\"above\" [disabled]=\"!areRequiredValuesSelected()\" (click)=\"openSlabDetailsDialog('lock')\" class=\"icon-btn\">\r\n          <mat-icon class=\"lock-icon\">lock</mat-icon>\r\n        </button>\r\n        <button mat-raised-button color=\"accent\" matTooltip=\"Modify Sub Brokerage\" matTooltipPosition=\"above\" [disabled]=\"!areRequiredValuesSelected()\" (click)=\"openModifySetupDialog()\" class=\"icon-btn\">\r\n          <mat-icon class=\"edit-icon\">exposure</mat-icon>\r\n        </button>\r\n        <button mat-raised-button color=\"accent\" matTooltip=\"Add Sub Brokerage\" matTooltipPosition=\"above\" [disabled]=\"!areRequiredValuesSelected()\" (click)=\"openSlabDetailsDialog('add')\" class=\"icon-btn\">\r\n          <mat-icon>add_to_queue</mat-icon>\r\n        </button>\r\n      </div>\r\n    </div>\r\n      <div class=\"col-xl-12 mt-2\">\r\n        <ag-grid-angular style=\" height: 535px;\"\r\n                         class=\"ag-theme-material\"\r\n                         [rowData]=\"brokeragesetupList\"\r\n                         [pagination]=\"true\"\r\n                         [rowHeight]=\"31\"\r\n                         [columnDefs]=\"columnDefs\"\r\n                         [defaultColDef]=\"agGridOptions.defaultColDef\"\r\n                         (cellClicked)=\"onGridClick($event)\"\r\n                         (gridReady)=\"onGridReady($event)\"\r\n                          headerHeight=\"34\">\r\n        </ag-grid-angular>\r\n      </div>\r\n    </div>  \r\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { MasterService } from '../../master.service';\nimport { forkJoin, map } from 'rxjs';\nimport { DatePipe, formatDate } from '@angular/common';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-sub-lock-brokerage',\n  templateUrl: './sub-lock-brokerage.component.html',\n  styleUrls: ['./sub-lock-brokerage.component.scss']\n})\nexport class SubLockBrokerageComponent implements OnInit {\n  public itemForm: UntypedFormGroup;\n  parentData: any;\n\n\n  constructor( public snackBar: MatSnackBar, private datePipe: DatePipe, private formBuilder: UntypedFormBuilder, public dialogRef: MatDialogRef<SubLockBrokerageComponent>, @Inject(MAT_DIALOG_DATA) public data: any, private _appService: MasterService) {\n   this.parentData = data;\n  }\n\n  bindFormControls() {\n    this.itemForm = this.formBuilder.group({\n     'lockBrokDate': ['', Validators.required],\n    });\n}\n\n  ngOnInit(): void {\n    this.bindFormControls();\n  }\n\n  close(): void {\n    this.dialogRef.close();\n  }\n\n  public onSubmit(values: object) {\n    console.log(values);\n    debugger;\n    var body = this.itemForm.value;\n    console.log(body);\n    body.lockBrokDate = this.datePipe.transform(body.lockBrokDate, 'yyyy-MM-dd');\n    body.id = this.parentData.isEditMode;\n    body.accounts = this.parentData.accountIds.filter((val)=> val != -1);;\n    body.branchId = this.parentData.branchIds;\n    body.fromDate = this.datePipe.transform(this.parentData.fromDt, 'yyyy-MM-dd');\n    body.toDate = this.datePipe.transform(this.parentData.toDt, 'yyyy-MM-dd');\n    body.instrumentType = this.parentData.instrumentType;\n    body.itemGroupId = this.parentData.itemGroupIds;\n    body.higherSideOnly= false;\n\n    if (this.itemForm.valid) {\n      //const body = JSON.stringify(addFormData);\n      this._appService.lockSubBrokerage(body).subscribe(result => {\n        console.log(\"result\", result);\n        this.showToaster(result.message);\n        this.dialogRef.close();\n      });\n    }\n  }\n\n  showToaster(message){\n    this.snackBar.open(message, \"Success\", {\n      duration: 3000,\n    });\n  }\n\n}\n","<h2 class=\"heading\">Add Item</h2>\n<a (click)=\"close()\" class=\"close-btn\">\n  <span class=\"material-symbols-outlined\">\n    <mat-icon>close</mat-icon>\n  </span>\n</a>\n<form [formGroup]=\"itemForm\" (ngSubmit)=\"onSubmit(itemForm.value)\" fxLayout=\"row wrap\" class=\"user-form\">\n    <div class=\"white-block pb-5\">\n        <h3><span>Loak Brokerage</span></h3>\n        <div class=\"tab-party-details-parent\">\n            <div class=\"dropdown-wrapper\">\n                <mat-form-field appearance=\"outline\">\n                  <mat-label>Lock Brokerage</mat-label>\n                  <input matInput [matDatepicker]=\"lockPicker\" formControlName=\"lockBrokDate\">\n                  <mat-datepicker-toggle matSuffix [for]=\"lockPicker\"></mat-datepicker-toggle>\n                  <mat-datepicker #lockPicker></mat-datepicker>\n                </mat-form-field>\n              </div>\n        </div>\n    </div>\n    <div fxFlex=\"100\" class=\"mt-2 text-center space-between-btns\">\n        <button mat-raised-button color=\"warn\" type=\"button\" (click)=\"close()\">Cancel</button>            \n        <button mat-raised-button color=\"primary\" class=\"uppercase\" [disabled]=\"!itemForm.valid\" type=\"submit\">Save</button> \n    </div>\n</form>\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { DatatableComponent } from \"@swimlane/ngx-datatable\";\r\nimport { AppSettings } from \"src/app/app.settings\";\r\nimport { Settings } from \"src/app/app.settings.model\";\r\nimport { MasterService } from \"../master.service\";\r\nimport { ConfirmationDialog } from \"../../Dialog/confirmation-dialog/confirmation-dialog.component\";\r\nimport { MasterSecondService } from \"../master-second.service\";\r\nimport { AppService } from \"src/app/service/app.service\";\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from \"@angular/forms\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\n\r\n@Component({\r\n  selector: 'app-symbol-mapping',\r\n  templateUrl: './symbol-mapping.component.html',\r\n  styleUrls: ['./symbol-mapping.component.scss']\r\n})\r\nexport class SymbolMappingComponent implements OnInit {\r\n  @ViewChild(DatatableComponent) table: DatatableComponent;\r\n  public itemForm: UntypedFormGroup;\r\n  editing = {};\r\n  rows = [];\r\n  temp = [];\r\n  itemList: any;\r\n  filteredItemList: any[] = [];\r\n  selected = [];\r\n  loadingIndicator: boolean = true;\r\n  reorderable: boolean = true;\r\n \r\n  public settings: Settings;\r\n  symbolMappingList: any[]=[];\r\nconstructor(public snackBar: MatSnackBar, public appSettings: AppSettings, private formBuilder: UntypedFormBuilder,\r\n  public dialog: MatDialog, private _appService: AppService, private _masterService: MasterService, private _masterSecondService: MasterSecondService) {\r\n      this.settings = this.appSettings.settings;\r\n    }\r\n\r\n  ngOnInit() {\r\n      this.getSymbolMappingList();\r\n      this.bindFormControls();\r\n  }\r\n\r\n  bindFormControls() {\r\n    this.itemForm = this.formBuilder.group({\r\n      'itemId': ['', Validators.required],\r\n      'symbol': ['', Validators.required],\r\n      'id': [0]\r\n    });\r\n   this.getitemList();\r\n}\r\n\r\n  agGridOptions: any = {\r\n      defaultColDef: {\r\n        filter: true,\r\n        flex: 1,\r\n        sortable: true,\r\n        wraptext: true,\r\n        resizable: true\r\n      }\r\n  }\r\n\r\n  columnDefs = [\r\n      {\r\n        headerName: 'Action', field: 'fileIcon', cellRenderer: this.actionCellRenderer, minWidth: 80, filter: false,\r\n        maxWidth: 110, resizable: true\r\n      },\r\n      { headerName: 'ItemID', field: 'itemId', filter: true, sorting: true, resizable: true },\r\n      { headerName: 'Item Name', field: 'itemName', filter: true, sorting: true, resizable: true },\r\n    { headerName: 'Symbol', field: 'symbol', filter: true, sorting: true, resizable: true },  \r\n  ];\r\n\r\n  getitemList() {\r\n    this._appService.getitems().subscribe((results) => {\r\n     this.itemList = results;\r\n     this.filteredItemList = results;\r\n    });\r\n  }\r\n\r\n  onInputChange(event: any) {\r\n    const searchInput = event.target.value.toLowerCase();\r\n\r\n    this.filteredItemList = this.itemList.filter((data) => {\r\n      const prov = data.itemCode.toLowerCase();\r\n      return prov.includes(searchInput);\r\n    });\r\n\r\n    if (searchInput === '') {\r\n      this.filteredItemList = [...this.itemList];\r\n    }\r\n  }\r\n\r\n  public onSubmit(values: Object): void {\r\n    var body = this.itemForm.value;\r\n\r\n    if (this.itemForm.valid) {\r\n      //const body = JSON.stringify(addFormData);\r\n      this._masterSecondService.saveSymbolMapping(body).subscribe(result => {\r\n        if(result.isSuccess){\r\n        console.log(\"result\", result);\r\n        this.getSymbolMappingList();\r\n        this.resetForm(this.itemForm);\r\n      } else {\r\n        this.showToaster(result.message, true);\r\n      }\r\n      }, err => {\r\n        console.log(err);\r\n      });\r\n    }\r\n  }\r\n\r\n  showToaster(message, isError = false) {\r\n    const panelClass = isError ? ['red-text'] : undefined;\r\n    const label = isError ? \"Error\" : \"Success\";\r\n    const time = isError? 600000 : 300000;\r\n  \r\n    this.snackBar.open(message, label, {\r\n      duration: time,\r\n      panelClass: panelClass,\r\n    });\r\n  }\r\n\r\ngetSymbolMappingList() {\r\n  this._masterSecondService.getSymbolMappingList().subscribe((results) => {\r\n       this.symbolMappingList = results;       \r\n      });\r\n  }\r\n\r\n  public actionCellRenderer(params: any) {\r\n      let eGui = document.createElement(\"div\");\r\n      let editingCells = params.api.getEditingCells();\r\n      let isCurrentRowEditing = editingCells.some((cell: any) => {\r\n        return cell.rowIndex === params.node.rowIndex;\r\n      });\r\n      eGui.innerHTML = `<button class=\"material-icons action-button-edit\" data-action=\"edit\">edit </button>\r\n                        <button class=\"material-icons action-button-red\" delete data-action=\"delete\">delete</button>`;    \r\n      return eGui;\r\n  }\r\n\r\n  onGridClick(params: any) {\r\n    if (params.event.target.dataset.action == \"edit\")\r\n    {\r\n      this.openExchangeDialog(params.data.id);\r\n    }\r\n    if (params.event.target.dataset.action == \"delete\")\r\n    {\r\n      const dialogRef = this.dialog.open(ConfirmationDialog, {\r\n        data: {\r\n          message: 'Do you really want to delete this record?',\r\n          buttonText: {\r\n            ok: 'Yes',\r\n            cancel: 'No'\r\n          }\r\n        }\r\n      });\r\n\r\n      dialogRef.afterClosed().subscribe((confirmed: boolean) => {\r\n        if (confirmed) {\r\n          this._masterSecondService.deleteSymbolMapping(params.data.id).subscribe((res) => {\r\n            this.getSymbolMappingList();\r\n          });\r\n        }\r\n      });\r\n\r\n\r\n    }\r\n  }\r\n\r\n  public openExchangeDialog(id) {\r\n    this._masterSecondService.getSymbolMappingId(id).subscribe((response) => {\r\n      var res = response[0];\r\n      this.itemForm.get('id').setValue(res.id);\r\n      this.itemForm.get('symbol').setValue(res.symbol);\r\n      this.itemForm.get('itemId').setValue(res.itemId);      \r\n    });\r\n  } \r\n\r\n  resetForm(myForm) {\r\n    myForm.reset();\r\n    myForm.get('id').setValue(0);\r\n    Object.keys(myForm.controls).forEach(key => {\r\n      myForm.get(key).setErrors(null);\r\n    });\r\n  }\r\n\r\n  close() {\r\n    this.resetForm(this.itemForm);\r\n  }\r\n}","<div class=\"row\">\n    <div fxLayout=\"row\" class=\"mt-2 flex-end symbol-mapping\">\n        <form [formGroup]=\"itemForm\" (ngSubmit)=\"onSubmit(itemForm.value)\" fxLayout=\"row wrap\" class=\"user-form\">\n            <div class=\"white-block pb-5\">\n                <div class=\"tab-party-details-parent\">\n                    <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\n                        <div class=\"dropdown-wrapper\">\n                            <mat-form-field class=\"select-slab-mat\" appearance=\"outline\">\n                              <mat-label>Select Item</mat-label>\n                              <mat-select #select placeholder=\"Select Item\" panelClass=\"custom-select-panel\" formControlName=\"itemId\">\n                                <input class=\"milti-search-box\" #multiUserSearch type=\"text\" autocomplete=\"off\" matInput placeholder=\"Search Item\" (input)=\"onInputChange($event)\" />\n                                <mat-option *ngFor=\"let option of filteredItemList\" [value]=\"option.id\">\n                                  {{ option.itemCode }}\n                                </mat-option>\n                              </mat-select>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div fxFlex=\"100\" fxFlex.gt-sm=\"15\" fxFlex.sm=\"50\">\n                        <mat-form-field appearance=\"outline\">\n                          <mat-label>Symbol</mat-label>\n                          <input matInput autocomplete=\"off\" placeholder=\"Symbol\" formControlName=\"symbol\" type=\"text\">\n                          <mat-error *ngIf=\"itemForm.controls.symbol.errors?.required\">Symbol is required</mat-error>\n                        </mat-form-field>\n                      </div>\n                      <button mat-raised-button color=\"primary\" class=\"uppercase save-btn\" [disabled]=\"!itemForm.valid\" type=\"submit\">Save</button> \n                      <button type=\"button\" mat-raised-button color=\"warn\" (click)=\"close()\">Cancel</button>            \n                </div>\n            </div>\n        </form>\n    </div>\n    <div class=\"col-xl-12 mt-2\">\n        <ag-grid-angular style=\" height: 535px;\"\n                         class=\"ag-theme-material\"\n                           [rowHeight]=\"31\"\n                         [rowData]=\"symbolMappingList\"\n                         [pagination]=\"true\"\n                         [columnDefs]=\"columnDefs\"\n                         [defaultColDef]=\"agGridOptions.defaultColDef\"\n                         (cellClicked)=\"onGridClick($event)\"\n                         headerHeight=\"34\">\n        </ag-grid-angular>\n      </div>\n  </div>","import { Component, OnInit, Inject, ViewChild } from '@angular/core';\r\nimport { FormGroup, UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from '@angular/material/dialog';\r\nimport { MasterService } from '../../master.service';\r\nimport { forkJoin, map } from 'rxjs';\r\nimport { AppSettings } from 'src/app/app.settings';\r\nimport { AppService } from 'src/app/service/app.service';\r\nimport { MatSelect } from '@angular/material/select';\r\nimport { MatOption } from '@angular/material/core';\r\nimport { MasterSecondService } from '../../master-second.service';\r\nimport { ErrorDialog } from '../../../Dialog/confirmation-dialog/error-dialog.component';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n\r\nexport interface Tax {\r\n  id: number;\r\n  name: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-tax-dialog',\r\n  templateUrl: './add-tax-master.component.html',\r\n  styleUrls: ['./add-tax-master.component.scss']\r\n})\r\n\r\nexport class AddTaxComponent implements OnInit {\r\n  @ViewChild('select') select: MatSelect;\r\n  public taxMasterForm: UntypedFormGroup;\r\n  public taxForm: UntypedFormGroup;\r\n  applyOnList: any;\r\n  selectedId: any;\r\n  selectedName: any;\r\n  accountList: any[];\r\n  accountIds: Array<string>;\r\n\r\n  accountAllSellected: boolean = false;\r\n  accountTaxList: any[] = [];\r\n  accountApplyOnList: any[];\r\n  gridApi: any;\r\n  isRowSelected: boolean = false;\r\n  agGridOptions: any = {\r\n    defaultColDef: {\r\n      filter: true,\r\n      //flex:1,\r\n      sortable: true,\r\n      wraptext: true,\r\n      resizable: true,\r\n      /* minWidth: 100,*/\r\n\r\n    },\r\n    /* suppressRowHoverHighlight: true,*/\r\n  }\r\n\r\n  columnDefs = [{\r\n    headerName: 'Added account tax list',\r\n    children: [\r\n      {\r\n        headerName: '', editable: false, minwidth: 45, width: 45, maxwidth: 45, resizable: false, sortable: false, filter: false, checkboxSelection: true, headerCheckboxSelection: true,\r\n      },\r\n      { headerName: 'Account', field: 'accountName', filter: true, sorting: true, resizable: true, flex: 1, },\r\n      { headerName: 'ApplyOn', field: 'applyOn', filter: true, sorting: true, resizable: true, flex: 1, },\r\n    ]\r\n  }];\r\n\r\n  constructor(public snackBar: MatSnackBar, public appSettings: AppSettings,\r\n    private formBuilder: UntypedFormBuilder, public dialogRef: MatDialogRef<AddTaxComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any, private _masterService: MasterService,\r\n    private _masterSecondService: MasterSecondService, public dialog: MatDialog) {\r\n\r\n    this.selectedId = data.id;\r\n    if (data.id == null) { this.selectedId = 0; }\r\n  }\r\n\r\n\r\n\r\n  checkTaxSelect() {\r\n    if (this.selectedId == 0) {\r\n      const dialogRef = this.dialog.open(ErrorDialog, {\r\n        data: {\r\n          message: 'Please select or save tax to add account tax',\r\n          buttonText: {\r\n            ok: 'OK',\r\n\r\n          }\r\n        }\r\n\r\n      });\r\n    }\r\n  }\r\n\r\n  /* to filter select account dropdown*/\r\n  onInputChange(event: any) {\r\n    const searchInput = event.target.value.toLowerCase();\r\n\r\n    this.accountList = this.accountList.filter((data) => {\r\n      const prov = data.name.toLowerCase();\r\n      return prov.includes(searchInput);\r\n    });\r\n  }\r\n\r\n  /* for adding tax detail*/\r\n  bindFormControls() {\r\n    this.taxMasterForm = this.formBuilder.group({\r\n      'name': ['', Validators.required],\r\n      'appliedOn': ['', Validators.required],\r\n      'id': [0]\r\n    });\r\n\r\n  }\r\n  /* for adding tax account detail*/\r\n  bindAccountTaxControls() {\r\n    this.taxForm = this.formBuilder.group({\r\n      'taxId': [this.selectedId, Validators.required],\r\n      'applyOn': ['', Validators.required],\r\n      'accounts': ['', Validators.required],\r\n      'id': [0]\r\n    });\r\n  }\r\n\r\n  \r\n\r\n  onGridReady(event) { this.gridApi = event.api; }\r\n\r\n  accountAllSelection() {\r\n    this.accountAllSellected = true;\r\n    var isAllChecked = this.select.options.first.selected;\r\n    this.select.options.forEach(\r\n      (item: MatOption, index) => {\r\n        if (isAllChecked) { item.select(); }\r\n        else { item.deselect() }\r\n        \r\n      }\r\n    );\r\n  }\r\n\r\n  initialApiCalls() {\r\n    forkJoin([this._masterService.getApplyOn(), this._masterService.getApplyOnTaxAccountDDL(), this._masterService.getAccount()]).pipe(map(response => {\r\n      this.applyOnList = response[0];\r\n\r\n      this.accountApplyOnList = response[1];\r\n      this.accountList = response[2];\r\n    })).subscribe(res => {\r\n\r\n    });\r\n    if (this.selectedId != 0) { this.getAccountTaxList(); }\r\n  }\r\n\r\n  getTaxInfo() {\r\n    this._masterSecondService.getTaxById(this.selectedId).subscribe((res) => {\r\n      this.taxMasterForm.get('name').setValue(res.name);\r\n      this.taxMasterForm.get('appliedOn').setValue(res.appliedOn);\r\n      this.taxMasterForm.get('id').setValue(res.id);\r\n      this.selectedName = res.name;\r\n    });\r\n  }\r\n\r\n  getAccountTaxList() {\r\n    this._masterSecondService.getTaxAccountList(this.selectedId).subscribe((res) => {\r\n      this.accountTaxList = res;\r\n    });\r\n  }\r\n\r\n\r\n  public onSubmit(values: Object): void {\r\n    this.taxMasterForm.controls['name'].setValue(String(this.taxMasterForm.get('name').value));\r\n    this.taxMasterForm.controls['appliedOn'].setValue(String(this.taxMasterForm.get('appliedOn').value));\r\n    var body = this.taxMasterForm.value;\r\n    if (this.taxMasterForm.valid) {\r\n      this._masterSecondService.saveTax(body).subscribe(result => {\r\n        if(result.isSuccess){\r\n          console.log(\"result\", result);\r\n          this.dialogRef.close();\r\n        } else {\r\n          this.showToaster(result.message, true);\r\n        }\r\n      }, err => {\r\n        console.log(err);\r\n      });\r\n    }\r\n  }\r\n\r\n  showToaster(message, isError = false) {\r\n    const panelClass = isError ? ['red-text'] : undefined;\r\n    const label = isError ? \"Error\" : \"Success\";\r\n    const time = isError? 600000 : 300000;\r\n  \r\n    this.snackBar.open(message, label, {\r\n      duration: time,\r\n      panelClass: panelClass,\r\n    });\r\n  }\r\n\r\n  deleteAccountTax()\r\n  {\r\n    var selectedRecord = this.gridApi.getSelectedRows();\r\n    if (selectedRecord.length == 0) {\r\n      const dialogRef = this.dialog.open(ErrorDialog, {\r\n        data: {\r\n          message: 'Please select record to delete',\r\n          buttonText: {\r\n            ok: 'OK',\r\n\r\n          }\r\n        }\r\n\r\n      });\r\n\r\n    }\r\n    else\r\n    {\r\n      this._masterSecondService.deleteAccountTax(selectedRecord).subscribe(result => {\r\n        this.getAccountTaxList();\r\n      });\r\n    }\r\n  }\r\n\r\n  public onAccountTaxSubmit(values: Object): void {\r\n\r\n    if (this.selectedId == 0) {\r\n      const dialogRef = this.dialog.open(ErrorDialog, {\r\n        data: {\r\n          message: 'Please select or save tax to add account tax',\r\n          buttonText: {\r\n            ok: 'OK',\r\n\r\n          }\r\n        }\r\n\r\n      });\r\n    }\r\n\r\n    var body = this.taxForm.value;\r\n    //to remove select all option value that is '-1'\r\n    body.accounts.forEach((value, index) => {\r\n      if (value == '-1') body.accounts.splice(index, 1);\r\n    });\r\n\r\n  \r\n    this.taxForm.controls['taxId'].setValue(this.selectedId);\r\n    if (this.taxForm.valid) {\r\n      this._masterSecondService.addAccountTax(body).subscribe(result => {\r\n        this.getAccountTaxList();\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.bindFormControls();\r\n    this.bindAccountTaxControls();\r\n    this.initialApiCalls();\r\n    if (this.selectedId != 0) {\r\n      this.getTaxInfo();\r\n     \r\n    }\r\n    else {\r\n      this.taxMasterForm.get('id').setValue(0);\r\n    }\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<h2 class=\"heading mb-10\">Add Tax</h2>\r\n<a (click)=\"close()\" class=\"close-btn\">\r\n    <span class=\"material-symbols-outlined\">\r\n      <mat-icon>close</mat-icon>\r\n    </span>\r\n</a>\r\n<mat-tab-group>\r\n    <mat-tab label=\"Tax\">\r\n        <form [formGroup]=\"taxMasterForm\" (ngSubmit)=\"onSubmit(taxMasterForm.value)\" fxLayout=\"row wrap\" class=\"user-form\">\r\n            <div class=\"tab-party-details-parent\">\r\n                <div class=\"white-block pb-0\">\r\n                    <h3><span>Tax Details</span></h3>\r\n                    <div fxFlex=\"100\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n                        <mat-form-field appearance=\"outline\">\r\n                          <mat-label>Name</mat-label>\r\n                          <input matInput autocomplete=\"off\" placeholder=\"name\" formControlName=\"name\" type=\"text\">\r\n                          <mat-error *ngIf=\"taxMasterForm.controls.name.errors?.required\">Name is required</mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div fxFlex=\"100\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <mat-label>ApplyOn</mat-label>\r\n                            <mat-select placeholder=\"\" formControlName=\"appliedOn\">\r\n                                <mat-option *ngFor=\"let apply of applyOnList\" [value]=\"apply.id\">\r\n                                  {{apply.name}}\r\n                                </mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div fxFlex=\"100\" class=\"mt-2 text-center space-between-btns\">\r\n                <button mat-raised-button color=\"warn\" type=\"button\" (click)=\"close()\">Cancel</button>\r\n                <button mat-raised-button color=\"primary\" class=\"uppercase\" [disabled]=\"!taxMasterForm.valid\" type=\"submit\">Save</button>\r\n            </div>\r\n        </form>\r\n    </mat-tab>\r\n    <mat-tab label=\"Account Tax \" (click)=\"checkTaxSelect()\">\r\n        <form [formGroup]=\"taxForm\" (ngSubmit)=\"onAccountTaxSubmit(taxForm.value)\" fxLayout=\"row wrap\" class=\"user-form\">\r\n            <div class=\"tab-party-details-parent\">\r\n                <div class=\"white-block pb-0\">\r\n                    <h3><span>{{selectedName}} Tax</span></h3>\r\n                    <div fxFlex=\"100\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n                        <div class=\"dropdown-wrapper\">\r\n                            <mat-form-field class=\"select-slab-mat\" appearance=\"outline\">\r\n                              <mat-label>Select Account</mat-label>\r\n                              <mat-select #select multiple placeholder=\"Select Account\" panelClass=\"custom-select-panel\" formControlName=\"accounts\">\r\n                                <input class=\"milti-search-box\" #multiUserSearch type=\"text\" autocomplete=\"off\" matInput placeholder=\"Search Account\" (input)=\"onInputChange($event)\" />\r\n                                <mat-option value=-1 (click)=\"accountAllSelection()\">Select All</mat-option>\r\n                                <mat-option *ngFor=\"let option of accountList\" [value]=\"option.id\">\r\n                                  {{ option.name }}\r\n                                </mat-option>\r\n                              </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>                    \r\n                    <div fxFlex=\"100\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <mat-label>Apply On</mat-label>\r\n                            <mat-select placeholder=\"Select ApplyOn\" formControlName=\"applyOn\">\r\n                              <mat-option *ngFor=\"let DDL of accountApplyOnList\" [value]=\"DDL.id\">\r\n                                {{DDL.name}}\r\n                              </mat-option>\r\n                            </mat-select>\r\n                          </mat-form-field>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div fxFlex=\"100\" class=\"mt-2 text-center space-between-btns\">\r\n                <button mat-raised-button color=\"warn\" type=\"button\" (click)=\"close()\">Cancel</button>\r\n                <button mat-raised-button color=\"primary\" class=\"uppercase\" [disabled]=\"!taxForm.valid\" type=\"submit\">Save</button>\r\n            </div>\r\n        </form>\r\n        <div class=\"col-xl-12 mt-2 position-relative\">\r\n            <span class=\"material-symbols-outlined delete-icon\" (click)=\"deleteAccountTax()\">\r\n              <mat-icon>delete_sweep</mat-icon>\r\n            </span>\r\n            <ag-grid-angular style=\" height: 240px;\"\r\n                          class=\"ag-theme-material mt-2\"\r\n                          [rowData]=\"accountTaxList\"\r\n                          [pagination]=\"true\"\r\n                          [rowHeight]=\"31\"\r\n                          [columnDefs]=\"columnDefs\"\r\n                          [rowSelection]=\"'multiple'\"\r\n                          [rowMultiSelectWithClick]=\"true\"\r\n                          [defaultColDef]=\"agGridOptions.defaultColDef\"\r\n                          (gridReady)=\"onGridReady($event)\"\r\n                          headerHeight=\"34\">\r\n            </ag-grid-angular>\r\n        </div>\r\n    </mat-tab>\r\n</mat-tab-group>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { DatatableComponent } from \"@swimlane/ngx-datatable\";\r\nimport { AppSettings } from \"src/app/app.settings\";\r\nimport { Settings } from \"src/app/app.settings.model\";\r\nimport { AppService } from \"src/app/service/app.service\";\r\nimport { MasterService } from \"../master.service\";\r\nimport { AddTaxComponent } from \"./tax-dialog/add-tax-master.component\";\r\nimport { ConfirmationDialog } from \"../../Dialog/confirmation-dialog/confirmation-dialog.component\";\r\nimport { MasterSecondService } from \"../master-second.service\";\r\n\r\n@Component({\r\n    selector: 'app-blank',\r\n    templateUrl: './tax-master.component.html',\r\n    styleUrls: ['./tax-master.component.scss']\r\n})\r\n\r\nexport class TaxComponent implements OnInit {\r\n    @ViewChild(DatatableComponent) table: DatatableComponent;\r\n    editing = {};\r\n    rows = [];\r\n    temp = [];\r\n    selected = [];\r\n    loadingIndicator: boolean = true;\r\n    reorderable: boolean = true;\r\n   \r\n    public settings: Settings;\r\n    taxList: any;\r\n  constructor(public appSettings: AppSettings,\r\n    public dialog: MatDialog, private _masterService: MasterService, private _masterSecondService: MasterSecondService) {\r\n        this.settings = this.appSettings.settings;\r\n      }\r\n\r\n    ngOnInit() {\r\n        this.gettaxList();\r\n    }\r\n\r\n    agGridOptions: any = {\r\n        defaultColDef: {\r\n          filter: true,\r\n          flex: 1,\r\n          sortable: true,\r\n          wraptext: true,\r\n          resizable: true\r\n        }\r\n    }\r\n\r\n    columnDefs = [\r\n        {\r\n          headerName: 'Action', field: 'fileIcon', cellRenderer: this.actionCellRenderer, minWidth: 80,\r\n          maxWidth: 110, resizable: true, filter: false\r\n        },\r\n        { headerName: 'Name', field: 'name', filter: true, sorting: true, resizable: true },\r\n      { headerName: 'AppliedOn', field: 'applyOnName', filter: true, sorting: true, resizable: true }  \r\n    ];\r\n\r\n  gettaxList() {\r\n    this._masterSecondService.getTax().subscribe((results) => {\r\n         this.taxList = results;       \r\n        });\r\n    }\r\n\r\n    public actionCellRenderer(params: any) {\r\n        let eGui = document.createElement(\"div\");\r\n        let editingCells = params.api.getEditingCells();\r\n        let isCurrentRowEditing = editingCells.some((cell: any) => {\r\n          return cell.rowIndex === params.node.rowIndex;\r\n        });\r\n        eGui.innerHTML = `<button class=\"material-icons action-button-edit\" data-action=\"edit\">edit </button>\r\n                          <button class=\"material-icons action-button-red\" delete data-action=\"delete\">delete</button>`;    \r\n        return eGui;\r\n    }\r\n\r\n    onGridClick(params: any) {\r\n      if (params.event.target.dataset.action == \"edit\")\r\n      {\r\n        this.openTaxDialog(params.data.id);\r\n      }\r\n      if (params.event.target.dataset.action == \"delete\")\r\n      {\r\n        const dialogRef = this.dialog.open(ConfirmationDialog, {\r\n          data: {\r\n            message: 'Do you really want to delete this record?',\r\n            buttonText: {\r\n              ok: 'Yes',\r\n              cancel: 'No'\r\n            }\r\n          }\r\n        });\r\n  \r\n        dialogRef.afterClosed().subscribe((confirmed: boolean) => {\r\n          if (confirmed) {\r\n            this._masterSecondService.deleteTax(params.data.id).subscribe((res) => {\r\n              this.gettaxList();\r\n            });\r\n          }\r\n        });\r\n  \r\n  \r\n      }\r\n    }\r\n\r\n    public openTaxDialog(user) {\r\n        let dialogRef = this.dialog.open(AddTaxComponent, {\r\n          data: { id:user }\r\n        });\r\n      \r\n        dialogRef.afterClosed().subscribe(user => {\r\n          this.gettaxList();\r\n          if (user) {\r\n            /* (user.id) ? this.updateUser(user) : this.addUser(user);*/\r\n          }\r\n        });\r\n    } \r\n}\r\n","<div class=\"row\">\r\n    <div fxLayout=\"row\" class=\"mt-2 flex-end\">\r\n      <button mat-raised-button color=\"primary\" class=\"delete-slab icon-btn\">\r\n        <mat-icon>\r\n          <span class=\"material-icons-outlined\">        \r\n            file_download\r\n          </span>\r\n        </mat-icon> \r\n        Export\r\n      </button>\r\n      <button mat-raised-button color=\"accent\" (click)=\"openTaxDialog(null)\" class=\"icon-btn ml-15\">\r\n        <mat-icon>add</mat-icon> Add Tax\r\n      </button>\r\n    </div>\r\n    <div class=\"col-xl-12 mt-2\">\r\n        <ag-grid-angular style=\" height: 535px;\"\r\n                         class=\"ag-theme-material\"\r\n                           [rowHeight]=\"31\"\r\n                         [rowData]=\"taxList\"\r\n                         [pagination]=\"true\"\r\n                         [columnDefs]=\"columnDefs\"\r\n                         [defaultColDef]=\"agGridOptions.defaultColDef\"\r\n                         (cellClicked)=\"onGridClick($event)\"\r\n                         headerHeight=\"34\">\r\n        </ag-grid-angular>\r\n      </div>\r\n  </div>","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { DatatableComponent } from \"@swimlane/ngx-datatable\";\r\nimport { AppSettings } from \"src/app/app.settings\";\r\nimport { Settings } from \"src/app/app.settings.model\";\r\nimport { MasterService } from \"../master.service\";\r\nimport { ConfirmationDialog } from \"../../Dialog/confirmation-dialog/confirmation-dialog.component\";\r\nimport { MasterSecondService } from \"../master-second.service\";\r\nimport { AppService } from \"src/app/service/app.service\";\r\nimport { forkJoin, Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from \"@angular/forms\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\n\r\n@Component({\r\n  selector: 'app-trade-file',\r\n  templateUrl: './trade-file.component.html',\r\n  styleUrls: ['./trade-file.component.scss']\r\n})\r\nexport class TradeFileComponent implements OnInit {\r\n  @ViewChild(DatatableComponent) table: DatatableComponent;\r\n  public itemForm: UntypedFormGroup;\r\n  editing = {};\r\n  rows = [];\r\n  temp = [];\r\n  typeList: any;\r\n  filteredTypeList: any[] = [];\r\n  brokerList: any;\r\n  filterBrokerList: any[]= [];\r\n  clientList: any;\r\n  filterClientList: any[]= [];\r\n  selected = [];\r\n  loadingIndicator: boolean = true;\r\n  reorderable: boolean = true;\r\n  partyAs = [{'id':'C', 'name':'Client'}, {'id':'U', 'name':'User Id'}, {'id':'F', 'name':'Fixed Client'}]\r\n \r\n  public settings: Settings;\r\n  symbolMappingList: any[]=[];\r\nconstructor(public snackBar: MatSnackBar, public appSettings: AppSettings, private formBuilder: UntypedFormBuilder,\r\n  public dialog: MatDialog, private _appService: AppService, private _masterService: MasterService, private _masterSecondService: MasterSecondService) {\r\n      this.settings = this.appSettings.settings;\r\n    }\r\n\r\n  ngOnInit() {\r\n      this.getSymbolMappingList();\r\n      this.bindFormControls();\r\n  }\r\n\r\n  bindFormControls() {\r\n    this.itemForm = this.formBuilder.group({\r\n      'name': ['', Validators.required],\r\n      'type': ['', Validators.required],\r\n      'broker': ['', Validators.required],\r\n      'partyAs': ['', Validators.required],\r\n      'clientAc': ['', Validators.required],\r\n      'id': [0]\r\n    });\r\n    this.itemForm.get('partyAs').valueChanges.subscribe((partyAsValue) => {\r\n      if (partyAsValue === 'C' || partyAsValue === 'U') {\r\n        // If 'partyAs' is 'C' or 'U', hide 'clientAc' and remove validation\r\n        this.itemForm.get('clientAc').clearValidators();\r\n        this.itemForm.get('clientAc').disable();\r\n      } else if (partyAsValue === 'F') {\r\n        // If 'partyAs' is 'F', show 'clientAc' and set it as required\r\n        this.itemForm.get('clientAc').setValidators(Validators.required);\r\n        this.itemForm.get('clientAc').enable();\r\n      }\r\n      // Update the 'clientAc' validation\r\n      this.itemForm.get('clientAc').updateValueAndValidity();\r\n    });\r\n   this.initialApiCalls();\r\n}\r\n\r\n  agGridOptions: any = {\r\n      defaultColDef: {\r\n        filter: true,\r\n        flex: 1,\r\n        sortable: true,\r\n        wraptext: true,\r\n        resizable: true\r\n      }\r\n  }\r\n\r\n  columnDefs = [\r\n      {\r\n        headerName: 'Action', field: 'fileIcon', cellRenderer: this.actionCellRenderer, minWidth: 80, filter: false,\r\n        maxWidth: 110, resizable: true\r\n      },\r\n      { headerName: 'Name', field: 'name', filter: true, sorting: true, resizable: true },\r\n      { headerName: 'Broker', field: 'broker', filter: true, sorting: true, resizable: true },\r\n    { headerName: 'Type', field: 'type', filter: true, sorting: true, resizable: true },  \r\n    { headerName: 'PartyAs', field: 'partyAs', filter: true, sorting: true, resizable: true },  \r\n    { headerName: 'ClientAc', field: 'clientAc', filter: true, sorting: true, resizable: true },  \r\n  ];\r\n\r\n  initialApiCalls() {\r\n    forkJoin([this._appService.tradeFileType(), this._masterService.getAccount()]).pipe(map(response => {\r\n      this.typeList = response[0];\r\n     this.filteredTypeList = response[0];\r\n      this.brokerList = response[1];\r\n    this.filterBrokerList = response[1];\r\n    this.clientList = response[1];\r\n    this.filterClientList = response[1];\r\n    })).subscribe(res => {\r\n    });\r\n  }\r\n\r\n  onInputChange(event: any) {\r\n    const searchInput = event.target.value.toLowerCase();\r\n\r\n    this.filteredTypeList = this.typeList.filter((data) => {\r\n      const prov = data.itemCode.toLowerCase();\r\n      return prov.includes(searchInput);\r\n    });\r\n\r\n    if (searchInput === '') {\r\n      this.filteredTypeList = [...this.typeList];\r\n    }\r\n  }\r\n\r\n  onInputBrokerChange(event: any) {\r\n    const searchInput = event.target.value.toLowerCase();\r\n  \r\n    this.filterBrokerList = this.brokerList.filter((data) => {\r\n      const prov = data.name.toLowerCase();\r\n      return prov.includes(searchInput);\r\n    });\r\n  \r\n    if (searchInput === '') {\r\n      this.filterBrokerList = [...this.brokerList];\r\n    }\r\n  }\r\n\r\n  onInputClientChange(event: any) {\r\n    const searchInput = event.target.value.toLowerCase();\r\n  \r\n    this.filterClientList = this.clientList.filter((data) => {\r\n      const prov = data.name.toLowerCase();\r\n      return prov.includes(searchInput);\r\n    });\r\n  \r\n    if (searchInput === '') {\r\n      this.filterClientList = [...this.clientList];\r\n    }\r\n  }\r\n\r\n  public onSubmit(values: Object): void {\r\n    var body = this.itemForm.value;\r\n\r\n    if (this.itemForm.valid) {\r\n      //const body = JSON.stringify(addFormData);\r\n      this._masterSecondService.saveTradeFileType(body).subscribe(result => {\r\n        if(result.isSuccess){\r\n          console.log(\"result\", result);\r\n          this.getSymbolMappingList();\r\n          this.resetForm(this.itemForm);\r\n        } else {\r\n          this.showToaster(result.message, true);\r\n        }\r\n      }, err => {\r\n        console.log(err);\r\n      });\r\n    }\r\n  }\r\n\r\n  showToaster(message, isError = false) {\r\n    const panelClass = isError ? ['red-text'] : undefined;\r\n    const label = isError ? \"Error\" : \"Success\";\r\n    const time = isError? 600000 : 300000;\r\n  \r\n    this.snackBar.open(message, label, {\r\n      duration: time,\r\n      panelClass: panelClass,\r\n    });\r\n  }\r\n\r\ngetSymbolMappingList() {\r\n  this._masterSecondService.getTradeFileList().subscribe((results) => {\r\n       this.symbolMappingList = results;       \r\n      });\r\n  }\r\n\r\n  public actionCellRenderer(params: any) {\r\n      let eGui = document.createElement(\"div\");\r\n      let editingCells = params.api.getEditingCells();\r\n      let isCurrentRowEditing = editingCells.some((cell: any) => {\r\n        return cell.rowIndex === params.node.rowIndex;\r\n      });\r\n      eGui.innerHTML = `<button class=\"material-icons action-button-edit\" data-action=\"edit\">edit </button>\r\n                        <button class=\"material-icons action-button-red\" delete data-action=\"delete\">delete</button>`;    \r\n      return eGui;\r\n  }\r\n\r\n  onGridClick(params: any) {\r\n    if (params.event.target.dataset.action == \"edit\")\r\n    {\r\n      this.openExchangeDialog(params.data.id);\r\n    }\r\n    if (params.event.target.dataset.action == \"delete\")\r\n    {\r\n      const dialogRef = this.dialog.open(ConfirmationDialog, {\r\n        data: {\r\n          message: 'Do you really want to delete this record?',\r\n          buttonText: {\r\n            ok: 'Yes',\r\n            cancel: 'No'\r\n          }\r\n        }\r\n      });\r\n\r\n      dialogRef.afterClosed().subscribe((confirmed: boolean) => {\r\n        if (confirmed) {\r\n          this._masterSecondService.deleteTradeFileType(params.data.id).subscribe((res) => {\r\n            this.getSymbolMappingList();\r\n          });\r\n        }\r\n      });\r\n\r\n\r\n    }\r\n  }\r\n\r\n  public openExchangeDialog(id) {\r\n    this._masterSecondService.getTradeFileId(id).subscribe((response) => {\r\n      var res = response;\r\n      this.itemForm.get('id').setValue(res.id);\r\n      this.itemForm.get('name').setValue(res.name);\r\n      this.itemForm.get('type').setValue(res.type);\r\n      this.itemForm.get('broker').setValue(res.broker);\r\n      this.itemForm.get('partyAs').setValue(res.partyAs);\r\n      this.itemForm.get('clientAc').setValue(res.clientAc);      \r\n    });\r\n  } \r\n\r\n  resetForm(myForm) {\r\n    myForm.reset();\r\n    myForm.get('id').setValue(0);\r\n    Object.keys(myForm.controls).forEach(key => {\r\n      myForm.get(key).setErrors(null);\r\n    });\r\n  }\r\n\r\n  close() {\r\n    this.resetForm(this.itemForm);\r\n  }\r\n}\r\n","<div class=\"row\">\n    <div fxLayout=\"row\" class=\"mt-2 flex-end symbol-mapping\">\n        <form [formGroup]=\"itemForm\" (ngSubmit)=\"onSubmit(itemForm.value)\" fxLayout=\"row wrap\" class=\"user-form\">\n            <div class=\"white-block pb-5\">\n                <div class=\"tab-party-details-parent\">\n                    <div fxFlex=\"100\" fxFlex.gt-sm=\"15\" fxFlex.sm=\"30\">\n                        <mat-form-field appearance=\"outline\">\n                          <mat-label>Name</mat-label>\n                          <input matInput autocomplete=\"off\" placeholder=\"Name\" formControlName=\"name\" type=\"text\">\n                          <mat-error *ngIf=\"itemForm.controls.name.errors?.required\">Name is required</mat-error>\n                        </mat-form-field>\n                      </div>\n                    <div fxFlex=\"100\" fxFlex.gt-sm=\"15\" fxFlex.sm=\"50\">\n                        <div class=\"dropdown-wrapper\">\n                            <mat-form-field class=\"select-slab-mat\" appearance=\"outline\">\n                              <mat-label>Select Type</mat-label>\n                              <mat-select #selectType placeholder=\"Select Type\" panelClass=\"custom-select-panel\" formControlName=\"type\">\n                                <input class=\"milti-search-box\" #multiUserSearch type=\"text\" autocomplete=\"off\" matInput placeholder=\"Search Type\" (input)=\"onInputChange($event)\" />\n                                <mat-option *ngFor=\"let option of filteredTypeList\" [value]=\"option.id\">\n                                  {{ option.name }}\n                                </mat-option>\n                              </mat-select>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\n                        <div class=\"dropdown-wrapper\">\n                          <mat-form-field class=\"select-slab-mat\" appearance=\"outline\">\n                            <mat-label>Select Broker</mat-label>\n                            <mat-select #select placeholder=\"Select Broker\" panelClass=\"custom-select-panel\" formControlName=\"broker\">\n                              <input class=\"milti-search-box\" #multiUserSearch type=\"text\" autocomplete=\"off\" matInput placeholder=\"Search Broker\" (input)=\"onInputBrokerChange($event)\" />\n                              <mat-option *ngFor=\"let option of filterBrokerList\" [value]=\"option.id\">\n                                {{ option.name }}\n                              </mat-option>\n                            </mat-select>\n                          </mat-form-field>\n                        </div>\n                      </div>\n                      <div fxFlex=\"100\" fxFlex.gt-sm=\"12\" fxFlex.sm=\"50\">\n                        <div class=\"dropdown-wrapper\">\n                          <mat-form-field class=\"select-slab-mat\" appearance=\"outline\">\n                            <mat-label>Select PartyAs</mat-label>\n                            <mat-select #selectPartyAs placeholder=\"Select PartyAs\" panelClass=\"custom-select-panel\" formControlName=\"partyAs\">\n                            <mat-option *ngFor=\"let option of partyAs\" [value]=\"option.id\">\n                                {{ option.name }}\n                                </mat-option> \n                            </mat-select>\n                          </mat-form-field>\n                        </div>\n                      </div>\n                      <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\">\n                        <div class=\"dropdown-wrapper\">\n                          <mat-form-field class=\"select-slab-mat\" appearance=\"outline\">\n                            <mat-label>Select Client</mat-label>\n                            <mat-select #selectClientAs placeholder=\"Select Client\" panelClass=\"custom-select-panel\" formControlName=\"clientAc\">\n                              <input class=\"milti-search-box\" #multiUserSearch type=\"text\" autocomplete=\"off\" matInput placeholder=\"Search Client\" (input)=\"onInputClientChange($event)\" />\n                              <mat-option *ngFor=\"let option of filterClientList\" [value]=\"option.id\">\n                                {{ option.name }}\n                              </mat-option>\n                            </mat-select>\n                          </mat-form-field>\n                        </div>\n                      </div>\n                      <div fxFlex=\"100\" fxFlex.gt-sm=\"15\" space-between fxFlex.sm=\"50\">\n                        <button mat-raised-button color=\"primary\" class=\"uppercase save-btn\" [disabled]=\"!itemForm.valid\" type=\"submit\">Save</button> \n                        <button type=\"button\" mat-raised-button color=\"warn\" (click)=\"close()\">Cancel</button>            \n                    </div>\n                </div>\n            </div>\n        </form>\n    </div>\n    <div class=\"col-xl-12 mt-2\">\n        <ag-grid-angular style=\" height: 535px;\"\n                         class=\"ag-theme-material\"\n                           [rowHeight]=\"31\"\n                         [rowData]=\"symbolMappingList\"\n                         [pagination]=\"true\"\n                         [columnDefs]=\"columnDefs\"\n                         [defaultColDef]=\"agGridOptions.defaultColDef\"\n                         (cellClicked)=\"onGridClick($event)\"\n                         headerHeight=\"34\">\n        </ag-grid-angular>\n      </div>\n  </div>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormControl, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MasterService } from '../../master.service';\r\nimport { Transporter } from '../transporter.model'\r\n\r\n\r\n@Component({\r\n    selector: 'add-transporter-dialog',\r\n    templateUrl: './add-transporter.component.html',\r\n    styleUrls: ['./add-transporter.component.scss']\r\n})\r\n\r\nexport class AddTransporterComponent implements OnInit {\r\n    public transporterForm:UntypedFormGroup;\r\n\r\n    constructor(private formBuilder: UntypedFormBuilder, public dialogRef: MatDialogRef<AddTransporterComponent>, @Inject(MAT_DIALOG_DATA) public user: Transporter, private _appService: MasterService) {\r\n        console.log(this.dialogRef);\r\n    }\r\n\r\n    bindFormControls() {\r\n        this.transporterForm = this.formBuilder.group({\r\n          'Name': ['', Validators.required],\r\n          'Phone': ['', Validators.required],\r\n          'Address' : [''],\r\n          'City' : [''],\r\n          'Refrence' : [''],\r\n          'Email': ['', Validators.compose([Validators.required, emailValidator])],\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.bindFormControls();\r\n        //this.initialApiCalls();\r\n    }\r\n\r\n    public onSubmit(values:Object):void {\r\n        if (this.transporterForm.valid) {\r\n            let addFormData = {\r\n                \"Name\": this.transporterForm.get('name').value,\r\n                \"Phone\": this.transporterForm.get('phone').value,\r\n                \"Address\": this.transporterForm.get('address').value,\r\n                \"City\": this.transporterForm.get('city').value,\r\n                \"Refrence\": this.transporterForm.get('refrence').value,                   \r\n                \"Email\": this.transporterForm.get('email').value,\r\n            }\r\n            if(this.user.id){\r\n              addFormData['id'] = this.user.id;\r\n            }\r\n            const body = JSON.stringify(addFormData);\r\n            this._appService.saveTransporter(body).subscribe(result => {\r\n              console.log(\"result\", result);\r\n              this.dialogRef.close();\r\n            }, err=>{\r\n              console.log(err);\r\n            });\r\n        }\r\n    }\r\n\r\n    close(): void {\r\n        this.dialogRef.close();\r\n    }\r\n}\r\n\r\nexport function emailValidator(control: UntypedFormControl): {[key: string]: any} {\r\n    var emailRegexp = /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$/;    \r\n    if (control.value && !emailRegexp.test(control.value)) {\r\n        return {invalidEmail: true};\r\n    }\r\n}","<h2 class=\"heading\">Add Transporter</h2> \r\n<a (click)=\"close()\" class=\"close-btn\">\r\n    <span class=\"material-symbols-outlined\">\r\n      <mat-icon>close</mat-icon>\r\n    </span>\r\n</a>\r\n<form [formGroup]=\"transporterForm\" (ngSubmit)=\"onSubmit(transporterForm.value)\" fxLayout=\"row wrap\" class=\"user-form\">\r\n    <div class=\"tab-party-details-parent\">\r\n        <div fxFlex=\"100\" fxFlex.gt-sm=\"25\" fxFlex.sm=\"50\">\r\n            <mat-form-field appearance=\"outline\">\r\n                <mat-label>Name</mat-label>\r\n                <input matInput autocomplete=\"off\" placeholder=\"Name\" formControlName=\"Name\" type=\"text\">\r\n                <mat-error *ngIf=\"transporterForm.controls.Name.errors?.required\">Name is required</mat-error>                \r\n            </mat-form-field> \r\n        </div>\r\n        <div fxFlex=\"100\" fxFlex.gt-sm=\"25\" fxFlex.sm=\"50\">\r\n            <mat-form-field appearance=\"outline\">\r\n                <mat-label>Phone</mat-label>\r\n                <input matInput autocomplete=\"off\" placeholder=\"Phone\" formControlName=\"Phone\" type=\"text\">\r\n                <mat-error *ngIf=\"transporterForm.controls.Phone.errors?.required\">Phone is required</mat-error>                \r\n            </mat-form-field> \r\n        </div>\r\n        <div fxFlex=\"100\" fxFlex.gt-sm=\"25\" fxFlex.sm=\"50\">\r\n            <mat-form-field appearance=\"outline\">\r\n                <mat-label>Refrence</mat-label>\r\n                <input matInput autocomplete=\"off\" placeholder=\"Refrence\" formControlName=\"Refrence\" type=\"text\">\r\n                <mat-error *ngIf=\"transporterForm.controls.Refrence.errors?.required\">Refrence is required</mat-error>                \r\n            </mat-form-field> \r\n        </div>\r\n        <div fxFlex=\"100\" fxFlex.gt-sm=\"25\" fxFlex.sm=\"50\">\r\n            <mat-form-field appearance=\"outline\">\r\n                <mat-label>Email</mat-label>\r\n                <input matInput autocomplete=\"off\" placeholder=\"Email\" formControlName=\"Email\" type=\"text\">\r\n                <mat-error *ngIf=\"transporterForm.controls.Email.errors?.required\">Email is required</mat-error>                \r\n            </mat-form-field> \r\n        </div>\r\n        <div fxFlex=\"100\" fxFlex.gt-sm=\"25\" fxFlex.sm=\"50\">\r\n            <mat-form-field appearance=\"outline\">\r\n                <mat-label>City</mat-label>\r\n                <input matInput autocomplete=\"off\" placeholder=\"City\" formControlName=\"City\" type=\"text\">\r\n                <mat-error *ngIf=\"transporterForm.controls.City.errors?.required\">City is required</mat-error>                \r\n            </mat-form-field> \r\n        </div>\r\n        <div fxFlex=\"100\">\r\n            <mat-form-field appearance=\"outline\">\r\n                <mat-label>Address</mat-label> \r\n                <textarea matInput placeholder=\"Enter address\" formControlName=\"Address\"></textarea> \r\n            </mat-form-field>\r\n        </div>\r\n    </div>\r\n    <div fxFlex=\"100\" class=\"mt-2 text-center space-between-btns\">\r\n        <button mat-raised-button color=\"warn\" (click)=\"close()\">Cancel</button>            \r\n        <button mat-raised-button color=\"primary\" class=\"uppercase\" type=\"submit\">Save</button> \r\n    </div>\r\n</form>","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\r\nimport { AppSettings } from \"src/app/app.settings\";\r\nimport { Settings } from \"src/app/app.settings.model\";\r\nimport { MasterService } from \"../master.service\";\r\nimport { AddTransporterComponent } from \"./transporter-dialog/add-transporter.component\"\r\n\r\n\r\n@Component({\r\n  selector: 'app-blank',\r\n  templateUrl: './transporter.component.html',\r\n  styleUrls: ['./transporter.component.scss']\r\n})\r\nexport class TransporterComponent implements OnInit { \r\n\r\n@ViewChild(DatatableComponent) table: DatatableComponent;\r\n  editing = {};\r\n  rows = [];\r\n  temp = [];\r\n  selected = [];\r\n  loadingIndicator: boolean = true;\r\n  reorderable: boolean = true;\r\n  public settings: Settings;\r\n  transporterList: any;\r\n  constructor(public appSettings: AppSettings, private _masterService: MasterService, public dialog: MatDialog) {\r\n    this.settings = this.appSettings.settings;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getTransporterList();\r\n  }\r\n\r\n  agGridOptions: any = {\r\n    defaultColDef: {\r\n      filter: true,\r\n      flex: 1,\r\n      sortable: true,\r\n      wraptext: true,\r\n      resizable: true\r\n    }\r\n  }\r\n\r\n\r\n  columnDefs = [\r\n    {\r\n      headerName: 'Action', field: 'fileIcon', cellRenderer: this.actionCellRenderer, minWidth: 80,\r\n      maxWidth: 110, resizable: true\r\n    },\r\n    { headerName: 'Name', field: 'name', filter: true, sorting: true, resizable: true },\r\n    { headerName: 'Phone', field: 'phone', filter: true, sorting: true, resizable: true },\r\n    { headerName: 'Address', field: 'address', filter: true, sorting: true, resizable: true },\r\n    { headerName: 'City', field: 'city', filter: true, sorting: true, resizable: true },\r\n    { headerName: 'Refrence', field: 'refrence', filter: true, sorting: true, resizable: true },\r\n    { headerName: 'Email', field: 'email', filter: true, sorting: true, resizable: true }\r\n  ];\r\n\r\n  getTransporterList() {\r\n    this._masterService.getTransporter().subscribe((results) => {\r\n      this.transporterList = results;\r\n    });\r\n  }\r\n\r\n  public actionCellRenderer(params: any) {\r\n    let eGui = document.createElement(\"div\");\r\n    let editingCells = params.api.getEditingCells();\r\n    let isCurrentRowEditing = editingCells.some((cell: any) => {\r\n      return cell.rowIndex === params.node.rowIndex;\r\n    });\r\n    eGui.innerHTML = `<button class=\"material-icons action-button-edit\" data-action=\"edit\">edit </button>\r\n                      <button class=\"material-icons action-button-red\" delete data-action=\"delete\">delete</button>`;\r\n\r\n    return eGui;\r\n  }\r\n\r\n  onGridClick(params: any) {\r\n    if (params.event.target.dataset.action == \"edit\") { \r\n      this._masterService.getAccountById(params.data.id).subscribe((res)=>{\r\n        this.openTransporterDialog(res);\r\n      });\r\n     }\r\n    if (params.event.target.dataset.action == \"delete\") { \r\n      this._masterService.deleteAccountById(params.data.id).subscribe((res)=>{\r\n        this.getTransporterList();\r\n      });\r\n     }\r\n  }\r\n\r\n  public openTransporterDialog(user) {\r\n    let dialogRef = this.dialog.open(AddTransporterComponent, {\r\n      data: user\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(user => {\r\n      this.getTransporterList();\r\n      if (user) {\r\n       /* (user.id) ? this.updateUser(user) : this.addUser(user);*/\r\n      }\r\n    });\r\n  }\r\n\r\n}","\r\n<div class=\"row\">\r\n    <div fxLayout=\"row\" class=\"mt-2 flex-end\">\r\n      <button mat-raised-button color=\"accent\" (click)=\"openTransporterDialog(null)\">\r\n        <mat-icon>local_shipping</mat-icon> Add Transporter\r\n      </button>  \r\n    </div>\r\n    <div class=\"col-xl-12 mt-2\">\r\n      <ag-grid-angular style=\" height: 535px;\"\r\n                       class=\"ag-theme-alpine\"\r\n                       [rowData]=\"transporterList\"\r\n                       [pagination]=\"true\"\r\n                       [columnDefs]=\"columnDefs\"\r\n                       [defaultColDef]=\"agGridOptions.defaultColDef\"\r\n                       (cellClicked)=\"onGridClick($event)\">\r\n      </ag-grid-angular>\r\n    </div>\r\n  </div>\r\n  \r\n  ","export class Transporter {\r\n    id: number\r\n    name: string\r\n    phone: number\r\n    address: string\r\n    city: number\r\n    refrence: string\r\n    email: string\r\n}"],"names":["QueryList","Validators","FormControl","MatAutocompleteTrigger","MAT_DIALOG_DATA","forkJoin","map","startWith","CommonUtility","i0","acGroupObj_r25","acHeadObj_r26","cityObj_r27","AddAccountComponent","constructor","formBuilder","_masterSeconedService","dialogRef","user","_masterService","dialog","_appService","snackBar","defaultColDef","filter","flex","sortable","wraptext","resizable","bindFormControls","selectedAccountId","id","ngAfterViewInit","subscription","closed","unsubscribe","trigger","triggerCollection","toArray","panelClosingActions","subscribe","e","source","acGroupCtrl","dirty","setValue","acHeadCtrl","cityCtrl","personalForm","group","required","compose","emailValidator","handleTabChange","event","index","isSelfShareTabActive","isBrokerageTabActive","isInterestTabActive","isFileCodeTabActive","resetForm","myForm","reset","get","Object","keys","controls","forEach","key","setErrors","onInputBrokerChange","searchInput","target","value","toLowerCase","filterBrokerList","brokerList","data","prov","name","includes","bindFilterFntoList","filteredCity","valueChanges","pipe","cityObj","_filterCity","cityList","slice","filteredacGroup","acGroupObj","_filterACGroup","acGroupList","filteredacHead","acHeadObj","_filterACHead","acHeadList","initialApiCalls","getAcGoup","getAcHead","getCityList","getTaxType","getAccount","getApplyOnFileShareDDL","getAccounts","response","acList","applyOnFileShare","res","getValuesInEditMode","acGroup","find","obj","accountGroupId","acHead","accountHeadId","optedCity","cityId","bindValuesInEditMode","console","log","shortCode","formatNumber","openingBal","email","panNo","gstinno","phone","address","telegramNo","telegramId","brokerId","drCr","applyTax","applyFutureCutBrok","applyOptionCutBrok","onGroupChange","onHeadChange","ngOnInit","filterValue","state","city","getAcGroupId","toLocaleLowerCase","getCityId","getAcHeadId","onSubmit","values","Number","body","CityId","valid","saveAccount","result","showToaster","message","formSubmitted","err","Label","open","duration","close","selectors","viewQuery","ctx","control","emailRegexp","test","invalidEmail","AddSetupDetailsComponent","ConfirmationDialog","LockBrokerageComponent","ViewItemGroupComponent","BrokerageSetupComponent","datePipe","appSettings","_masterSecondService","minWidth","suppressRowHoverHighlight","headerName","field","cellRenderer","actionCellRenderer","sorting","valueFormatter","params","intradayBrokRate","deliveryBrokRate","settings","fetchDropdownData","getBrokerageSetupList","onGridReady","areRequiredValuesSelected","accountIds","val","req","itemGroupIds","transform","fromDt","toDt","instrumentType","results","searchedData","brokeragesetupList","getBrokerageAddValidation","itemGroupId","accounts","fromDate","toDate","toPromise","error","isError","panelClass","undefined","label","time","getBranchDDLList","getInstrumentList","getItemGroupNameList","getCompany","branchList","filteredProviders","instrumentList","accountList","filteredAccountList","itemGroupIdList","filteredItemGroup","companydetails","Date","finBeginDt","finEndDt","eGui","document","createElement","editingCells","api","getEditingCells","isCurrentRowEditing","some","cell","rowIndex","node","innerHTML","onInputChange","onInputItemGroupChange","onInputAccountListChange","branchAllSelection","branchAllSellected","isAllChecked","select","options","first","selected","item","deselect","length","onBranchChange","accountAllSelection","selectAccount","onKey","search","option","startsWith","isLastIndex","branchIds","getFilterBranchAccounts","addBrokerage","openSlabDetailsDialog","isValid","selectedSlabId","isEditMode","afterClosed","openModifySetupDialog","onFromDateChange","openEditBrokerageDetails","editParms","onGridClick","dataset","action","buttonText","ok","cancel","confirmed","deleteBrokerageSetup","isSuccess","viewAllItemGroups","AddSharingSetupComponent","LockSharingSetupComponent","SharingSetupComponent","maxWidth","exchangeIds","getSharingSetupList","branchId","exchange","getSharingAddValidation","getExchangeName","exchangeList","filteredExchangeList","onInputExchangeChange","exchangeAllSelection","selectExchange","deleteSubBrokerageSetup","SubAddSetupDetailsComponent","SubLockBrokerageComponent","SubBrokerageSetupComponent","getSubBrokeageList","getSubBrokerageAddValidation"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}