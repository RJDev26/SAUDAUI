{"version":3,"file":"src_app_Forms_Logs_logs_module_ts.js","mappings":"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","sources":["./src/app/Forms/Logs/logs.module.ts","./src/app/Forms/Logs/logs.service.ts","./src/app/Forms/Logs/logs/logs.component.ts","./src/app/Forms/Logs/logs/logs.component.html","./src/app/Forms/Logs/logs/missing-trade/missing-trade.component.ts","./src/app/Forms/Logs/logs/missing-trade/missing-trade.component.html","./src/app/Forms/Logs/logs/new-account-log/new-account-log.component.ts","./src/app/Forms/Logs/logs/new-account-log/new-account-log.component.html"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule, DatePipe } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { InMemoryWebApiModule } from 'angular-in-memory-web-api';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { PipesModule } from '../../theme/pipes/pipes.module';\r\nimport { AgGridModule } from 'ag-grid-angular';\r\nimport { LogsComponent } from './logs/logs.component';\r\nimport { NewAccountLogComponent } from './logs/new-account-log/new-account-log.component';\r\nimport { MissingTradeComponent } from './logs/missing-trade/missing-trade.component';\r\nimport { MAT_DATE_LOCALE } from '@angular/material/core';\r\n\r\nexport const routes: Routes = [\r\n  { path: '', component: LogsComponent, pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule,\r\n    RouterModule.forChild(routes),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgxPaginationModule,\r\n    SharedModule,\r\n    PipesModule,\r\n    AgGridModule  \r\n  ],\r\n  declarations: [\r\n    LogsComponent,\r\n    NewAccountLogComponent,\r\n    MissingTradeComponent,\r\n  ],\r\n  providers: [\r\n    DatePipe,\r\n    { provide: MAT_DATE_LOCALE, useValue: 'en-GB' }\r\n  ],\r\n})\r\nexport class LogsModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LogsService {\r\n  headers = new HttpHeaders()\r\n  .set('content-type', 'application/json')\r\n  .set('Access-Control-Allow-Origin', '*')\r\n  .set('Access-Control-Allow-Methods', 'GET,POST,OPTIONS,DELETE,PUT');\r\n  \r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  logType(): Observable<any> {\r\n    return this.httpClient.get<any>(environment.apiBaseUrl + 'Common/logType', { headers: this.headers })\r\n  }\r\n\r\n  getImportLog(data):Observable<any>{\r\n    return this.httpClient.post<any>(environment.apiBaseUrl + 'Import/getImportLog', data, {headers:this.headers});\r\n  }\r\n\r\n  getMissingSymbol(id: number): Observable<any> {\r\n    return this.httpClient.get<any>(environment.apiBaseUrl + 'Import/getMissingSymbol/' + id, { headers: this.headers })\r\n  }\r\n\r\n  getNewAccount(id: number): Observable<any> {\r\n    return this.httpClient.get<any>(environment.apiBaseUrl + 'Import/getNewAccount/' + id, { headers: this.headers })\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, OnDestroy, Inject, ViewChild, ChangeDetectorRef } from '@angular/core';\r\nimport { AppSettings } from \"src/app/app.settings\";\r\nimport { Settings } from \"src/app/app.settings.model\";\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSelect } from '@angular/material/select';\r\nimport { MatOption } from '@angular/material/core';\r\nimport { AppService } from 'src/app/service/app.service';\r\nimport { ConfirmationDialog } from '../../Dialog/confirmation-dialog/confirmation-dialog.component';\r\nimport { CommonUtility } from 'src/app/shared/common-utility';\r\nimport { Subscription, forkJoin, map } from 'rxjs';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MasterService } from '../../Master/master.service';\r\nimport { MasterSecondService } from '../../Master/master-second.service';\r\nimport { LogsService } from '../logs.service';\r\nimport { MissingTradeComponent } from './missing-trade/missing-trade.component';\r\nimport { NewAccountLogComponent } from './new-account-log/new-account-log.component';\r\nimport { AuthenticationService } from '../../Login/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-logs',\r\n  templateUrl: './logs.component.html',\r\n  styleUrls: ['./logs.component.scss']\r\n})\r\nexport class LogsComponent implements OnInit, OnDestroy {\r\n  @ViewChild('select') select: MatSelect;\r\n  @ViewChild('selectAccount') selectAccount: MatSelect;\r\n  public settings: Settings;\r\n  slabId: number;\r\n  slabList: any[];\r\n  fromDt: any = new Date();\r\n  toDt: any = new Date();\r\n  accountList: any[];\r\n  branchList: any[];\r\n  instrumentList: any[];\r\n  instrumentType: any;\r\n  itemGroupIds: any;\r\n  filteredItemGroup: any;\r\n  itemGroupIdList: any;\r\n\r\n  searchedData: any;\r\n  branchIds: Array<string>;\r\n  accountIds: any[];\r\n  filteredProviders: any[];\r\n  filteredAccountList: any[];\r\n  brokeragesetupList: any = [];\r\n  branchAllSellected: boolean = false;\r\n  userData: boolean;\r\n  userDataSubscription$: Subscription;\r\n\r\n\r\n  constructor(private cdr: ChangeDetectorRef, private authService: AuthenticationService, private datePipe: DatePipe, public snackBar: MatSnackBar, public appSettings: AppSettings, private _appService: AppService, public dialog: MatDialog, private _masterService: MasterService, private _masterSecondService: MasterSecondService, private _logSerice: LogsService) {\r\n    this.settings = this.appSettings.settings;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.fetchDropdownData();\r\n    this.getBrokerageSetupList();\r\n    this.userDataSubscription$ = this.authService.authChanged$.subscribe((res) => {\r\n      this.userData = res;\r\n      console.log(res);\r\n    }, (err)=>{ console.log('err', err);});\r\n  }\r\n  ngOnDestroy() {\r\n    this.userDataSubscription$.unsubscribe();\r\n  }\r\n\r\n  agGridOptions: any = {\r\n    defaultColDef: {\r\n      filter: true,\r\n       flex:1,\r\n      sortable: true,\r\n      wraptext: true,\r\n      resizable: true,\r\n      minWidth: 100,\r\n    \r\n    },\r\n    suppressRowHoverHighlight: true,\r\n   \r\n    //suppressSizeToFit: true,\r\n    \r\n  }\r\n  onGridReady(event) { }\r\n\r\n  columnDefs = [\r\n    { headerName: 'TotalRows',  field: 'totalRows',  },\r\n    { headerName: 'ValidatedRows',  field: 'validatedRows',  },\r\n    { field: 'status',   headerName: 'Status',  valueFormatter: params => CommonUtility.formatNumber(params.data.intradayBrokRate) },\r\n    { headerName: 'Filename', field: 'fileName', valueFormatter: params => CommonUtility.formatNumber(params.data.deliveryBrokRate)},    \r\n    /*{ headerName: 'HigherSide Only', minWidth: 120, maxWidth: 120, field: 'higherSideOnly',  },*/\r\n    { headerName: 'CreatedBy',   field: 'createdBy',  },\r\n/*    { headerName: 'IntradaySingleSideOnly', field: 'intradaySingleSideOnly',  },*/\r\n    { headerName: 'CreatedDate', field: 'createdDate',   valueFormatter: params => {\r\n      return this.datePipe.transform(params.value, 'dd/MM/yyyy HH:mm:ss');\r\n    } },\r\n    {headerName: 'Show Missing Symbol', field: 'fileIcon', cellRenderer: this.actionCellRenderer, resizable: true, filter: false, minWidth: 200,\r\n    maxWidth: 250},\r\n    {headerName: 'New Account', field: 'fileIcon', cellRenderer: this.actionNewCellRenderer, resizable: true, filter: false}\r\n  ];\r\n\r\n  getBrokerageSetupList() {\r\n    if(this.areRequiredValuesSelected()){\r\n      console.log(this.userData);\r\n      var req = {\r\n        \"logType\": this.branchIds,\r\n        \"fromDt\": this.datePipe.transform(this.fromDt, 'yyyy-MM-dd'),\r\n        \"toDt\": this.datePipe.transform(this.toDt, 'yyyy-MM-dd'),\r\n      };\r\n      this._logSerice.getImportLog(req).subscribe((results) => {\r\n       this.brokeragesetupList = results.data;       \r\n      });\r\n    }\r\n  }\r\n\r\n  async getBrokerageAddValidation(): Promise<string> {\r\n    const accountIds = this.accountIds.filter((val) => val != \"-1\");\r\n    const req = {\r\n      itemGroupId: this.itemGroupIds,\r\n      accounts: accountIds,\r\n      fromDate: this.datePipe.transform(this.fromDt, 'yyyy-MM-dd'),\r\n      toDate: this.datePipe.transform(this.toDt, 'yyyy-MM-dd'),\r\n      instrumentType: this.instrumentType,\r\n    };\r\n  \r\n    try {\r\n      const results = await this._appService.getBrokerageAddValidation(req).toPromise();\r\n  \r\n      if (results.message) {\r\n        this.showToaster(results.message);\r\n        this.searchedData = req;\r\n        this.brokeragesetupList = results.data;\r\n        return results.message;\r\n      } else {\r\n        return results.message;\r\n      }\r\n    } catch (error) {\r\n      // Handle error here\r\n      console.error('Error during validation:', error);\r\n      return '';\r\n    }\r\n  }\r\n\r\n  showToaster(message, isError = false) {\r\n    const panelClass = isError ? ['red-text'] : undefined;\r\n    const label = isError ? \"Error\" : \"Success\";\r\n    const time = isError? 6000 : 3000;\r\n  \r\n    this.snackBar.open(message, label, {\r\n      duration: time,\r\n      panelClass: panelClass,\r\n    });\r\n  }\r\n\r\n  areRequiredValuesSelected(): boolean {\r\n    return this.branchIds && this.fromDt && this.toDt;\r\n  }\r\n\r\n  fetchDropdownData() {\r\n    forkJoin([\r\n      this._logSerice.logType(), \r\n    ]).pipe(map(response => {\r\n      this.branchList = response[0];\r\n      this.filteredProviders = response[0];\r\n    })).subscribe(res => {\r\n      \r\n    });\r\n\r\n    \r\n  }\r\n\r\n  public actionNewCellRenderer(params: any){\r\n    let eGui = document.createElement(\"div\");\r\n    let editingCells = params.api.getEditingCells();\r\n    let isCurrentRowEditing = editingCells.some((cell: any) => {\r\n      return cell.rowIndex === params.node.rowIndex;\r\n    });\r\n    eGui.innerHTML = `<button  class=\"action-missing-trade\" data-action=\"newaccount\">New Account</button>`;\r\n\r\n    return eGui;\r\n  }\r\n\r\n  public actionCellRenderer(params: any) {\r\n    let eGui = document.createElement(\"div\");\r\n    let editingCells = params.api.getEditingCells();\r\n    let isCurrentRowEditing = editingCells.some((cell: any) => {\r\n      return cell.rowIndex === params.node.rowIndex;\r\n    });\r\n    eGui.innerHTML = `<button  class=\"action-missing-trade\" data-action=\"missingtrade\">Show Missing Symbol</button>`;\r\n\r\n    return eGui;\r\n}\r\n\r\n  onInputChange(event: any) {\r\n    const searchInput = event.target.value.toLowerCase();\r\n\r\n    this.filteredProviders = this.branchList.filter((data) => {\r\n      const prov = data.name.toLowerCase();\r\n      return prov.includes(searchInput);\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  onKey(value) {\r\n    this.branchList = this.search(value);\r\n}\r\n\r\n\r\n  search(value: string) {\r\n  let filter = value.toLowerCase();\r\n  return this.branchList.filter(option => option.toLowerCase().startsWith(filter));\r\n}\r\n\r\n  \r\n\r\n  addBrokerage(event: any) { }\r\n\r\n  public async openSlabDetailsDialog(event) {\r\n    // const isValid = await this.getBrokerageAddValidation();\r\n    // if (isValid == '' && event === 'add') {\r\n    //   const dialogRef = this.dialog.open(AddSetupDetailsComponent, {\r\n    //     data: {\r\n    //       selectedSlabId: null,\r\n    //       fromDt: this.fromDt,\r\n    //       toDt: this.toDt,\r\n    //       branchIds: this.branchIds,\r\n    //       accountIds: this.accountIds,\r\n    //       itemGroupIds: this.itemGroupIds,\r\n    //       instrumentType: this.instrumentType,\r\n    //       isEditMode: 0\r\n    //     },\r\n    //   });\r\n    //   dialogRef.afterClosed().subscribe((user) => {\r\n    //     this.getBrokerageSetupList();\r\n    //   });\r\n    // } else if(isValid !== '' && event === 'lock'){\r\n    //   const dialogRef = this.dialog.open(LockBrokerageComponent, {\r\n    //     data: {\r\n    //       selectedSlabId: null,\r\n    //       fromDt: this.fromDt,\r\n    //       toDt: this.toDt,\r\n    //       branchIds: this.branchIds,\r\n    //       accountIds: this.accountIds,\r\n    //       itemGroupIds: this.itemGroupIds,\r\n    //       instrumentType: this.instrumentType,\r\n    //       isEditMode: 0\r\n    //     },\r\n    //   });\r\n    //   dialogRef.afterClosed().subscribe((user) => {\r\n    //     this.getBrokerageSetupList();\r\n    //   });\r\n    // }\r\n  }\r\n\r\n  public openModifySetupDialog() {\r\n    // const dialogRef = this.dialog.open(AddSetupDetailsComponent, {\r\n    //   data: {\r\n    //     selectedSlabId: null,\r\n    //     fromDt: this.fromDt,\r\n    //     toDt: this.toDt,\r\n    //     branchIds: this.branchIds,\r\n    //     accountIds: this.accountIds,\r\n    //     itemGroupIds: this.itemGroupIds,\r\n    //     instrumentType: this.instrumentType,\r\n    //     isEditMode: 1\r\n    //   },\r\n    // });\r\n\r\n    // dialogRef.afterClosed().subscribe((user) => {\r\n    //   this.getBrokerageSetupList();\r\n    // });\r\n  }\r\n\r\n  onFromDateChange() {\r\n    console.log(\"fromDt changed:\", this.fromDt);\r\n  }\r\n\r\n  openEditBrokerageDetails(params) {\r\n    const dialogRef = this.dialog.open(MissingTradeComponent, {\r\n      data: {\r\n        id: params.id\r\n      },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((user) => {\r\n      // this.getBrokerageSetupList();\r\n    });\r\n  }\r\n\r\nonGridClick(params: any) {\r\n  if (params.event.target.dataset.action == \"missingtrade\")\r\n  {\r\n    this.openEditBrokerageDetails(params.data);\r\n\r\n  }\r\n  if (params.event.target.dataset.action == \"newaccount\")\r\n  {\r\n    this.openNewAccountDetails(params.data);\r\n\r\n\r\n  }\r\n}\r\n\r\nopenNewAccountDetails (params) {\r\n  const dialogRef = this.dialog.open(NewAccountLogComponent, {\r\n    data: {\r\n      id: params.id\r\n    },\r\n  });\r\n\r\n  dialogRef.afterClosed().subscribe((user) => {\r\n    // this.getBrokerageSetupList();\r\n  });\r\n}\r\n\r\nviewAllItemGroups(){\r\n  // let dialogRef = this.dialog.open(ViewItemGroupComponent, {\r\n  //   data: { id:this.itemGroupIds }\r\n  // });\r\n\r\n  // dialogRef.afterClosed().subscribe(user => {\r\n   \r\n  // });\r\n}\r\n\r\n}\r\n","<div class=\"row\">\n    <div class=\"mt-2\">\n        <div fxFlex=\"100\" fxFlex.gt-sm=\"15\" fxFlex.sm=\"15\">\n            <div class=\"dropdown-container\">\n              <div class=\"dropdown-wrapper\">\n                <mat-form-field appearance=\"outline\" class=\"calendar\">\n                  <mat-label>From</mat-label>\n                  <input matInput [matDatepicker]=\"picker1\" [(ngModel)]=\"fromDt\" (ngModelChange)=\"onFromDateChange()\">\n                  <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\n                  <mat-datepicker #picker1></mat-datepicker>\n                </mat-form-field>\n              </div>\n            </div>\n          </div>\n          <div fxFlex=\"100\" fxFlex.gt-sm=\"15\" fxFlex.sm=\"15\">\n            <div class=\"dropdown-container\">\n              <div class=\"dropdown-wrapper\">\n                <mat-form-field appearance=\"outline\" class=\"calendar\">\n                    <mat-label>To</mat-label>\n                  <input matInput [matDatepicker]=\"picker2\" placeholder=\"To\" [(ngModel)]=\"toDt\">\n                  <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\n                  <mat-datepicker #picker2></mat-datepicker>\n                </mat-form-field>\n              </div>\n            </div>\n          </div>\n      <div fxFlex=\"100\" fxFlex.gt-sm=\"15\" fxFlex.sm=\"15\">\n        <div class=\"dropdown-container\">\n          <div class=\"dropdown-wrapper\">\n            <mat-form-field class=\"select-slab-mat\" appearance=\"outline\">\n              <mat-label>Select LogType</mat-label>\n              <mat-select #select  [(ngModel)]=\"branchIds\" placeholder=\"Select LogType\" panelClass=\"custom-select-panel\">\n                <input class=\"milti-search-box\" #multiUserSearch type=\"text\" autocomplete=\"off\" matInput placeholder=\"Search LogType\" (input)=\"onInputChange($event)\"/>\n                <mat-option *ngFor=\"let option of filteredProviders\" [value]=\"option.id\">\n                  {{ option.name }}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n          </div>\n        </div>\n      </div>\n      <div fxFlex=\"100\" fxFlex.gt-sm=\"7\" fxFlex.sm=\"7\">\n        <button mat-raised-button color=\"primary\" (click)=\"getBrokerageSetupList()\" [disabled]=\"!areRequiredValuesSelected()\" class=\"search-icon-btn bhaskar-reddy\">\n          <mat-icon>search</mat-icon>\n        </button>\n      </div>\n    </div>\n      <div class=\"col-xl-12 mt-2\">\n        <ag-grid-angular style=\" height: 535px;\"\n                         class=\"ag-theme-material\"\n                         [rowData]=\"brokeragesetupList\"\n                         [pagination]=\"true\"\n                         [rowHeight]=\"31\"\n                         [columnDefs]=\"columnDefs\"\n                         [defaultColDef]=\"agGridOptions.defaultColDef\"\n                         (cellClicked)=\"onGridClick($event)\"\n                         (gridReady)=\"onGridReady($event)\"\n                          headerHeight=\"34\">\n        </ag-grid-angular>\n      </div>\n    </div>  \n  ","import { Component, OnInit, Inject, ViewChild } from '@angular/core';\nimport { FormGroup, UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from '@angular/material/dialog';\nimport { forkJoin, map } from 'rxjs';\nimport { AppSettings } from 'src/app/app.settings';\nimport { AppService } from 'src/app/service/app.service';\nimport { MatSelect } from '@angular/material/select';\nimport { MatOption } from '@angular/material/core';\nimport { ErrorDialog } from '../../../Dialog/confirmation-dialog/error-dialog.component';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MasterService } from 'src/app/Forms/Master/master.service';\nimport { MasterSecondService } from 'src/app/Forms/Master/master-second.service';\nimport { LogsService } from '../../logs.service';\n\n@Component({\n  selector: 'app-missing-trade',\n  templateUrl: './missing-trade.component.html',\n  styleUrls: ['./missing-trade.component.scss']\n})\nexport class MissingTradeComponent implements OnInit {\n  @ViewChild('select') select: MatSelect;\n  public itemGroupNameForm: UntypedFormGroup;\n  public exchangeForm: UntypedFormGroup;\n  applyOnList: any;\n  exchangeList: any;\n  selectedId: any;\n  selectedName: any;\n  accountList: any[];\n  accountIds: Array<string>;\n\n  accountAllSellected: boolean = false;\n  itemGroupList: any[] = [];\n  accountApplyOnList: any[];\n  gridApi: any;\n  isRowSelected: boolean = false; \n  agGridOptions: any = {\n    defaultColDef: {\n      filter: true,\n      flex: 1,\n      sortable: true,\n      wraptext: true,\n      resizable: true,\n      minWidth: 100,\n     \n    },\n    suppressRowHoverHighlight: true,\n  }\n\n  columnDefs = [\n\n    { headerName: 'Symbol Name', field: 'symbolName', filter: true, sorting: true, resizable: true, flex: 1, },\n  ];\n\n  constructor(public appSettings: AppSettings,\n    private formBuilder: UntypedFormBuilder, public dialogRef: MatDialogRef<MissingTradeComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any, private _masterService: MasterService, private _logServices: LogsService,\n    private _masterSecondService: MasterSecondService, public dialog: MatDialog, public snackBar: MatSnackBar) {\n\n    this.selectedId = data.id;\n    if (data.id == null) { this.selectedId = 0; }\n  }\n\n\n\n  checkTaxSelect() {\n    if (this.selectedId == 0) {\n      const dialogRef = this.dialog.open(ErrorDialog, {\n        data: {\n          message: 'Please select or save tax to add account tax',\n          buttonText: {\n            ok: 'OK',\n\n          }\n        }\n\n      });\n    }\n  }\n\n  /* to filter select account dropdown*/\n  onInputChange(event: any) {\n    const searchInput = event.target.value.toLowerCase();\n\n    this.accountList = this.accountList.filter((data) => {\n      const prov = data.name.toLowerCase();\n      return prov.includes(searchInput);\n    });\n  }\n\n\n\n  onGridReady(event) { this.gridApi = event.api; }\n\n  accountAllSelection() {\n    this.accountAllSellected = true;\n    var isAllChecked = this.select.options.first.selected;\n    this.select.options.forEach(\n      (item: MatOption, index) => {\n        if (isAllChecked) { item.select(); }\n        else { item.deselect() }\n\n      }\n    );\n  }\n\n  initialApiCalls() {\n    if (this.selectedId != 0) { this.getItemGroupList(); }\n  }\n\n  getItemGroupList() {\n    this._logServices.getMissingSymbol(this.selectedId).subscribe((res) => {\n      this.itemGroupList = res.data;\n    });\n  }\n\n  ngOnInit() {\n    this.initialApiCalls();\n  }\n\n  close(): void {\n    this.dialogRef.close();\n  }\n}\n","<div class=\"brokerage-setup-item\">\r\n    <h2 class=\"heading\">Missing Symbol</h2>\r\n    <a (click)=\"close()\" class=\"close-btn\">\r\n      <span class=\"material-symbols-outlined\">\r\n        <mat-icon>close</mat-icon>\r\n      </span>\r\n    </a>\r\n    <div class=\"col-xl-12 position-relative\">\r\n              <ag-grid-angular style=\" height: 500px;\"\r\n                            class=\"ag-theme-material\"\r\n                            [rowData]=\"itemGroupList\"\r\n                            [pagination]=\"true\"\r\n                            [rowHeight]=\"31\"\r\n                            [columnDefs]=\"columnDefs\"\r\n                            [defaultColDef]=\"agGridOptions.defaultColDef\"\r\n                            (gridReady)=\"onGridReady($event)\"\r\n                            headerHeight=\"34\">\r\n              </ag-grid-angular>\r\n      </div>\r\n  </div>","import { Component, OnInit, Inject, ViewChild } from '@angular/core';\nimport { FormGroup, UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from '@angular/material/dialog';\nimport { forkJoin, map } from 'rxjs';\nimport { AppSettings } from 'src/app/app.settings';\nimport { AppService } from 'src/app/service/app.service';\nimport { MatSelect } from '@angular/material/select';\nimport { MatOption } from '@angular/material/core';\nimport { ErrorDialog } from '../../../Dialog/confirmation-dialog/error-dialog.component';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MasterService } from 'src/app/Forms/Master/master.service';\nimport { MasterSecondService } from 'src/app/Forms/Master/master-second.service';\nimport { LogsService } from '../../logs.service';\n\n@Component({\n  selector: 'app-new-account-log',\n  templateUrl: './new-account-log.component.html',\n  styleUrls: ['./new-account-log.component.scss']\n})\nexport class NewAccountLogComponent implements OnInit {\n  @ViewChild('select') select: MatSelect;\n  public itemGroupNameForm: UntypedFormGroup;\n  public exchangeForm: UntypedFormGroup;\n  applyOnList: any;\n  exchangeList: any;\n  selectedId: any;\n  selectedName: any;\n  accountList: any[];\n  accountIds: Array<string>;\n\n  accountAllSellected: boolean = false;\n  itemGroupList: any[] = [];\n  accountApplyOnList: any[];\n  gridApi: any;\n  isRowSelected: boolean = false; \n  agGridOptions: any = {\n    defaultColDef: {\n      filter: true,\n      flex: 1,\n      sortable: true,\n      wraptext: true,\n      resizable: true,\n      minWidth: 100,\n     \n    },\n    suppressRowHoverHighlight: true,\n  }\n\n  columnDefs = [\n\n    { headerName: 'Name', field: 'name', filter: true, sorting: true, resizable: true, flex: 1, },\n    { headerName: 'Short Code', field: 'shortCode', filter: true, sorting: true, resizable: true, flex: 1, },\n  ];\n\n  constructor(public appSettings: AppSettings,\n    private formBuilder: UntypedFormBuilder, public dialogRef: MatDialogRef<NewAccountLogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any, private _masterService: MasterService, private _logServices: LogsService,\n    private _masterSecondService: MasterSecondService, public dialog: MatDialog, public snackBar: MatSnackBar) {\n\n    this.selectedId = data.id;\n    if (data.id == null) { this.selectedId = 0; }\n  }\n\n\n\n  checkTaxSelect() {\n    if (this.selectedId == 0) {\n      const dialogRef = this.dialog.open(ErrorDialog, {\n        data: {\n          message: 'Please select or save tax to add account tax',\n          buttonText: {\n            ok: 'OK',\n\n          }\n        }\n\n      });\n    }\n  }\n\n  /* to filter select account dropdown*/\n  onInputChange(event: any) {\n    const searchInput = event.target.value.toLowerCase();\n\n    this.accountList = this.accountList.filter((data) => {\n      const prov = data.name.toLowerCase();\n      return prov.includes(searchInput);\n    });\n  }\n\n\n\n  onGridReady(event) { this.gridApi = event.api; }\n\n  accountAllSelection() {\n    this.accountAllSellected = true;\n    var isAllChecked = this.select.options.first.selected;\n    this.select.options.forEach(\n      (item: MatOption, index) => {\n        if (isAllChecked) { item.select(); }\n        else { item.deselect() }\n\n      }\n    );\n  }\n\n  initialApiCalls() {\n    if (this.selectedId != 0) { this.getItemGroupList(); }\n  }\n\n  getItemGroupList() {\n    this._logServices.getNewAccount(this.selectedId).subscribe((res) => {\n      this.itemGroupList = res.data;\n    });\n  }\n\n  ngOnInit() {\n    this.initialApiCalls();\n  }\n\n  close(): void {\n    this.dialogRef.close();\n  }\n}","<div class=\"brokerage-setup-item\">\r\n    <h2 class=\"heading\">New Account</h2>\r\n    <a (click)=\"close()\" class=\"close-btn\">\r\n      <span class=\"material-symbols-outlined\">\r\n        <mat-icon>close</mat-icon>\r\n      </span>\r\n    </a>\r\n    <div class=\"col-xl-12 position-relative\">\r\n              <ag-grid-angular style=\" height: 500px;\"\r\n                            class=\"ag-theme-material\"\r\n                            [rowData]=\"itemGroupList\"\r\n                            [pagination]=\"true\"\r\n                            [rowHeight]=\"31\"\r\n                            [columnDefs]=\"columnDefs\"\r\n                            [defaultColDef]=\"agGridOptions.defaultColDef\"\r\n                            (gridReady)=\"onGridReady($event)\"\r\n                            headerHeight=\"34\">\r\n              </ag-grid-angular>\r\n      </div>\r\n  </div>"],"names":["ChangeDetectorRef","CommonUtility","forkJoin","map","MissingTradeComponent","NewAccountLogComponent","i0","LogsComponent","constructor","cdr","authService","datePipe","snackBar","appSettings","_appService","dialog","_masterService","_masterSecondService","_logSerice","Date","defaultColDef","filter","flex","sortable","wraptext","resizable","minWidth","suppressRowHoverHighlight","headerName","field","valueFormatter","params","formatNumber","data","intradayBrokRate","deliveryBrokRate","transform","value","cellRenderer","actionCellRenderer","maxWidth","actionNewCellRenderer","settings","ngOnInit","fetchDropdownData","getBrokerageSetupList","userDataSubscription$","authChanged$","subscribe","res","userData","console","log","err","ngOnDestroy","unsubscribe","onGridReady","event","areRequiredValuesSelected","req","branchIds","fromDt","toDt","getImportLog","results","brokeragesetupList","getBrokerageAddValidation","accountIds","val","itemGroupId","itemGroupIds","accounts","fromDate","toDate","instrumentType","toPromise","message","showToaster","searchedData","error","isError","panelClass","undefined","label","time","open","duration","logType","pipe","response","branchList","filteredProviders","eGui","document","createElement","editingCells","api","getEditingCells","isCurrentRowEditing","some","cell","rowIndex","node","innerHTML","onInputChange","searchInput","target","toLowerCase","prov","name","includes","onKey","search","option","startsWith","addBrokerage","openSlabDetailsDialog","openModifySetupDialog","onFromDateChange","openEditBrokerageDetails","dialogRef","id","afterClosed","user","onGridClick","dataset","action","openNewAccountDetails","viewAllItemGroups","selectors","viewQuery","ctx"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}