{"version":3,"file":"src_app_Forms_Entry_entry_module_ts.js","mappings":"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","sources":["./src/app/Forms/Entry/Voucher/voucher.component.ts","./src/app/Forms/Entry/Voucher/voucher.component.html","./src/app/Forms/Entry/entry.module.ts","./src/app/Forms/Entry/trade-contract/trade-contract.component.ts","./src/app/Forms/Entry/trade-contract/trade-contract.component.html"],"sourcesContent":["import { Component, OnInit, Inject, ViewChild } from '@angular/core';\r\nimport { AppSettings } from \"src/app/app.settings\";\r\nimport { Settings } from \"src/app/app.settings.model\";\r\n\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSelect } from '@angular/material/select';\r\nimport { MatOption } from '@angular/material/core';\r\nimport { AppService } from 'src/app/service/app.service';\r\nimport { ConfirmationDialog } from '../../Dialog/confirmation-dialog/confirmation-dialog.component';\r\nimport { CommonUtility } from 'src/app/shared/common-utility';\r\nimport { combineLatest, forkJoin, map } from 'rxjs';\r\n\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MasterSecondService } from '../../Master/master-second.service';\r\nimport { MasterService } from '../../Master/master.service';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { EntryService } from '../entry.service';\r\nimport { ErrorDialog } from '../../Dialog/confirmation-dialog/error-dialog.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-voucher-entry',\r\n  templateUrl: './voucher.component.html',\r\n  styleUrls: ['./voucher.component.scss']\r\n})\r\nexport class VoucherComponent implements OnInit {\r\n  voucherForm: FormGroup;\r\n  filteredAccountList: any;\r\n  accountList: any;\r\n  filteredVouTypeList: any;\r\n  vocherGridData: any=[];\r\n  vouTypeList:any = [];\r\n  DR: string = \"DR\";\r\n  CR: string = \"CR\";\r\n  amountLabel: any;\r\n  vouNo: any;\r\n  totalAmount: any;\r\n  gridApi: any;\r\n  agGridOptions: any = {\r\n    defaultColDef: {\r\n      filter: true,\r\n      //flex:1,\r\n      sortable: true,\r\n      wraptext: true,\r\n      resizable: true,\r\n      /* minWidth: 100,*/\r\n\r\n    },\r\n    /* suppressRowHoverHighlight: true,*/\r\n  }\r\n\r\n  columnDefs = [{\r\n    headerName: 'Vocher list',\r\n    children: [\r\n      {\r\n        headerName: '', editable: false, minwidth: 25, width: 25, maxwidth: 25, resizable: false, sortable: false, filter: false, checkboxSelection: true, headerCheckboxSelection: true,\r\n      },\r\n      {\r\n        headerName: '', field: 'fileIcon', cellRenderer: this.actionCellRenderer, resizable: true, filter: false, minwidth: 25, width: 25, maxwidth: 25\r\n      },\r\n      { headerName: 'Vocher No', field: 'vouNo', filter: true, sorting: true, resizable: true, flex: 1, },\r\n      { headerName: 'Voucher', field: 'vouTypeName', filter: true, sorting: true, resizable: true, flex: 1, },\r\n      { headerName: 'Amount', field: 'amount', filter: true, sorting: true, resizable: true, flex: 1, valueFormatter: params => CommonUtility.formatNumber(params.data.amount), type: 'rightAligned'},\r\n      { headerName: 'Vocher Date', field: 'vouDateString', filter: true, sorting: true, resizable: true, flex: 1, },\r\n      { headerName: 'Created Date', field: 'createdDateString', filter: true, sorting: true, resizable: true, flex: 1, },\r\n    ]\r\n  }];\r\n\r\n  constructor(public snackBar: MatSnackBar, public dialog: MatDialog, private datePipe: DatePipe, private fb: FormBuilder, private _masterService: MasterService, private _entryService: EntryService) { }\r\n\r\n  ngOnInit() {\r\n    this.voucherForm = this.fb.group({\r\n      'vouMasterId': [0],\r\n      'VouType': ['', Validators.required],\r\n      'VouDate': ['', Validators.required],\r\n      'ContraAc': [0, Validators.required],\r\n      vouDetails: this.fb.array([])\r\n     \r\n    });\r\n    this.addVouDetail();\r\n    this.initApiCalls();\r\n    this.watchVouTypeChanges();\r\n    this.watchVouDetailsChanges();\r\n\r\n  }\r\n\r\n  watchVouTypeChanges() {\r\n    this.voucherForm.get('VouType').valueChanges.subscribe((value) => {\r\n      const contraAcControl = this.voucherForm.get('ContraAc');\r\n\r\n      if (value === 'JV') {\r\n        // Hide the Contra Account field\r\n        contraAcControl.clearValidators();\r\n        contraAcControl.updateValueAndValidity(); // Remove validation\r\n\r\n        // Clear the selected value for Contra Account\r\n        contraAcControl.setValue(0);\r\n      } else {\r\n        // Show the Contra Account field and reapply validation if needed\r\n        contraAcControl.setValidators(Validators.required); // Add back validation\r\n        contraAcControl.updateValueAndValidity();\r\n      }\r\n    });\r\n  }\r\n  \r\n  watchVouDetailsChanges() {\r\n    combineLatest([\r\n      this.voucherForm.get('vouDetails').valueChanges,\r\n      this.voucherForm.get('VouType').valueChanges\r\n    ]).subscribe(([details, vouType]) => {\r\n      let DRAmount = 0;\r\n      let CRAmount = 0;\r\n      details.forEach((detail, index) => {\r\n        const amountControl = this.voucherForm.get(`vouDetails.${index}.Amount`);\r\n        const drCrControl = this.voucherForm.get(`vouDetails.${index}.DRCR`);\r\n\r\n        if(drCrControl.value == \"DR\"){\r\n          DRAmount += parseFloat(amountControl.value); \r\n        } else if(drCrControl.value == \"CR\") {\r\n          CRAmount += parseFloat(amountControl.value);\r\n        }\r\n      });\r\n\r\n      if (['CV', 'BV'].includes(vouType)) {\r\n        const calCulatedVal = DRAmount - CRAmount;\r\n        this.totalAmount = Math.abs(calCulatedVal);\r\n        this.amountLabel = calCulatedVal < 0 ? 'CR' : 'DR';\r\n      }\r\n    });\r\n  }\r\n\r\n  public actionCellRenderer(params: any) {\r\n    let eGui = document.createElement(\"div\");\r\n    let editingCells = params.api.getEditingCells();\r\n    let isCurrentRowEditing = editingCells.some((cell: any) => {\r\n      return cell.rowIndex === params.node.rowIndex;\r\n    });\r\n    eGui.innerHTML = `<button class=\"material-icons action-button-edit\" type=\"button\" data-action=\"edit\">edit </button>`;\r\n\r\n    return eGui;\r\n}\r\n\r\n  onGridReady(event) { this.gridApi = event.api; }\r\n\r\n  onInputVouTypeListChange(event: any) {\r\n    const searchInput = event.target.value.toLowerCase();\r\n\r\n    this.filteredVouTypeList = this.vouTypeList.filter((data) => {\r\n      const prov = data.name.toLowerCase();\r\n      return prov.includes(searchInput);\r\n    });\r\n  }\r\n\r\n  onInputAccountListChange(event: any) {\r\n    const searchInput = event.target.value.toLowerCase();\r\n\r\n    this.filteredAccountList = this.accountList.filter((data) => {\r\n      const prov = data.name.toLowerCase();\r\n      return prov.includes(searchInput);\r\n    });\r\n  }\r\n\r\n  initApiCalls() {\r\n    forkJoin([\r\n      this._masterService.getAccount(),\r\n      this._entryService.getVouType(),\r\n    ]).pipe(map(response => {\r\n      this.accountList = response[0];\r\n      this.filteredAccountList = response[0];\r\n      this.vouTypeList = response[1];\r\n      this.filteredVouTypeList = response[1];\r\n    })).subscribe(res => {\r\n      \r\n    });\r\n  }\r\n  vouDetails(): FormArray {\r\n    return this.voucherForm.get('vouDetails') as FormArray;\r\n  }\r\n\r\n  newVouDetail(): FormGroup {\r\n    return this.fb.group({\r\n      'Account': ['', Validators.required],\r\n      'DRCR': ['', Validators.required],\r\n      'Amount': ['', Validators.required],\r\n      'Narration': ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  addVouDetail() {\r\n    this.vouDetails().push(this.newVouDetail());\r\n  }\r\n\r\n  removeVouDetail(empIndex: number) {\r\n    this.vouDetails().removeAt(empIndex);\r\n  }\r\n  getVoucherList() {\r\n    const {VouType, VouDate} = this.voucherForm.value;\r\n    if(VouType && VouDate){\r\n      \r\n      this._entryService.getVoucher(VouType, this.datePipe.transform(VouDate, 'yyyy-MM-dd')).subscribe((result)=>{\r\n        this.vocherGridData = result;\r\n      });\r\n    }\r\n  }\r\n\r\n  validateAndCalculateAmount(data) {\r\n    if (data.VouType === \"JV\") {\r\n      let totalAmount = 0;\r\n      for (const detail of data.vouDetails) {\r\n        if (detail.DRCR === \"CR\") {\r\n          // Subtract CR amount\r\n          totalAmount -= detail.Amount;\r\n        } else if (detail.DRCR === \"DR\") {\r\n          // Add DR amount\r\n          totalAmount += detail.Amount;\r\n        }\r\n      }\r\n\r\n      if (totalAmount === 0) {\r\n        // The Voucher is valid\r\n        return true;\r\n      } else {\r\n        // The Voucher is not valid as the total amount is not zero\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  onSubmit() {\r\n\r\n    if (this.voucherForm.valid) {\r\n      if(!this.validateAndCalculateAmount(this.voucherForm.value)){\r\n        this.dialog.open(ErrorDialog, {\r\n          data: {\r\n            message: 'Invalid Voucher: Total amount is not zero',\r\n            buttonText: {\r\n              ok: 'OK',\r\n            }\r\n          }\r\n        });\r\n        return;\r\n      }\r\n      const body = this.voucherForm.value;\r\n      body.VouDate = this.datePipe.transform(body.VouDate, 'yyyy-MM-dd')\r\n      this._entryService.saveVoucher(body).subscribe(result => {\r\n        console.log(\"result\", result);\r\n        this.getVoucherList();\r\n        this.resetForm(this.voucherForm);\r\n        \r\n      }, err => {\r\n        console.log(err);\r\n      });\r\n    }\r\n\r\n   \r\n  }\r\n\r\n  resetForm(myForm) {\r\n    // Reset the form and set the 'vouMasterId' to 0\r\n    myForm.reset();\r\n    myForm.get('vouMasterId').setValue(0);\r\n    this.totalAmount = 0;\r\n    this.amountLabel = '';\r\n    // Clear errors for top-level controls\r\n    Object.keys(myForm.controls).forEach(key => {\r\n      myForm.get(key).setErrors(null);\r\n    });\r\n    this.vouDetails().clear();\r\n    this.addVouDetail();\r\n  \r\n    // // Clear errors for controls within 'vouDetails'\r\n    setTimeout(()=>{\r\n      myForm.controls.vouDetails.controls.forEach((control: any) => {\r\n        Object.keys(control.controls).forEach(key => {\r\n          control.get(key).setErrors(null);\r\n        });\r\n      });\r\n    }, 50);\r\n  }\r\n\r\n  deleteVochers()\r\n  {\r\n    var selectedRecord = this.gridApi.getSelectedRows();\r\n    if (selectedRecord.length == 0) {\r\n      const dialogRef = this.dialog.open(ErrorDialog, {\r\n        data: {\r\n          message: 'Please select record to delete',\r\n          buttonText: {\r\n            ok: 'OK',\r\n\r\n          }\r\n        }\r\n\r\n      });\r\n\r\n    }\r\n    else\r\n    {\r\n      const dialogRef = this.dialog.open(ConfirmationDialog, {\r\n        data: {\r\n          message: 'Do you really want to delete this record?',\r\n          buttonText: {\r\n            ok: 'Yes',\r\n            cancel: 'No'\r\n          }\r\n        }\r\n      });\r\n  \r\n      dialogRef.afterClosed().subscribe((confirmed: boolean) => {\r\n        if (confirmed) {\r\n          const vouMasterIds = selectedRecord.map(item => item.vouMasterId).join(',');\r\n          this._entryService.deleteVoucher(vouMasterIds).subscribe(result => {\r\n            this.getVoucherList();\r\n            this.showToaster(result);\r\n          });\r\n        }\r\n      });\r\n\r\n      \r\n    }\r\n  }\r\n\r\n  showToaster(message, isError = false) {\r\n    const panelClass = isError ? ['red-text'] : undefined;\r\n    const label = isError ? \"Error\" : \"Success\";\r\n    const time = isError? 6000 : 3000;\r\n  \r\n    this.snackBar.open(message, label, {\r\n      duration: time,\r\n      panelClass: panelClass,\r\n    });\r\n  }\r\n\r\n  \r\n  onGridClick(params: any) {\r\n    if (params.event.target.dataset.action == \"edit\")\r\n    {\r\n      this.openEditBrokerageDetails(params.data);\r\n  \r\n    }\r\n    if(params.event.target.dataset.action == \"checkbox\"){\r\n        const dataIndex = this.gridApi.findIndex((item: any) => item.vouMasterId === params.data.vouMasterId);\r\n\r\n        if (dataIndex === -1) {\r\n            // Checkbox is checked, so add the data to gridApi\r\n            this.gridApi.push(params.data);\r\n        } else {\r\n            // Checkbox is unchecked, so remove the data from gridApi\r\n            this.gridApi.splice(dataIndex, 1);\r\n        }\r\n    }\r\n  }\r\n\r\n  openEditBrokerageDetails(params) {\r\n    this._entryService.editVoucher(params.vouMasterId).subscribe((data)=>{\r\n      this.vouNo = data.vouNo;\r\n     this.voucherForm.patchValue({\r\n      'vouMasterId': data.vouMasterId,\r\n      'VouType': data.vouType,\r\n      'VouDate': data.vouDate,\r\n      'ContraAc': data.contraAc,\r\n    });\r\n  \r\n    // Clear existing vouDetails FormArray\r\n    const vouDetailsArray = this.voucherForm.get('vouDetails') as FormArray;\r\n    vouDetailsArray.clear();\r\n  \r\n    // Iterate through vouDetails and add them to the FormArray\r\n    for (const vouDetail of data.vouDetails) {\r\n      vouDetailsArray.push(this.fb.group({\r\n        'Account': vouDetail.account,\r\n        'DRCR': vouDetail.drcr,\r\n        'Amount': vouDetail.amount,\r\n        'Narration': vouDetail.narration,\r\n        // Other fields\r\n      }));\r\n    }\r\n    });\r\n    \r\n  }\r\n\r\n  \r\n\r\n\r\n  \r\n  \r\n}\r\n","<form [formGroup]=\"voucherForm\" (ngSubmit)=\"onSubmit()\" class=\"pt-10\"> \r\n  <div class=\"flex-p\">\r\n    <mat-card-content class=\"voucher-form\">\r\n      <mat-expansion-panel>\r\n        <mat-expansion-panel-header>\r\n          <mat-panel-title>Voucher Entry <ng-container *ngIf=\"vouNo\">\r\n            - {{vouNo}}\r\n          </ng-container></mat-panel-title>\r\n        </mat-expansion-panel-header>                    \r\n        <div class=\"dropdown-container\">\r\n          <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"20\">\r\n            <div class=\"dropdown-wrapper\">\r\n              <mat-form-field class=\"select-slab-mat\" appearance=\"outline\">\r\n                <mat-label>Vou Type</mat-label>  \r\n                <mat-select [disabled]=\"voucherForm.get('vouMasterId').value !== 0\" #select formControlName=\"VouType\" placeholder=\"Select VouType\" (selectionChange)=\"getVoucherList()\" panelClass=\"custom-select-panel\">\r\n                  <input class=\"milti-search-box\" #multiUserSearch type=\"text\" autocomplete=\"off\" matInput placeholder=\"Search Account\" (input)=\"onInputVouTypeListChange($event)\"/>\r\n                  <mat-option *ngFor=\"let option of filteredVouTypeList\" [value]=\"option.id\">\r\n                    {{ option.name }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"20\">\r\n            <div class=\"dropdown-wrapper\">\r\n              <mat-form-field appearance=\"outline\" class=\"calendar\">\r\n                <mat-label>VouDate</mat-label>\r\n                <input matInput [matDatepicker]=\"picker2\" placeholder=\"Date\" formControlName=\"VouDate\" (ngModelChange)=\"getVoucherList()\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\r\n                <mat-datepicker #picker2></mat-datepicker>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div fxFlex=\"100\" fxFlex.gt-sm=\"35\" fxFlex.sm=\"35\">\r\n            <div class=\"dropdown-wrapper\" *ngIf=\"voucherForm.get('VouType').value !== 'JV'\">\r\n              <mat-form-field class=\"select-slab-mat\" appearance=\"outline\">\r\n                <mat-label>Contra Account</mat-label>\r\n                <mat-select #select formControlName=\"ContraAc\" placeholder=\"Select ContraAc\" panelClass=\"custom-select-panel\">\r\n                  <input class=\"milti-search-box\" #multiUserSearch type=\"text\" autocomplete=\"off\" matInput placeholder=\"Search Account\" (input)=\"onInputAccountListChange($event)\"/>\r\n                  <mat-option *ngFor=\"let option of filteredAccountList\" [value]=\"option.id\">\r\n                    {{ option.name }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>  \r\n          <div fxFlex=\"100\" fxFlex.gt-sm=\"10\" fxFlex.sm=\"10\" class=\"pt-5 text-end\">\r\n            <div *ngIf=\"totalAmount != 0 && voucherForm.get('VouType').value !== 'JV'\">\r\n              <label [ngClass]=\"{ 'red-text': amountLabel === 'CR', 'green-text': amountLabel !== 'CR' }\">{{ totalAmount }} {{ amountLabel }}</label>\r\n            </div>\r\n          </div>          \r\n          <div fxFlex=\"100\" fxFlex.gt-sm=\"15\" fxFlex.sm=\"15\" class=\"text-end\">\r\n            <button mat-raised-button color=\"warn\" class=\"uppercase\" type=\"button\" (click)=\"resetForm(voucherForm)\">\r\n              <mat-icon>clear</mat-icon>\r\n            </button>\r\n            <button mat-raised-button color=\"primary\" class=\"uppercase ml-7\" [disabled]=\"!voucherForm.valid\" type=\"submit\">\r\n              <mat-icon>save</mat-icon>\r\n            </button>\r\n          </div>        \r\n        </div>\r\n        <div formArrayName=\"vouDetails\">\r\n          <div *ngFor=\"let detail of vouDetails().controls; let detailIndex=index\" class=\"mb-10\">\r\n            <div [formGroupName]=\"detailIndex\">\r\n              <div class=\"dropdown-container\">\r\n                <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"20\" class=\"dropdown-arrow\">\r\n                  <mat-form-field class=\"select-slab-mat mb-0\" appearance=\"outline\">\r\n                    <mat-label>Account</mat-label>\r\n                    <mat-select #select formControlName=\"Account\" placeholder=\"Select Account\" panelClass=\"custom-select-panel\">\r\n                      <input class=\"milti-search-box\" #multiUserSearch type=\"text\" autocomplete=\"off\" matInput placeholder=\"Search Account\" (input)=\"onInputAccountListChange($event)\"/>\r\n                      <mat-option *ngFor=\"let option of filteredAccountList\" [value]=\"option.id\">\r\n                        {{ option.name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>      \r\n                <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"30\">\r\n                  <mat-form-field appearance=\"outline\" class=\"form-control\">\r\n                    <mat-label>Amount</mat-label>\r\n                    <input matInput autocomplete=\"off\" placeholder=\"Amount\" formControlName=\"Amount\" type=\"number\">      \r\n                  </mat-form-field>\r\n                </div>      \r\n                <div fxFlex=\"100\" fxFlex.gt-sm=\"10\" fxFlex.sm=\"15\" class=\"dropdown-arrow\">\r\n                  <mat-form-field class=\"select-slab-mat mb-0\" appearance=\"outline\">\r\n                    <mat-label>DR/CR</mat-label>\r\n                    <mat-select #select formControlName=\"DRCR\" placeholder=\"Select DRCR\" panelClass=\"custom-select-panel\">\r\n                      <mat-option [value]=\"DR\">DR</mat-option>\r\n                      <mat-option [value]=\"CR\">CR</mat-option>      \r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>      \r\n                <div fxFlex=\"100\" fxFlex.gt-sm=\"35\" fxFlex.sm=\"35\">\r\n                  <mat-form-field appearance=\"outline\" class=\"wider-width\">\r\n                    <mat-label>Narration</mat-label>\r\n                    <input matInput autocomplete=\"off\" placeholder=\"Narration\" formControlName=\"Narration\" type=\"text\">      \r\n                  </mat-form-field>\r\n                </div>   \r\n                <div fxFlex=\"100\" fxFlex.gt-sm=\"15\" fxFlex.sm=\"15\" class=\"text-end\">                      \r\n                  <button mat-raised-button color=\"primary\" type=\"button\" (click)=\"addVouDetail()\">\r\n                    <mat-icon>add</mat-icon>\r\n                  </button>  \r\n                  <span *ngIf=\"detailIndex<1\" class=\"empty-div\"></span>\r\n                  <button *ngIf=\"detailIndex>0\" mat-raised-button color=\"warn\" (click)=\"removeVouDetail(detailIndex)\" class=\"ml-7\">\r\n                    <mat-icon>delete</mat-icon>\r\n                  </button>\r\n                </div>                 \r\n              </div>              \r\n            </div>\r\n          </div>          \r\n        </div>\r\n      </mat-expansion-panel>\r\n    </mat-card-content>\r\n    <div class=\"col-xl-12 mt-2 position-relative\">\r\n      <span class=\"material-symbols-outlined delete-icon\" (click)=\"deleteVochers()\">\r\n        <mat-icon>delete_sweep</mat-icon>\r\n      </span>\r\n      <ag-grid-angular style=\" height: 480px;\"\r\n                    class=\"ag-theme-material mt-2\"\r\n                    [rowData]=\"vocherGridData\"\r\n                    [pagination]=\"true\"\r\n                    [rowHeight]=\"31\"\r\n                    [columnDefs]=\"columnDefs\"\r\n                    [rowSelection]=\"'multiple'\"\r\n                    [rowMultiSelectWithClick]=\"true\"\r\n                    [defaultColDef]=\"agGridOptions.defaultColDef\"\r\n                    (gridReady)=\"onGridReady($event)\"\r\n                    (cellClicked)=\"onGridClick($event)\"\r\n                    headerHeight=\"34\">\r\n      </ag-grid-angular>\r\n  </div>\r\n  </div>\r\n</form>\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule, DatePipe } from '@angular/common';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { AgGridModule } from 'ag-grid-angular';\r\nimport { VoucherComponent } from './Voucher/voucher.component';\r\nimport { MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport { TradeContractComponent } from './trade-contract/trade-contract.component';\r\n\r\nexport const routes: Routes = [\r\n  { path: '', redirectTo: 'voucher', pathMatch: 'full' },\r\n  { path: 'voucher', component: VoucherComponent, data: { breadcrumb: 'Voucher' } },\r\n  { path: 'trade-contract', component: TradeContractComponent, data: { breadcrumb: 'Trade' } },\r\n  \r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    AgGridModule,\r\n    SharedModule,\r\n  ],\r\n  declarations: [\r\n    \r\n    VoucherComponent,\r\n          TradeContractComponent,\r\n  ],\r\n  providers: [\r\n    DatePipe,\r\n    { provide: MAT_DATE_LOCALE, useValue: 'en-GB' }\r\n  ],\r\n})\r\nexport class EntryModule { }\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { DatatableComponent } from \"@swimlane/ngx-datatable\";\r\nimport { AppSettings } from \"src/app/app.settings\";\r\nimport { Settings } from \"src/app/app.settings.model\";\r\nimport { ConfirmationDialog } from \"../../Dialog/confirmation-dialog/confirmation-dialog.component\";\r\nimport { AppService } from \"src/app/service/app.service\";\r\nimport { forkJoin, Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from \"@angular/forms\";\r\nimport { MasterService } from \"../../Master/master.service\";\r\nimport { MasterSecondService } from \"../../Master/master-second.service\";\r\nimport { EntryService } from \"../entry.service\";\r\nimport { DatePipe, DecimalPipe } from \"@angular/common\";\r\nimport { ErrorDialog } from \"../../Dialog/confirmation-dialog/error-dialog.component\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\n\r\n@Component({\r\n  selector: 'app-trade-contract',\r\n  templateUrl: './trade-contract.component.html',\r\n  styleUrls: ['./trade-contract.component.scss']\r\n})\r\nexport class TradeContractComponent implements OnInit {\r\n  @ViewChild(DatatableComponent) table: DatatableComponent;\r\n  public itemForm: UntypedFormGroup;\r\n  editing = {};\r\n  rows = [];\r\n  temp = [];\r\n  accountList: any[];\r\n  filteredAccountList: any[];\r\n  brokerList: any;\r\n  filterBrokerList: any[] = [];\r\n  clientList: any;\r\n  filterClientList: any[] = [];\r\n  selected = [];\r\n  loadingIndicator: boolean = true;\r\n  reorderable: boolean = true;\r\n  conTypeList = [{ 'id': 'B', 'name': 'Buy' }, { 'id': 'S', 'name': 'Sell' }]\r\n  saudaList: any[] = [];\r\n  filterSaudaList: any[] = [];\r\n  contractDateVal: any;\r\n  decimalPipe: any = new DecimalPipe('en-US');\r\n  exchangeList: any[];\r\n  conDate: any;\r\n  exId: any;\r\n  gridApi: any;\r\n\r\n  public settings: Settings;\r\n  symbolMappingList: any[] = [];\r\n  constructor(public snackBar: MatSnackBar, private datePipe: DatePipe, public appSettings: AppSettings, private formBuilder: UntypedFormBuilder, private _entryServices: EntryService,\r\n    public dialog: MatDialog, private _appService: AppService, private _masterService: MasterService, private _masterSecondService: MasterSecondService) {\r\n    this.settings = this.appSettings.settings;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.bindFormControls();\r\n  }\r\n\r\n  bindFormControls() {\r\n    this.itemForm = this.formBuilder.group({\r\n      'accountId': ['', Validators.required],\r\n      'saudaId': ['', Validators.required],\r\n      'qty': ['', Validators.required],\r\n      'rate': ['', Validators.required],\r\n      'contype': ['B', Validators.required],\r\n      'brokerId': ['', Validators.required],\r\n      'id': [0]\r\n    });\r\n    this.initialApiCalls();\r\n  }\r\n\r\n  agGridOptions: any = {\r\n    defaultColDef: {\r\n      filter: true,\r\n      sortable: true,\r\n      wraptext: true,\r\n      resizable: true,\r\n      columnSize: \"sizeToFit\",\r\n    }\r\n\r\n  }\r\n\r\n  columnDefs = [{\r\n    headerName: 'Contract Trades',\r\n    children: [\r\n      {\r\n        headerName: '', editable: false, minwidth: 25, width: 25, maxwidth: 25, resizable: false, sortable: false, filter: false, checkboxSelection: true, headerCheckboxSelection: true,\r\n      },\r\n      {\r\n        headerName: 'ConDate', field: 'condate', minwidth: 110, width: 110, maxwidth: 120, suppressSizeToFit: true, cellRenderer: (params) => {\r\n          return this.datePipe.transform(params.value, 'YYYY-MM-dd')\r\n        }\r\n      },\r\n      { headerName: 'Account', field: 'account',  suppressSizeToFit: true,flex:2 },\r\n      { headerName: 'Sauda Code', field: 'saudaCode',  suppressSizeToFit: true,flex:2 },\r\n\r\n      {\r\n        headerName: 'B/S', field: 'contype', minwidth: 80, width: 80, maxwidth: 80,cellRenderer: (params) => {\r\n        return params.value === 'B' ? 'Buy' : (params.value === 'S' ? 'Sell' : params.value);\r\n        }\r\n      },\r\n      {\r\n          headerName: 'QTY', field: 'qty',  minwidth: 100, width: 100, maxwidth: 100, sorting: true, resizable: true, cellRenderer: (params) => {\r\n          return this.decimalPipe.transform(params.value, '1.2-2');\r\n        },type: 'rightAligned'\r\n      },\r\n      {\r\n          headerName: 'Rate', field: 'rate', minwidth: 100, width: 100, maxwidth: 100, type: 'rightAligned', cellRenderer: (params) => {\r\n          return params.value.toFixed(2);\r\n        },\r\n      },\r\n      {\r\n          headerName: 'Created Date', field: 'createdDate', minwidth: 110, width: 110, maxwidth: 110, cellRenderer: (params) => {\r\n          return this.datePipe.transform(params.value, 'YYYY-MM-dd')\r\n        }\r\n      },\r\n      { headerName: 'Trade No', field: 'tradeNo', minwidth: 100, width: 100, maxwidth: 100, suppressSizeToFit: true },\r\n      { headerName: 'Broker', field: 'brokerName', suppressSizeToFit: true, flex: 1 },\r\n    ]\r\n\r\n  }\r\n  ];\r\n\r\n  initialApiCalls() {\r\n    forkJoin([this._masterService.getAccount(), this._masterService.getExchangeName()]).pipe(map(response => {\r\n      this.filteredAccountList = response[0];\r\n      this.accountList = response[0];\r\n      this.brokerList = response[0];\r\n      this.filterBrokerList = response[0];\r\n      this.exchangeList = response[1];\r\n    })).subscribe(res => {\r\n    });\r\n  }\r\n\r\n  onGridDoubleClick(params: any)\r\n  {\r\n    this.openExchangeDialog(params.data.id);\r\n  }\r\n\r\n  onExchangeInputChange(event: any) {\r\n    this._masterService.getExchangeSaudaListDDL(this.exId).subscribe(res => {\r\n      this.saudaList = res;\r\n      this.filterSaudaList = res;\r\n    });\r\n  }\r\n\r\n  onInputSaudaChange(event: any) {\r\n    const searchInput = event.target.value.toLowerCase();\r\n\r\n    this.filterSaudaList = this.saudaList.filter((data) => {\r\n      const prov = data.itemCode.toLowerCase();\r\n      return prov.includes(searchInput);\r\n    });\r\n\r\n    if (searchInput === '') {\r\n      this.filterSaudaList = [...this.saudaList];\r\n    }\r\n  }\r\n\r\n  onInputChange(event: any) {\r\n    const searchInput = event.target.value.toLowerCase();\r\n\r\n    this.filteredAccountList = this.accountList.filter((data) => {\r\n      const prov = data.itemCode.toLowerCase();\r\n      return prov.includes(searchInput);\r\n    });\r\n\r\n    if (searchInput === '') {\r\n      this.filteredAccountList = [...this.accountList];\r\n    }\r\n  }\r\n\r\n  onInputBrokerChange(event: any) {\r\n    const searchInput = event.target.value.toLowerCase();\r\n\r\n    this.filterBrokerList = this.brokerList.filter((data) => {\r\n      const prov = data.name.toLowerCase();\r\n      return prov.includes(searchInput);\r\n    });\r\n\r\n    if (searchInput === '') {\r\n      this.filterBrokerList = [...this.brokerList];\r\n    }\r\n  }\r\n\r\n  onInputClientChange(event: any) {\r\n    const searchInput = event.target.value.toLowerCase();\r\n\r\n    this.filterClientList = this.clientList.filter((data) => {\r\n      const prov = data.name.toLowerCase();\r\n      return prov.includes(searchInput);\r\n    });\r\n\r\n    if (searchInput === '') {\r\n      this.filterClientList = [...this.clientList];\r\n    }\r\n  }\r\n\r\n  public onSubmit(values: Object): void {\r\n    var body = this.itemForm.value;\r\n    body.condate = this.conDate;\r\n    if (this.itemForm.valid) {\r\n      body.condate = this.datePipe.transform(body.condate, 'yyyy-MM-dd')\r\n      //const body = JSON.stringify(addFormData);\r\n      this._entryServices.saveCtrD(body).subscribe(result => {\r\n        console.log(\"result\", result);\r\n        this.getTradeFileListData();\r\n        this.resetForm(this.itemForm);\r\n      }, err => {\r\n        console.log(err);\r\n      });\r\n    }\r\n  }\r\n  getTradeFileListData() {\r\n    if (this.contractDateVal) {\r\n      this._entryServices.getTradeFileList(this.contractDateVal).subscribe((results) => {\r\n        this.symbolMappingList = results;\r\n      });\r\n    }\r\n  }\r\n\r\n  onCondateChange(newValue: Date) {\r\n    this.contractDateVal = this.datePipe.transform(newValue, 'yyyy-MM-dd');\r\n    this.getTradeFileListData();\r\n  }\r\n\r\n  public actionCellRenderer(params: any) {\r\n    let eGui = document.createElement(\"div\");\r\n    let editingCells = params.api.getEditingCells();\r\n    let isCurrentRowEditing = editingCells.some((cell: any) => {\r\n      return cell.rowIndex === params.node.rowIndex;\r\n    });\r\n    eGui.innerHTML = `<button class=\"material-icons action-button-edit\" data-action=\"edit\">edit </button>`;\r\n    return eGui;\r\n  }\r\n\r\n  onGridClick(params: any) {\r\n    \r\n  }\r\n\r\n  public openExchangeDialog(id) {\r\n    this._entryServices.editContract(id).subscribe((response) => {\r\n      this.exId = response.exId;\r\n      this._masterService.getExchangeSaudaListDDL(response.exId).subscribe(result => {\r\n        this.saudaList = result;\r\n        this.filterSaudaList = result;\r\n        var res = response;\r\n        this.itemForm.get('id').setValue(res.id);\r\n        this.itemForm.get('accountId').setValue(res.accountId);\r\n        this.itemForm.get('saudaId').setValue(res.saudaId);\r\n        this.itemForm.get('qty').setValue(Number(res.qty).toFixed(2));\r\n        this.itemForm.get('rate').setValue(Number(res.rate).toFixed(2));\r\n        this.itemForm.get('contype').setValue(res.contype);\r\n        this.itemForm.get('brokerId').setValue(res.brokerId);\r\n      });\r\n\r\n\r\n    });\r\n  }\r\n  onGridReady(event) { this.gridApi = event.api; }\r\n\r\n  deleteContractTrades() {\r\n    var selectedRecord = this.gridApi.getSelectedRows();\r\n    if (selectedRecord.length == 0) {\r\n      const dialogRef = this.dialog.open(ErrorDialog, {\r\n        data: {\r\n          message: 'Please select record to delete',\r\n          buttonText: {\r\n            ok: 'OK',\r\n\r\n          }\r\n        }\r\n\r\n      });\r\n\r\n    }\r\n    else {\r\n      const idList = selectedRecord.map(record => record.tradeNo).join(', ');\r\n      this._entryServices.deleteContract(idList, this.datePipe.transform(this.conDate, 'yyyy-MM-dd')).subscribe((res) => {\r\n        this.getTradeFileListData();\r\n        this.showToaster(res.message, !res.isSuccess);\r\n      });\r\n    }\r\n  }\r\n\r\n  showToaster(message, isError = false) {\r\n    const panelClass = isError ? ['red-text'] : undefined;\r\n    const label = isError ? \"Error\" : \"Success\";\r\n    const time = isError? 6000 : 3000;\r\n  \r\n    this.snackBar.open(message, label, {\r\n      duration: time,\r\n      panelClass: panelClass,\r\n    });\r\n  }\r\n\r\n  resetForm(myForm) {\r\n    myForm.reset();\r\n    myForm.get('id').setValue(0);\r\n    Object.keys(myForm.controls).forEach(key => {\r\n      myForm.get(key).setErrors(null);\r\n    });\r\n  }\r\n\r\n  isSaveButtonDisabled() {\r\n    return this.itemForm.invalid;\r\n  }\r\n\r\n  close() {\r\n    this.resetForm(this.itemForm);\r\n    this.itemForm.markAsPristine();\r\n    this.itemForm.markAsUntouched();\r\n    console.log('Form Value:', this.itemForm.value);\r\n    console.log('Form Valid:', this.itemForm.valid);\r\n    console.log('Form Touched:', this.itemForm.touched);\r\n  }\r\n}\r\n","<div class=\"row\">\r\n    <div fxLayout=\"row\" class=\"mt-2 symbol-mapping\">\r\n        <div fxFlex=\"100\" fxFlex.gt-sm=\"15\" fxFlex.sm=\"15\">\r\n            <div class=\"dropdown-container\">\r\n              <div class=\"dropdown-wrapper\">\r\n                <mat-form-field appearance=\"outline\" class=\"calendar remove-bottom\">\r\n                  <mat-label>Contract Date</mat-label>\r\n                  <input matInput [matDatepicker]=\"picker1\" [(ngModel)]=\"conDate\" (ngModelChange)=\"onCondateChange($event)\">\r\n                  <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\r\n                  <mat-datepicker #picker1></mat-datepicker>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div fxFlex=\"100\" fxFlex.gt-sm=\"15\" fxFlex.sm=\"50\">\r\n            <div class=\"dropdown-container\">\r\n                <div class=\"dropdown-wrapper\">\r\n            <mat-form-field class=\"example-full-width remove-bottom\" appearance=\"outline\">\r\n              <mat-label>Exchange </mat-label>\r\n              <mat-select placeholder=\"Select Exchange\" [(ngModel)]=\"exId\" (ngModelChange)=\"onExchangeInputChange($event)\">\r\n                <mat-option *ngFor=\"let exchange of exchangeList\" [value]=\"exchange.id\">\r\n                  {{exchange.name}}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n            </div>\r\n            </div>\r\n          </div>\r\n    </div>\r\n    <div fxLayout=\"row\" class=\"mt-2 flex-end symbol-mapping\">\r\n        <form [formGroup]=\"itemForm\" (ngSubmit)=\"onSubmit(itemForm.value)\" fxLayout=\"row wrap\" class=\"user-form\">\r\n            <div class=\"white-block pb-5\">\r\n                <div class=\"tab-party-details-parent\">\r\n                      <div fxFlex=\"100\" fxFlex.gt-sm=\"15\" fxFlex.sm=\"50\">\r\n                        <div class=\"dropdown-wrapper\">\r\n                            <mat-form-field class=\"select-slab-mat\" appearance=\"outline\">\r\n                              <mat-label>Select Account</mat-label>\r\n                              <mat-select #selectType placeholder=\"Select Account\" panelClass=\"custom-select-panel\" formControlName=\"accountId\">\r\n                                <input class=\"milti-search-box\" #multiUserSearch type=\"text\" autocomplete=\"off\" matInput placeholder=\"Search Account\" (input)=\"onInputChange($event)\" />\r\n                                <mat-option *ngFor=\"let option of filteredAccountList\" [value]=\"option.id\">\r\n                                  {{ option.name }}\r\n                                </mat-option>\r\n                              </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                    <div fxFlex=\"100\" fxFlex.gt-sm=\"15\" fxFlex.sm=\"50\">\r\n                        <div class=\"dropdown-wrapper\">\r\n                            <mat-form-field class=\"select-slab-mat\" appearance=\"outline\">\r\n                              <mat-label>Select Sauda</mat-label>\r\n                              <mat-select #selectType placeholder=\"Select Sauda\" panelClass=\"custom-select-panel\" formControlName=\"saudaId\">\r\n                                <input class=\"milti-search-box\" #multiUserSearch type=\"text\" autocomplete=\"off\" matInput placeholder=\"Search Sauda\" (input)=\"onInputSaudaChange($event)\" />\r\n                                <mat-option *ngFor=\"let option of filterSaudaList\" [value]=\"option.id\">\r\n                                  {{ option.name }}\r\n                                </mat-option>\r\n                              </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                      <div fxFlex=\"100\" fxFlex.gt-sm=\"12\" fxFlex.sm=\"50\">\r\n                        <div class=\"dropdown-wrapper\">\r\n                          <mat-form-field class=\"select-slab-mat\" appearance=\"outline\">\r\n                            <mat-label>Select ConType</mat-label>\r\n                            <mat-select #selectPartyAs placeholder=\"Select ConType\" panelClass=\"custom-select-panel\" formControlName=\"contype\">\r\n                            <mat-option *ngFor=\"let option of conTypeList\" [value]=\"option.id\">\r\n                                {{ option.name }}\r\n                                </mat-option> \r\n                            </mat-select>\r\n                          </mat-form-field>\r\n                        </div>\r\n                      </div>\r\n                      <div fxFlex=\"100\" fxFlex.gt-sm=\"15\" fxFlex.sm=\"30\">\r\n                        <mat-form-field appearance=\"outline\">\r\n                          <mat-label>Qty</mat-label>\r\n                          <input matInput autocomplete=\"off\" placeholder=\"Qty\" formControlName=\"qty\" type=\"number\" appCurrencyFormatter>\r\n                          <mat-error *ngIf=\"itemForm.controls.qty.errors?.required\">qty is required</mat-error>\r\n                        </mat-form-field>\r\n                      </div>\r\n                      <div fxFlex=\"100\" fxFlex.gt-sm=\"15\" fxFlex.sm=\"30\">\r\n                        <mat-form-field appearance=\"outline\">\r\n                          <mat-label>Rate</mat-label>\r\n                          <input matInput autocomplete=\"off\" placeholder=\"Rate\" formControlName=\"rate\" type=\"number\" appCurrencyFormatter>\r\n                          <mat-error *ngIf=\"itemForm.controls.rate.errors?.required\">rate is required</mat-error>\r\n                        </mat-form-field>\r\n                      </div>\r\n                      <div fxFlex=\"100\" fxFlex.gt-sm=\"15\" fxFlex.sm=\"50\">\r\n                        <div class=\"dropdown-wrapper\">\r\n                          <mat-form-field class=\"select-slab-mat\" appearance=\"outline\">\r\n                            <mat-label>Select Broker</mat-label>\r\n                            <mat-select #select placeholder=\"Select Broker\" panelClass=\"custom-select-panel\" formControlName=\"brokerId\">\r\n                              <input class=\"milti-search-box\" #multiUserSearch type=\"text\" autocomplete=\"off\" matInput placeholder=\"Search Broker\" (input)=\"onInputBrokerChange($event)\" />\r\n                              <mat-option *ngFor=\"let option of filterBrokerList\" [value]=\"option.id\">\r\n                                {{ option.name }}\r\n                              </mat-option>\r\n                            </mat-select>\r\n                          </mat-form-field>\r\n                        </div>\r\n                      </div>\r\n                      <div fxFlex=\"100\" fxFlex.gt-sm=\"13\" space-between fxFlex.sm=\"50\">\r\n                        <button mat-raised-button color=\"primary\" class=\"uppercase save-btn\" [disabled]=\"!itemForm.valid || !conDate || isSaveButtonDisabled()\" type=\"submit\">Save</button> \r\n                        <button type=\"button\" mat-raised-button color=\"warn\" (click)=\"close()\">Cancel</button>            \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n    <div class=\"col-xl-12 mt-2 position-relative\">\r\n        <span class=\"material-symbols-outlined delete-icon\" (click)=\"deleteContractTrades()\">\r\n            <mat-icon>delete_sweep</mat-icon>\r\n          </span>\r\n        <ag-grid-angular style=\" height: 535px;\"\r\n                         class=\"ag-theme-material\"\r\n                           [rowHeight]=\"31\"\r\n                         [rowData]=\"symbolMappingList\"\r\n                         [pagination]=\"true\"\r\n                         [columnDefs]=\"columnDefs\"\r\n                         [rowMultiSelectWithClick]=\"true\"\r\n                         [rowSelection]=\"'multiple'\"\r\n                         (gridReady)=\"onGridReady($event)\"\r\n                         [defaultColDef]=\"agGridOptions.defaultColDef\"\r\n                         (cellClicked)=\"onGridClick($event)\"\r\n                         (cellDoubleClicked)=\"onGridDoubleClick($event)\"\r\n                         headerHeight=\"34\">\r\n        </ag-grid-angular>\r\n      </div>\r\n  </div>\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}