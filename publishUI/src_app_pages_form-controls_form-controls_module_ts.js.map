{"version":3,"file":"src_app_pages_form-controls_form-controls_module_ts.js","mappings":"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","sources":["./src/app/pages/form-controls/autocomplete/autocomplete.component.ts","./src/app/pages/form-controls/autocomplete/autocomplete.component.html","./src/app/pages/form-controls/checkbox/checkbox.component.ts","./src/app/pages/form-controls/checkbox/checkbox.component.html","./src/app/pages/form-controls/datepicker/datepicker.component.ts","./src/app/pages/form-controls/datepicker/datepicker.component.html","./src/app/pages/form-controls/form-controls.module.ts","./src/app/pages/form-controls/form-field/form-field.component.ts","./src/app/pages/form-controls/form-field/form-field.component.html","./src/app/pages/form-controls/input/input.component.ts","./src/app/pages/form-controls/input/input.component.html","./src/app/pages/form-controls/radio-button/radio-button.component.ts","./src/app/pages/form-controls/radio-button/radio-button.component.html","./src/app/pages/form-controls/select/select.component.ts","./src/app/pages/form-controls/select/select.component.html","./src/app/pages/form-controls/slide-toggle/slide-toggle.component.ts","./src/app/pages/form-controls/slide-toggle/slide-toggle.component.html","./src/app/pages/form-controls/slider/slider.component.ts","./src/app/pages/form-controls/slider/slider.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { UntypedFormControl } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { AppSettings } from '../../../app.settings';\r\nimport { Settings } from '../../../app.settings.model';\r\n\r\n@Component({\r\n  selector: 'app-autocomplete',\r\n  templateUrl: './autocomplete.component.html'\r\n})\r\nexport class AutocompleteComponent {\r\n  myControl: UntypedFormControl = new UntypedFormControl();\r\n  options: string[] = ['One', 'Two', 'Three']; \r\n  optionsf: string[] = ['Onef', 'Twof', 'Threef']; \r\n  filteredControl: UntypedFormControl = new UntypedFormControl();\r\n  filteredControlf: UntypedFormControl = new UntypedFormControl();\r\n  filteredOptions: Observable<string[]>;\r\n  filteredOptionsf: Observable<string[]>;\r\n  public settings: Settings;\r\n  constructor(public appSettings:AppSettings) {\r\n    this.settings = this.appSettings.settings; \r\n  } \r\n  \r\n  ngOnInit() {\r\n    this.filteredOptions = this.filteredControl.valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => this._filter(value))\r\n    );\r\n\r\n    this.filteredOptionsf = this.filteredControlf.valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => this._filterf(value))\r\n    );\r\n  }\r\n\r\n  private _filter(value: string): string[] {\r\n    const filterValue = value.toLowerCase(); \r\n    return this.options.filter(option => option.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  private _filterf(value: string): string[] {\r\n    const filterValue = value.toLowerCase(); \r\n    return this.optionsf.filter(option => option.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n}","<div fxLayout=\"column\" fxLayout.gt-sm=\"row wrap\"> \r\n    <div fxFlex=\"50\" class=\"flex-p\"> \r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Simple autocomplete</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content fxLayoutAlign=\"center\">\r\n                <form>\r\n                    <mat-form-field>\r\n                        <input type=\"text\" placeholder=\"Pick one\" aria-label=\"Number\" matInput [formControl]=\"myControl\" [matAutocomplete]=\"simpleAuto\">\r\n                        <mat-autocomplete #simpleAuto=\"matAutocomplete\">\r\n                            <mat-option *ngFor=\"let option of options\" [value]=\"option\">\r\n                                {{ option }}\r\n                            </mat-option>\r\n                        </mat-autocomplete>\r\n                    </mat-form-field>\r\n                </form>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>   \r\n    <div fxFlex=\"50\" class=\"flex-p\"> \r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Filter autocomplete</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content fxLayoutAlign=\"center\">\r\n                <form>\r\n                    <mat-form-field>\r\n                        <input type=\"text\" placeholder=\"Pick one\" aria-label=\"Number\" matInput [formControl]=\"filteredControlf\" [matAutocomplete]=\"auto\">\r\n                        <mat-autocomplete #auto=\"matAutocomplete\">\r\n                            <mat-option *ngFor=\"let option of filteredOptionsf | async\" [value]=\"option\">\r\n                              {{ option }}\r\n                            </mat-option>\r\n                        </mat-autocomplete>\r\n                    </mat-form-field>\r\n                </form>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n    <div fxFlex=\"50\" class=\"flex-p\"> \r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Filter autocomplete</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content fxLayoutAlign=\"center\">\r\n                <form>\r\n                    <mat-form-field>\r\n                        <input type=\"text\" placeholder=\"Pick one\" aria-label=\"Number\" matInput [formControl]=\"filteredControl\" [matAutocomplete]=\"auto1\">\r\n                        <mat-autocomplete #auto1=\"matAutocomplete\">\r\n                            <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\r\n                              {{ option }}\r\n                            </mat-option>\r\n                        </mat-autocomplete>\r\n                    </mat-form-field>\r\n                </form>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n    \r\n    \r\n</div>","import { Component } from '@angular/core';\r\nimport { AppSettings } from '../../../app.settings';\r\nimport { Settings } from '../../../app.settings.model';\r\n\r\n@Component({\r\n  selector: 'app-checkbox',\r\n  templateUrl: './checkbox.component.html'\r\n})\r\nexport class CheckboxComponent {\r\n  checked = false;\r\n  indeterminate = false;\r\n  labelPosition = 'after';\r\n  disabled = false;\r\n  public settings: Settings;\r\n  constructor(public appSettings:AppSettings) {\r\n    this.settings = this.appSettings.settings; \r\n  }\r\n}","<div fxLayout=\"column\">\r\n    <div class=\"flex-p\">\r\n        <mat-card>\r\n            <mat-card-header>                \r\n                <mat-card-subtitle><h2>Checkbox configuration</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <section class=\"py-1\">\r\n                    <mat-checkbox [(ngModel)]=\"checked\" class=\"mx-1\">Checked</mat-checkbox>\r\n                    <mat-checkbox [(ngModel)]=\"indeterminate\" class=\"mx-1\">Indeterminate</mat-checkbox>\r\n                </section>\r\n                <section class=\"py-1\">\r\n                    <label>Label position:</label>\r\n                    <mat-radio-group [(ngModel)]=\"labelPosition\">\r\n                        <mat-radio-button value=\"after\" class=\"mx-1\">After</mat-radio-button>\r\n                        <mat-radio-button value=\"before\" class=\"mx-1\">Before</mat-radio-button>\r\n                    </mat-radio-group>\r\n                </section>\r\n                <section class=\"py-1\">\r\n                    <mat-checkbox [(ngModel)]=\"disabled\">Disabled</mat-checkbox>\r\n                </section>\r\n                <hr>\r\n                <h2 class=\"py-1\">Result</h2>\r\n                <section class=\"py-1\">\r\n                    <mat-checkbox\r\n                        [(ngModel)]=\"checked\"\r\n                        [(indeterminate)]=\"indeterminate\"\r\n                        [labelPosition]=\"labelPosition\"\r\n                        [disabled]=\"disabled\">\r\n                      I'm a checkbox\r\n                    </mat-checkbox>\r\n                </section>               \r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div> \r\n</div>","import { Component } from '@angular/core';\r\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\r\nimport { AppSettings } from '../../../app.settings';\r\nimport { Settings } from '../../../app.settings.model';\r\n\r\n@Component({\r\n  selector: 'app-datepicker',\r\n  templateUrl: './datepicker.component.html',\r\n  styleUrls: ['./datepicker.component.scss']\r\n})\r\nexport class DatepickerComponent {  \r\n  public settings: Settings;\r\n  constructor(public appSettings:AppSettings) {\r\n    this.settings = this.appSettings.settings; \r\n  }\r\n\r\n  //Datepicker start date\r\n  startDate = new Date(1990, 0, 1);\r\n\r\n  //Datepicker with min & max validation\r\n  minDate = new Date(2010, 0, 1);\r\n  maxDate = new Date(2020, 0, 1);\r\n\r\n  //Datepicker with filter validation \r\n  myFilter = (d: Date | null): boolean => {\r\n    const day = (d || new Date()).getDay();\r\n    return day !== 0 && day !== 6;\r\n  }\r\n\r\n  //Datepicker input and change events\r\n  events: string[] = [];\r\n  addEvent(type: string, event: MatDatepickerInputEvent<Date>) {\r\n    this.events.push(`${type}: ${event.value}`);\r\n  }\r\n}\r\n","<div fxLayout=\"column\" fxLayout.gt-sm=\"row wrap\"> \r\n    <div fxFlex=\"50\" class=\"flex-p\"> \r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Basic datepicker</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content fxLayoutAlign=\"center\">\r\n                <mat-form-field>\r\n                    <input matInput [matDatepicker]=\"picker1\" placeholder=\"Choose a date\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker1></mat-datepicker>\r\n                </mat-form-field>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>   \r\n    <div fxFlex=\"50\" class=\"flex-p\"> \r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Datepicker start date</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content fxLayoutAlign=\"center\">\r\n                <mat-form-field>\r\n                    <input matInput [matDatepicker]=\"picker2\" placeholder=\"Choose a date\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker2 startView=\"year\" [startAt]=\"startDate\"></mat-datepicker>\r\n                </mat-form-field>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n    <div fxFlex=\"50\" class=\"flex-p\"> \r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Datepicker with min & max validation</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content fxLayoutAlign=\"center\">\r\n                <mat-form-field class=\"example-full-width\">\r\n                    <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"picker3\" placeholder=\"Choose a date\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker3\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker3></mat-datepicker>\r\n                </mat-form-field>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>  \r\n    <div fxFlex=\"50\" class=\"flex-p\"> \r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Datepicker with filter validation</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content fxLayoutAlign=\"center\">\r\n                <mat-form-field class=\"example-full-width\">\r\n                    <input matInput [matDatepickerFilter]=\"myFilter\" [matDatepicker]=\"picker4\" placeholder=\"Choose a date\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker4\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker4></mat-datepicker>\r\n                </mat-form-field>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div> \r\n    <div fxFlex=\"50\" class=\"flex-p\"> \r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Datepicker input and change events</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content fxLayout=\"column\" fxLayoutAlign=\"center center\">\r\n                <mat-form-field>\r\n                    <input matInput [matDatepicker]=\"picker5\" placeholder=\"Input & change events\"\r\n                          (dateInput)=\"addEvent('input', $event)\" (dateChange)=\"addEvent('change', $event)\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker5\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker5></mat-datepicker>\r\n                </mat-form-field>                \r\n                <div class=\"w-100 mat-elevation-z4 p-1 events-list\" perfectScrollbar> \r\n                    <div *ngFor=\"let e of events\">{{e}}</div>\r\n                </div>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n    <div fxFlex=\"50\" class=\"flex-p\"> \r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Disabled datepicker</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content fxLayout=\"column\" fxLayoutAlign=\"center center\">             \r\n                <mat-form-field>\r\n                    <input matInput [matDatepicker]=\"dp1\" placeholder=\"Completely disabled\" disabled>\r\n                    <mat-datepicker-toggle matSuffix [for]=\"dp1\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #dp1></mat-datepicker>\r\n                </mat-form-field>\r\n                <mat-form-field>\r\n                    <input matInput [matDatepicker]=\"dp2\" placeholder=\"Popup disabled\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"dp2\" disabled></mat-datepicker-toggle>\r\n                    <mat-datepicker #dp2></mat-datepicker>\r\n                </mat-form-field>\r\n                <mat-form-field>\r\n                    <input matInput [matDatepicker]=\"dp3\" placeholder=\"Input disabled\" disabled>\r\n                    <mat-datepicker-toggle matSuffix [for]=\"dp3\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\r\n                </mat-form-field>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div> \r\n    <div fxFlex=\"50\" class=\"flex-p\"> \r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Datepicker touch UI</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content fxLayoutAlign=\"center\">\r\n                <mat-form-field>\r\n                    <input matInput [matDatepicker]=\"picker6\" placeholder=\"Choose a date\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker6\"></mat-datepicker-toggle>\r\n                    <mat-datepicker touchUi=\"true\" #picker6></mat-datepicker>\r\n                </mat-form-field>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div> \r\n    <div fxFlex=\"50\" class=\"flex-p\"> \r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Datepicker open method</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content fxLayoutAlign=\"center center\">\r\n                <mat-form-field>\r\n                    <input matInput [matDatepicker]=\"picker7\" placeholder=\"Choose a date\">\r\n                    <mat-datepicker #picker7></mat-datepicker>\r\n                </mat-form-field>\r\n                <button mat-raised-button (click)=\"picker7.open()\">Open</button>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>                                 \r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { AutocompleteComponent } from './autocomplete/autocomplete.component';\r\nimport { CheckboxComponent } from './checkbox/checkbox.component';\r\nimport { DatepickerComponent } from './datepicker/datepicker.component';\r\nimport { FormFieldComponent } from './form-field/form-field.component';\r\nimport { InputComponent } from './input/input.component';\r\nimport { RadioButtonComponent } from './radio-button/radio-button.component';\r\nimport { SelectComponent } from './select/select.component';\r\nimport { SliderComponent } from './slider/slider.component';\r\nimport { SlideToggleComponent } from './slide-toggle/slide-toggle.component';\r\n\r\nexport const routes: Routes = [\r\n  { path: '', redirectTo: 'autocomplete', pathMatch: 'full'},\r\n  { path: 'autocomplete', component: AutocompleteComponent, data: { breadcrumb: 'Autocomplete' } },\r\n  { path: 'checkbox', component: CheckboxComponent, data: { breadcrumb: 'Checkbox' } },\r\n  { path: 'datepicker', component: DatepickerComponent, data: { breadcrumb: 'Datepicker' } },\r\n  { path: 'form-field', component: FormFieldComponent, data: { breadcrumb: 'Form Field' } },\r\n  { path: 'input', component: InputComponent, data: { breadcrumb: 'Input' } },\r\n  { path: 'radio-button', component: RadioButtonComponent, data: { breadcrumb: 'Radio Button' } },\r\n  { path: 'select', component: SelectComponent, data: { breadcrumb: 'Select' } },\r\n  { path: 'slider', component: SliderComponent, data: { breadcrumb: 'Slider' } },\r\n  { path: 'slide-toggle', component: SlideToggleComponent, data: { breadcrumb: 'Slide Toggle' } }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    PerfectScrollbarModule,\r\n    SharedModule\r\n  ],\r\n  declarations: [\r\n    AutocompleteComponent, \r\n    CheckboxComponent, \r\n    DatepickerComponent, \r\n    FormFieldComponent, \r\n    InputComponent, \r\n    RadioButtonComponent, \r\n    SelectComponent, \r\n    SliderComponent, \r\n    SlideToggleComponent\r\n  ]\r\n})\r\nexport class FormControlsModule { }","import { Component } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup, UntypedFormControl, Validators } from '@angular/forms';\r\nimport { AppSettings } from '../../../app.settings';\r\nimport { Settings } from '../../../app.settings.model';\r\n\r\n@Component({\r\n  selector: 'app-form-field',\r\n  templateUrl: './form-field.component.html'\r\n})\r\nexport class FormFieldComponent {\r\n  options: UntypedFormGroup;\r\n  email = new UntypedFormControl('', [Validators.required, Validators.email]);\r\n  hide:boolean = true;\r\n  themingForm: UntypedFormGroup;\r\n  public settings: Settings;\r\n  constructor(public appSettings:AppSettings, public formBuilder:UntypedFormBuilder) {\r\n    this.settings = this.appSettings.settings;     \r\n  }\r\n\r\n  ngOnInit(){\r\n    this.options = this.formBuilder.group({\r\n      hideRequired: false,\r\n      floatLabel: 'auto',\r\n    });\r\n    this.themingForm = this.formBuilder.group({\r\n      'color': 'primary',\r\n      'fontSize': [16, Validators.min(10)],\r\n    });\r\n  }\r\n  \r\n  getErrorMessage() {\r\n    return this.email.hasError('required') ? 'You must enter a value' :\r\n        this.email.hasError('email') ? 'Not a valid email' :\r\n            '';\r\n  }\r\n\r\n  getFontSize() {\r\n    return Math.max(10, this.themingForm.value.fontSize);\r\n  }\r\n\r\n}","<div fxLayout=\"column\">\r\n    <div class=\"flex-p\">\r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Simple form field</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content fxLayout=\"column\" fxLayoutAlign=\"center\">\r\n                <mat-form-field>\r\n                    <input matInput placeholder=\"Input\">\r\n                </mat-form-field>\r\n                <mat-form-field>\r\n                    <textarea matInput placeholder=\"Textarea\"></textarea>\r\n                </mat-form-field>\r\n                <mat-form-field>\r\n                    <mat-select placeholder=\"Select\">\r\n                        <mat-option value=\"option\">Option</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>                               \r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n    <div class=\"flex-p\">\r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Form field with placeholder</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content fxLayout=\"column\" fxLayoutAlign=\"center\">\r\n                <form [formGroup]=\"options\">\r\n                    <mat-checkbox formControlName=\"hideRequired\">Hide required marker</mat-checkbox>\r\n                    <div class=\"py-1\">\r\n                        <label>Float label: </label>\r\n                        <mat-radio-group formControlName=\"floatLabel\">\r\n                            <mat-radio-button value=\"auto\" class=\"mx-1\">Auto</mat-radio-button>\r\n                            <mat-radio-button value=\"always\" class=\"mx-1\">Always</mat-radio-button>\r\n                            <mat-radio-button value=\"never\" class=\"mx-1\">Never</mat-radio-button>\r\n                        </mat-radio-group>\r\n                    </div>\r\n                </form>\r\n                <mat-form-field [hideRequiredMarker]=\"options.value.hideRequired\"\r\n                                [floatLabel]=\"options.value.floatLabel\">\r\n                    <input matInput placeholder=\"Simple placeholder\" required>\r\n                </mat-form-field>\r\n                <mat-form-field [hideRequiredMarker]=\"options.value.hideRequired\"\r\n                                [floatLabel]=\"options.value.floatLabel\">\r\n                    <mat-select required>\r\n                        <mat-option>-- None --</mat-option>\r\n                        <mat-option value=\"option\">Option</mat-option>\r\n                    </mat-select>\r\n                    <mat-placeholder><mat-icon>favorite</mat-icon> <b> Fancy</b> <i> placeholder</i></mat-placeholder>\r\n                </mat-form-field>               \r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div> \r\n    <div class=\"flex-p\">\r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Form field with hints</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content fxLayout=\"column\" fxLayoutAlign=\"center\">\r\n                <mat-form-field hintLabel=\"Max 10 characters\">\r\n                    <input matInput #input maxlength=\"10\" placeholder=\"Enter some input\">\r\n                    <mat-hint align=\"end\">{{input.value?.length || 0}}/10</mat-hint>\r\n                </mat-form-field>\r\n                <mat-form-field>\r\n                    <mat-select placeholder=\"Select me\">\r\n                      <mat-option value=\"option\">Option</mat-option>\r\n                    </mat-select>\r\n                    <mat-hint align=\"end\">Here's the dropdown arrow ^</mat-hint>\r\n                </mat-form-field>                            \r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div> \r\n    <div class=\"flex-p\">\r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Form field with error messages</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content fxLayout=\"column\" fxLayoutAlign=\"center\">\r\n                <mat-form-field>\r\n                    <input matInput placeholder=\"Enter your email\" [formControl]=\"email\" required>\r\n                    <mat-error *ngIf=\"email.invalid\">{{getErrorMessage()}}</mat-error>\r\n                </mat-form-field>                           \r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div> \r\n    <div class=\"flex-p\">\r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Form field with prefix & suffix</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content fxLayout=\"column\" fxLayoutAlign=\"center\">\r\n                <mat-form-field>\r\n                    <input matInput placeholder=\"Enter your password\" [type]=\"hide ? 'password' : 'text'\">\r\n                    <mat-icon matSuffix (click)=\"hide = !hide\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\r\n                </mat-form-field>\r\n                <mat-form-field>\r\n                    <input matInput placeholder=\"Amount\" type=\"number\" [style.text-align]=\"'right'\">\r\n                    <span matPrefix>$&nbsp;</span>\r\n                    <span matSuffix>.00</span>\r\n                </mat-form-field>                        \r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n    <div class=\"flex-p\">\r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Form field theming</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <form [formGroup]=\"themingForm\" [style.fontSize.px]=\"getFontSize()\" fxLayout=\"column\" fxLayoutAlign=\"center\">\r\n                    <mat-form-field [color]=\"themingForm.value.color\">\r\n                        <mat-select placeholder=\"Color\" formControlName=\"color\">\r\n                            <mat-option value=\"primary\">Primary</mat-option>\r\n                            <mat-option value=\"accent\">Accent</mat-option>\r\n                            <mat-option value=\"warn\">Warn</mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                    <mat-form-field [color]=\"themingForm.value.color\">\r\n                        <input matInput type=\"number\" placeholder=\"Font size (px)\" formControlName=\"fontSize\" min=\"10\">\r\n                        <mat-error *ngIf=\"themingForm.get('fontSize')?.invalid\">Min size: 10px</mat-error>\r\n                    </mat-form-field>\r\n                </form>     \r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>  \r\n</div>","import { Component } from '@angular/core';\r\nimport { UntypedFormControl, FormGroupDirective, NgForm, Validators } from '@angular/forms';\r\nimport { ErrorStateMatcher } from '@angular/material/core';\r\nimport { AppSettings } from '../../../app.settings';\r\nimport { Settings } from '../../../app.settings.model';\r\n\r\n@Component({\r\n  selector: 'app-input',\r\n  templateUrl: './input.component.html'\r\n})\r\nexport class InputComponent {\r\n  public settings: Settings;\r\n  constructor(public appSettings:AppSettings) {\r\n    this.settings = this.appSettings.settings;     \r\n  }\r\n\r\n  //Input with a custom ErrorStateMatcher\r\n  emailFormControl = new UntypedFormControl('', [\r\n    Validators.required,\r\n    Validators.email,\r\n  ]);\r\n  matcher = new MyErrorStateMatcher();\r\n\r\n  //Input with a clear button\r\n  value = 'Clear me';\r\n}\r\n\r\n\r\n/** Error when invalid control is dirty, touched, or submitted. */\r\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\r\n  isErrorState(control: UntypedFormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n    const isSubmitted = form && form.submitted;\r\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\r\n  }\r\n}","<div fxLayout=\"column\">\r\n    <div class=\"flex-p\">\r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Basic Inputs</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <form fxLayout=\"column\" fxLayoutAlign=\"center\">\r\n                    <mat-form-field>\r\n                        <input matInput placeholder=\"Favorite food\" value=\"Sushi\">\r\n                    </mat-form-field>\r\n                    <mat-form-field>\r\n                        <textarea matInput placeholder=\"Leave a comment\"></textarea>\r\n                    </mat-form-field>\r\n                </form>                              \r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n    <div class=\"flex-p\">\r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Input with a custom ErrorStateMatcher</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <form fxLayout=\"column\" fxLayoutAlign=\"center\">\r\n                    <mat-form-field>\r\n                        <input matInput placeholder=\"Email\" [formControl]=\"emailFormControl\" [errorStateMatcher]=\"matcher\">\r\n                        <mat-hint>Errors appear instantly!</mat-hint>\r\n                        <mat-error *ngIf=\"emailFormControl.hasError('email') && !emailFormControl.hasError('required')\">Please enter a valid email address</mat-error>\r\n                        <mat-error *ngIf=\"emailFormControl.hasError('required')\">Email is <strong>required</strong></mat-error>\r\n                    </mat-form-field>\r\n                </form>                              \r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n    <div class=\"flex-p\">\r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Auto-resizing textarea</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content fxLayout=\"column\" fxLayoutAlign=\"center\">\r\n                <mat-form-field>\r\n                    <textarea matInput \r\n                              placeholder=\"Autosize textarea\" \r\n                              matTextareaAutosize \r\n                              matAutosizeMinRows=\"2\"\r\n                              matAutosizeMaxRows=\"5\"></textarea>\r\n                </mat-form-field>                       \r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n    <div class=\"flex-p\">\r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Input with a clear button</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content fxLayout=\"column\" fxLayoutAlign=\"center\">\r\n                <mat-form-field>\r\n                    <input matInput type=\"text\" placeholder=\"Clearable input\" [(ngModel)]=\"value\"/>\r\n                    <button mat-button *ngIf=\"value\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"value=''\">\r\n                        <mat-icon>close</mat-icon>\r\n                    </button>\r\n                </mat-form-field>                       \r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n    <div class=\"flex-p\">\r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Inputs in a form</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <form fxLayout=\"column\" fxLayoutAlign=\"center\">\r\n                  \r\n                    <mat-form-field>\r\n                        <input matInput placeholder=\"Company (disabled)\" disabled value=\"Google\">\r\n                    </mat-form-field>\r\n\r\n                    <table cellspacing=\"0\" class=\"w-100\">\r\n                        <tr>\r\n                            <td>\r\n                                <mat-form-field class=\"w-100\">\r\n                                    <input matInput placeholder=\"First name\">\r\n                                </mat-form-field>\r\n                            </td>\r\n                            <td>\r\n                                <mat-form-field class=\"w-100\">\r\n                                    <input matInput placeholder=\"Long Last Name That Will Be Truncated\">\r\n                                </mat-form-field>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                    \r\n                    <mat-form-field class=\"w-100\">\r\n                        <textarea matInput placeholder=\"Address\">1600 Amphitheatre Pkwy</textarea>\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field class=\"w-100\">\r\n                        <textarea matInput placeholder=\"Address 2\"></textarea>\r\n                    </mat-form-field>                   \r\n\r\n                    <table cellspacing=\"0\" class=\"w-100\">\r\n                        <tr>\r\n                            <td>\r\n                                <mat-form-field class=\"w-100\">\r\n                                    <input matInput placeholder=\"City\">\r\n                                </mat-form-field>\r\n                            </td>\r\n                            <td>\r\n                                <mat-form-field class=\"w-100\">\r\n                                    <input matInput placeholder=\"State\">\r\n                                </mat-form-field>\r\n                            </td>\r\n                            <td>\r\n                                <mat-form-field class=\"w-100\">\r\n                                    <input matInput #postalCode maxlength=\"5\" placeholder=\"Postal Code\" value=\"94043\">\r\n                                    <mat-hint align=\"end\">{{postalCode.value.length}} / 5</mat-hint>\r\n                                </mat-form-field>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n\r\n                </form>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { AppSettings } from '../../../app.settings';\r\nimport { Settings } from '../../../app.settings.model';\r\n\r\n@Component({\r\n  selector: 'app-radio-button',\r\n  templateUrl: './radio-button.component.html',\r\n  styleUrls: ['./radio-button.component.scss']\r\n})\r\nexport class RadioButtonComponent {\r\n  public settings: Settings;\r\n  constructor(public appSettings:AppSettings) {\r\n    this.settings = this.appSettings.settings;     \r\n  }\r\n\r\n  favoriteSeason: string;\r\n  seasons = [\r\n    'Winter',\r\n    'Spring',\r\n    'Summer',\r\n    'Autumn',\r\n  ];\r\n}","<div fxLayout=\"column\">\r\n    <div class=\"flex-p\">\r\n        <mat-card>\r\n            <mat-card-header>                \r\n                <mat-card-subtitle><h2>Basic radios</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <mat-radio-group>\r\n                    <mat-radio-button value=\"1\" class=\"mx-1\">Option 1</mat-radio-button>\r\n                    <mat-radio-button value=\"2\" class=\"mx-1\">Option 2</mat-radio-button>\r\n                </mat-radio-group>   \r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div> \r\n    <div class=\"flex-p\">\r\n        <mat-card>\r\n            <mat-card-header>                \r\n                <mat-card-subtitle><h2>Radios with ngModel</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <mat-radio-group [(ngModel)]=\"favoriteSeason\" fxLayout=\"column\" fxLayoutAlign=\"center\">\r\n                    <mat-radio-button *ngFor=\"let season of seasons\" [value]=\"season\" class=\"season-item\">\r\n                      {{season}}\r\n                    </mat-radio-button>\r\n                </mat-radio-group>\r\n                <div class=\"py-1\">Your favorite season is: <b> {{favoriteSeason}} </b></div>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div> \r\n</div>","import { Component } from '@angular/core';\r\nimport { UntypedFormControl } from '@angular/forms';\r\nimport { AppSettings } from '../../../app.settings';\r\nimport { Settings } from '../../../app.settings.model';\r\n\r\n@Component({\r\n  selector: 'app-select',\r\n  templateUrl: './select.component.html'\r\n})\r\nexport class SelectComponent {\r\n  public settings: Settings;\r\n  constructor(public appSettings:AppSettings) {\r\n    this.settings = this.appSettings.settings;     \r\n  }\r\n\r\n  //Basic select\r\n  selectedValue: string;\r\n  foods = [\r\n    {value: 'steak-0', viewValue: 'Steak'},\r\n    {value: 'pizza-1', viewValue: 'Pizza'},\r\n    {value: 'tacos-2', viewValue: 'Tacos'}\r\n  ];\r\n\r\n  //Select with option groups\r\n  pokemonControl = new UntypedFormControl();\r\n  pokemonGroups = [\r\n    {\r\n      name: 'Grass',\r\n      pokemon: [\r\n        { value: 'bulbasaur-0', viewValue: 'Bulbasaur' },\r\n        { value: 'oddish-1', viewValue: 'Oddish' },\r\n        { value: 'bellsprout-2', viewValue: 'Bellsprout' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'Water',\r\n      pokemon: [\r\n        { value: 'squirtle-3', viewValue: 'Squirtle' },\r\n        { value: 'psyduck-4', viewValue: 'Psyduck' },\r\n        { value: 'horsea-5', viewValue: 'Horsea' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'Fire',\r\n      disabled: true,\r\n      pokemon: [\r\n        { value: 'charmander-6', viewValue: 'Charmander' },\r\n        { value: 'vulpix-7', viewValue: 'Vulpix' },\r\n        { value: 'flareon-8', viewValue: 'Flareon' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'Psychic',\r\n      pokemon: [\r\n        { value: 'mew-9', viewValue: 'Mew' },\r\n        { value: 'mewtwo-10', viewValue: 'Mewtwo' },\r\n      ]\r\n    }\r\n  ];\r\n\r\n  //Select with multiple selection\r\n  toppings = new UntypedFormControl();\r\n  toppingList = ['Extra cheese', 'Mushroom', 'Onion', 'Pepperoni', 'Sausage', 'Tomato'];\r\n\r\n  //Select with custom trigger text\r\n  toppings2 = new UntypedFormControl();\r\n  toppingList2 = ['Extra cheese', 'Mushroom', 'Onion', 'Pepperoni', 'Sausage', 'Tomato'];\r\n\r\n}","<div fxLayout=\"column\">\r\n    <div class=\"flex-p\">\r\n        <mat-card>\r\n            <mat-card-header>                \r\n                <mat-card-subtitle><h2>Basic select</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content >\r\n                <mat-form-field>\r\n                    <mat-select placeholder=\"Favorite food\" [(ngModel)]=\"selectedValue\" name=\"food\">\r\n                        <mat-option *ngFor=\"let food of foods\" [value]=\"food.value\">\r\n                            {{food.viewValue}}\r\n                        </mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n                <p class=\"py-1\"> Selected value: <b>{{selectedValue}}</b> </p>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div> \r\n    <div class=\"flex-p\">\r\n        <mat-card>\r\n            <mat-card-header>                \r\n                <mat-card-subtitle><h2>Select with option groups</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content >\r\n                <mat-form-field>\r\n                    <mat-select placeholder=\"Pokemon\" [formControl]=\"pokemonControl\">\r\n                        <mat-option>-- None --</mat-option>\r\n                        <mat-optgroup *ngFor=\"let group of pokemonGroups\" [label]=\"group.name\" [disabled]=\"group.disabled\">\r\n                            <mat-option *ngFor=\"let pokemon of group.pokemon\" [value]=\"pokemon.value\">\r\n                                {{ pokemon.viewValue }}\r\n                            </mat-option>\r\n                        </mat-optgroup>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div> \r\n    <div class=\"flex-p\">\r\n        <mat-card>\r\n            <mat-card-header>                \r\n                <mat-card-subtitle><h2>Select with multiple selection</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content >\r\n                <mat-form-field>\r\n                    <mat-select placeholder=\"Toppings\" [formControl]=\"toppings\" multiple>\r\n                        <mat-option *ngFor=\"let topping of toppingList\" [value]=\"topping\">{{topping}}</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div> \r\n    <div class=\"flex-p\">\r\n        <mat-card>\r\n            <mat-card-header>                \r\n                <mat-card-subtitle><h2>Select with custom trigger text</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content >\r\n                <mat-form-field>\r\n                    <mat-select placeholder=\"Toppings\" [formControl]=\"toppings2\" multiple>\r\n                        <mat-select-trigger>\r\n                          {{toppings2.value ? toppings2.value[0] : ''}}\r\n                          <small *ngIf=\"toppings2.value?.length > 1\">\r\n                            (+{{toppings2.value.length - 1}} others)\r\n                          </small>\r\n                        </mat-select-trigger>\r\n                        <mat-option *ngFor=\"let topping of toppingList2\" [value]=\"topping\">{{topping}}</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div> \r\n</div>","import { Component } from '@angular/core';\r\nimport { AppSettings } from '../../../app.settings';\r\nimport { Settings } from '../../../app.settings.model';\r\n\r\n@Component({\r\n  selector: 'app-slide-toggle',\r\n  templateUrl: './slide-toggle.component.html'\r\n})\r\nexport class SlideToggleComponent {\r\n  public settings: Settings;\r\n  constructor(public appSettings:AppSettings) {\r\n    this.settings = this.appSettings.settings;     \r\n  }\r\n\r\n  color = 'accent';\r\n  checked = false;\r\n  disabled = false;\r\n\r\n}","<div fxLayout=\"column\">\r\n    <div class=\"flex-p\">\r\n        <mat-card>\r\n            <mat-card-header>                \r\n                <mat-card-subtitle><h2>Slide-toggle configuration</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <section class=\"py-1\">\r\n                    <label>Color:</label>\r\n                    <mat-radio-group [(ngModel)]=\"color\">\r\n                        <mat-radio-button value=\"primary\" class=\"mx-1\">Primary</mat-radio-button>\r\n                        <mat-radio-button value=\"accent\" class=\"mx-1\">Accent</mat-radio-button>\r\n                        <mat-radio-button value=\"warn\" class=\"mx-1\">Warn</mat-radio-button>\r\n                    </mat-radio-group>\r\n                </section>\r\n\r\n                <section class=\"py-1\">\r\n                    <mat-checkbox [(ngModel)]=\"checked\">Checked</mat-checkbox>\r\n                </section>\r\n\r\n                <section class=\"py-1\">\r\n                    <mat-checkbox [(ngModel)]=\"disabled\">Disabled</mat-checkbox>\r\n                </section>\r\n\r\n                <hr>\r\n\r\n                <h2 class=\"py-1\">Result</h2>\r\n\r\n                <mat-slide-toggle\r\n                    [color]=\"color\"\r\n                    [checked]=\"checked\"\r\n                    [disabled]=\"disabled\">\r\n                  Slide me!\r\n                </mat-slide-toggle>\r\n                            \r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div> \r\n</div>","import { Component } from '@angular/core';\r\nimport { AppSettings } from '../../../app.settings';\r\nimport { Settings } from '../../../app.settings.model';\r\n\r\n@Component({\r\n  selector: 'app-slider',\r\n  templateUrl: './slider.component.html',\r\n  styleUrls: ['./slider.component.scss']\r\n})\r\nexport class SliderComponent {\r\n  public settings: Settings;\r\n  constructor(public appSettings:AppSettings) {\r\n    this.settings = this.appSettings.settings;     \r\n  }\r\n\r\n\r\n  autoTicks = false;\r\n  disabled = false;\r\n  invert = false;\r\n  max = 100;\r\n  min = 0;\r\n  showTicks = false;\r\n  step = 1;\r\n  thumbLabel = false;\r\n  value = 0;\r\n  vertical = false;\r\n\r\n  get tickInterval(): number | 'auto' {\r\n    return this.showTicks ? (this.autoTicks ? 'auto' : this._tickInterval) : 0;\r\n  }\r\n  set tickInterval(v) {\r\n    this._tickInterval = Number(v);\r\n  }\r\n  private _tickInterval = 1;\r\n\r\n}\r\n","<div fxLayout=\"column\">\r\n    <div class=\"flex-p\">\r\n        <mat-card>\r\n            <mat-card-header>                \r\n                <mat-card-subtitle><h2>Slider configuration</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <section class=\"py-1\">\r\n                    <mat-form-field>\r\n                        <input matInput type=\"number\" placeholder=\"Value\" [(ngModel)]=\"value\">\r\n                    </mat-form-field>\r\n                    <mat-form-field>\r\n                        <input matInput type=\"number\" placeholder=\"Min value\" [(ngModel)]=\"min\">\r\n                    </mat-form-field>\r\n                    <mat-form-field>\r\n                        <input matInput type=\"number\" placeholder=\"Max value\" [(ngModel)]=\"max\">\r\n                    </mat-form-field>\r\n                    <mat-form-field>\r\n                        <input matInput type=\"number\" placeholder=\"Step size\" [(ngModel)]=\"step\">\r\n                    </mat-form-field>\r\n                </section>\r\n\r\n                <section class=\"py-1\">\r\n                    <mat-checkbox [(ngModel)]=\"showTicks\" class=\"mx-1\">Show ticks</mat-checkbox>\r\n                    <mat-checkbox [(ngModel)]=\"autoTicks\" *ngIf=\"showTicks\" class=\"mx-1\">Auto ticks</mat-checkbox>\r\n                    <mat-form-field *ngIf=\"showTicks && !autoTicks\" class=\"mx-1\">\r\n                        <input matInput type=\"number\" placeholder=\"Tick interval\" [(ngModel)]=\"tickInterval\">\r\n                    </mat-form-field>\r\n                </section>\r\n\r\n                <section class=\"py-1\">\r\n                    <mat-checkbox [(ngModel)]=\"thumbLabel\" class=\"mx-1\">Show thumb label</mat-checkbox>\r\n                </section>\r\n\r\n                <section class=\"py-1\">\r\n                    <mat-checkbox [(ngModel)]=\"vertical\" class=\"mx-1\">Vertical</mat-checkbox>\r\n                    <mat-checkbox [(ngModel)]=\"invert\" class=\"mx-1\">Inverted</mat-checkbox>\r\n                </section>\r\n\r\n                <section class=\"py-1\">\r\n                    <mat-checkbox [(ngModel)]=\"disabled\" class=\"mx-1\">Disabled</mat-checkbox>\r\n                </section>\r\n\r\n                <hr>\r\n\r\n                <h2 class=\"py-1\">Result</h2>\r\n\r\n                <mat-slider class=\"custom-slider\"\r\n                    [disabled]=\"disabled\"\r\n                    [invert]=\"invert\"\r\n                    [max]=\"max\"\r\n                    [min]=\"min\"\r\n                    [step]=\"step\"\r\n                    [thumbLabel]=\"thumbLabel\"\r\n                    [tickInterval]=\"tickInterval\"\r\n                    [(ngModel)]=\"value\"\r\n                    [vertical]=\"vertical\">\r\n                </mat-slider>\r\n                            \r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div> \r\n</div>"],"names":["UntypedFormControl","map","startWith","i0","AutocompleteComponent","constructor","appSettings","settings","ngOnInit","filteredOptions","filteredControl","valueChanges","pipe","value","_filter","filteredOptionsf","filteredControlf","_filterf","filterValue","toLowerCase","options","filter","option","includes","optionsf","selectors","decls","vars","consts","template","_r0","_r2","_r4"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}