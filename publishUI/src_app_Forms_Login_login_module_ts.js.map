{"version":3,"file":"src_app_Forms_Login_login_module_ts.js","mappings":"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","sources":["./src/app/Forms/Login/login.component.ts","./src/app/Forms/Login/login.component.html","./src/app/Forms/Login/login.module.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UntypedFormGroup, UntypedFormBuilder, Validators} from '@angular/forms';\r\nimport { emailValidator } from '../../theme/utils/app-validators';\r\nimport { AppSettings } from '../../app.settings';\r\nimport { Settings } from '../../app.settings.model';\r\nimport { AuthenticationService } from './authentication.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent {\r\n  public form:UntypedFormGroup;\r\n  public settings: Settings;\r\n  returnUrl: any;\r\n\r\n  constructor(public snackBar: MatSnackBar, public appSettings: AppSettings, public fb: UntypedFormBuilder, public router: Router\r\n    , private authService: AuthenticationService, private route: ActivatedRoute) {\r\n    this.settings = this.appSettings.settings; \r\n    this.form = this.fb.group({\r\n      'name': [null, Validators.compose([Validators.required])],\r\n      'password': [null, Validators.compose([Validators.required, Validators.minLength(6)])] \r\n    });\r\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\r\n  }\r\n\r\n  public onSubmit(values: Object): void {\r\n    debugger\r\n    if (this.form.valid)\r\n    {\r\n      const login = { ...this.form.value };\r\n      this.authService.Login(login)\r\n        .subscribe({\r\n          next: (res: any) => {\r\n            localStorage.setItem(\"token\", res.token);\r\n            localStorage.setItem(\"userData\", JSON.stringify(res));\r\n            this.authService.sendAuthStateChangeNotification(res.isAuthSuccessful);\r\n            this.authService.saveUserData(res);\r\n            this.router.navigate([this.returnUrl]);\r\n          },\r\n          error: (err: any) => {\r\n            console.log('err', err);\r\n            if(!err.error.isAuthSuccessful){\r\n              this.showToaster(err.error.errorMessage, true);\r\n            }\r\n            //this.errorMessage = err.message;\r\n            //this.showError = true;\r\n          }\r\n        })\r\n\r\n\r\n    //  this.router.navigate(['/']);\r\n    }\r\n  }\r\n\r\n  showToaster(message, isError = false) {\r\n    const panelClass = isError ? ['red-text'] : undefined;\r\n    const label = isError ? \"Error\" : \"Success\";\r\n    const time = isError? 6000 : 3000;\r\n  \r\n    this.snackBar.open(message, label, {\r\n      duration: time,\r\n      panelClass: panelClass,\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(){\r\n    this.settings.loadingSpinner = false; \r\n  }\r\n}\r\n","<mat-sidenav-container>\r\n\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"h-100\">\r\n\r\n       <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit(form.value)\" fxFlex=\"80\" fxFlex.gt-sm=\"30\" fxFlex.sm=\"60\">\r\n\r\n            <mat-card class=\"p-0 mat-elevation-z24 box login\">\r\n                <div fxLayoutAlign=\"center center\" class=\"bg-primary box-header\">\r\n                    <img src=\"../../../assets/img/app/logo.png\" alt=\"\" class=\"logo-img\">\r\n                    <span class=\"logo\">Sauda Web</span>\r\n                </div>\r\n                <mat-card-content fxLayout=\"column\" fxLayoutAlign=\"end center\" class=\"box-content\">\r\n                    <mat-card fxLayout=\"column\" fxLayoutAlign=\"center center\" class=\"mat-elevation-z12 box-content-inner\">\r\n                        <span class=\"box-content-header\">member login</span>  \r\n                        <mat-form-field class=\"w-100\">\r\n                            <input matInput placeholder=\"User ID\" formControlName=\"name\">\r\n                            <mat-error *ngIf=\"form.controls.name.errors?.required\">User Id is required</mat-error>\r\n                            <!--<mat-error *ngIf=\"form.controls.UserId.hasError('invalidEmail')\">Invalid UserId address</mat-error>-->\r\n                        </mat-form-field>\r\n                        <mat-form-field class=\"w-100\">\r\n                            <input type=\"password\" matInput placeholder=\"Password\" formControlName=\"password\">\r\n                            <mat-error *ngIf=\"form.controls.password.errors?.required\">Password is required</mat-error>\r\n                            <mat-error *ngIf=\"form.controls.password.hasError('minlength')\">Password isn't long enough, minimum of 6 characters</mat-error>\r\n                        </mat-form-field> \r\n                        <div class=\"w-100 text-end forgot-password\">\r\n                            <a routerLink=\"\">\r\n                                Forgot Password\r\n                            </a>\r\n                        </div>\r\n                    </mat-card>\r\n                    <button mat-raised-button color=\"primary\" class=\"mat-elevation-z12 box-button\" type=\"submit\">SIGN IN</button>\r\n                </mat-card-content>\r\n            </mat-card>\r\n            \r\n        </form>    \r\n  \r\n  </div>\r\n\r\n</mat-sidenav-container>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { LoginComponent } from './login.component';\r\n\r\nexport const routes: Routes = [\r\n  { path: '', component: LoginComponent, pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    FormsModule, \r\n    ReactiveFormsModule,\r\n    SharedModule\r\n  ],\r\n  declarations: [\r\n    LoginComponent\r\n  ]\r\n})\r\nexport class LoginModule { }"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}