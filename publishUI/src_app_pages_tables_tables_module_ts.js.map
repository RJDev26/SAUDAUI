{"version":3,"file":"src_app_pages_tables_tables_module_ts.js","mappings":"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","sources":["./src/app/pages/tables/basic/basic.component.ts","./src/app/pages/tables/basic/basic.component.html","./src/app/pages/tables/filtering/filtering.component.ts","./src/app/pages/tables/filtering/filtering.component.html","./src/app/pages/tables/ngx-table/ngx-table.component.ts","./src/app/pages/tables/ngx-table/ngx-table.component.html","./src/app/pages/tables/paging/paging.component.ts","./src/app/pages/tables/paging/paging.component.html","./src/app/pages/tables/selecting/selecting.component.ts","./src/app/pages/tables/selecting/selecting.component.html","./src/app/pages/tables/sorting/sorting.component.ts","./src/app/pages/tables/sorting/sorting.component.html","./src/app/pages/tables/tables.module.ts","./src/app/pages/tables/tables.service.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { AppSettings } from '../../../app.settings';\r\nimport { Settings } from '../../../app.settings.model';\r\nimport { TablesService, Element } from '../tables.service';\r\n\r\n@Component({\r\n  selector: 'app-basic',\r\n  templateUrl: './basic.component.html'\r\n})\r\nexport class BasicComponent {\r\n  public displayedColumns = ['position', 'name', 'weight', 'symbol'];\r\n  public dataSource: any;\r\n  public settings: Settings;\r\n  constructor(public appSettings:AppSettings, private tablesService:TablesService) {\r\n    this.settings = this.appSettings.settings; \r\n    this.dataSource = new MatTableDataSource<Element>(this.tablesService.getData());\r\n  }\r\n}","<div fxLayout=\"column\">\r\n    <div class=\"flex-p\"> \r\n        <mat-table #table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">       \r\n            <ng-container matColumnDef=\"position\">\r\n                <mat-header-cell *matHeaderCellDef> No. </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\"> {{element.position}} </mat-cell>\r\n            </ng-container>         \r\n            <ng-container matColumnDef=\"name\">\r\n                <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\r\n            </ng-container>     \r\n            <ng-container matColumnDef=\"weight\">\r\n                <mat-header-cell *matHeaderCellDef> Weight </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\"> {{element.weight}} </mat-cell>\r\n            </ng-container>        \r\n            <ng-container matColumnDef=\"symbol\">\r\n                <mat-header-cell *matHeaderCellDef> Symbol </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\"> {{element.symbol}} </mat-cell>\r\n            </ng-container>\r\n            <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n            <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n        </mat-table>\r\n    </div>\r\n</div>","import { Component } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { AppSettings } from '../../../app.settings';\r\nimport { Settings } from '../../../app.settings.model';\r\nimport { TablesService, Element } from '../tables.service';\r\n\r\n@Component({\r\n  selector: 'app-filtering',\r\n  templateUrl: './filtering.component.html'\r\n})\r\nexport class FilteringComponent {\r\n  public displayedColumns = ['position', 'name', 'weight', 'symbol'];\r\n  public dataSource: any;\r\n  public settings: Settings;\r\n  constructor(public appSettings:AppSettings, private tablesService:TablesService) {\r\n    this.settings = this.appSettings.settings; \r\n    this.dataSource = new MatTableDataSource<Element>(this.tablesService.getData());\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n}","<div fxLayout=\"column\">\r\n    <div class=\"flex-p\"> \r\n        <div fxLayout=\"column\" class=\"mat-elevation-z8\">           \r\n            <mat-form-field class=\"p-1\">\r\n                <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Type to filter all columns\">\r\n            </mat-form-field> \r\n        </div>\r\n        <mat-table #table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">       \r\n            <ng-container matColumnDef=\"position\">\r\n                <mat-header-cell *matHeaderCellDef> No. </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\"> {{element.position}} </mat-cell>\r\n            </ng-container>         \r\n            <ng-container matColumnDef=\"name\">\r\n                <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\r\n            </ng-container>     \r\n            <ng-container matColumnDef=\"weight\">\r\n                <mat-header-cell *matHeaderCellDef> Weight </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\"> {{element.weight}} </mat-cell>\r\n            </ng-container>        \r\n            <ng-container matColumnDef=\"symbol\">\r\n                <mat-header-cell *matHeaderCellDef> Symbol </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\"> {{element.symbol}} </mat-cell>\r\n            </ng-container>\r\n            <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n            <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n        </mat-table>        \r\n    </div>\r\n</div>","import { Component, ViewChild } from '@angular/core';\r\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\r\nimport { AppSettings } from '../../../app.settings';\r\nimport { Settings } from '../../../app.settings.model';\r\n\r\n@Component({\r\n  selector: 'app-ngx-table',\r\n  templateUrl: './ngx-table.component.html'\r\n})\r\nexport class NgxTableComponent {\r\n  @ViewChild(DatatableComponent) table: DatatableComponent;\r\n  editing = {};\r\n  rows = [];\r\n  temp = [];\r\n  selected = [];\r\n  loadingIndicator: boolean = true;\r\n  reorderable: boolean = true;\r\n  columns = [\r\n    { prop: 'name' },\r\n    { name: 'Gender' },\r\n    { name: 'Company' }\r\n  ];\r\n  public settings: Settings;\r\n\r\n  constructor(public appSettings:AppSettings) {\r\n    this.settings = this.appSettings.settings; \r\n    this.fetch((data) => {\r\n      this.temp = [...data];\r\n      this.rows = data;\r\n      setTimeout(() => { this.loadingIndicator = false; }, 1500);\r\n    });\r\n  }\r\n\r\n  fetch(data) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', 'assets/data/company.json');\r\n    req.onload = () => {\r\n      data(JSON.parse(req.response));\r\n    };\r\n    req.send();\r\n  }\r\n\r\n  updateFilter(event) {\r\n    const val = event.target.value.toLowerCase();\r\n    const temp = this.temp.filter(function(d) {\r\n      return d.name.toLowerCase().indexOf(val) !== -1 || !val;\r\n    });\r\n    this.rows = temp;\r\n    this.table.offset = 0;\r\n  }\r\n\r\n  updateValue(event, cell, rowIndex) {\r\n    this.editing[rowIndex + '-' + cell] = false;\r\n    this.rows[rowIndex][cell] = event.target.value;\r\n    this.rows = [...this.rows];\r\n  }\r\n\r\n  onSelect({ selected }) {\r\n    console.log('Select Event', selected, this.selected);\r\n    this.selected.splice(0, this.selected.length);\r\n    this.selected.push(...selected);\r\n  }\r\n\r\n  onActivate(event) {\r\n    console.log('Activate Event', event);\r\n  }\r\n\r\n}","<div fxLayout=\"column\">\r\n    <div class=\"flex-p\"> \r\n        <div fxLayout=\"column\" class=\"mat-elevation-z8\">           \r\n            <mat-form-field class=\"p-1\">\r\n                <input matInput placeholder=\"Type to filter the name column...\" (keyup)=\"updateFilter($event)\">\r\n            </mat-form-field>\r\n        </div>\r\n        <ngx-datatable\r\n            #table\r\n            class=\"material\"\r\n            [headerHeight]=\"50\"\r\n            [limit]=\"10\"\r\n            [columnMode]=\"'force'\"\r\n            [footerHeight]=\"50\"\r\n            [rowHeight]=\"'auto'\"\r\n            [rows]=\"rows\"\r\n            [loadingIndicator]=\"loadingIndicator\"\r\n            [selected]=\"selected\"\r\n            [selectionType]=\"'checkbox'\"\r\n            (activate)=\"onActivate($event)\"\r\n            (select)='onSelect($event)'>\r\n            <ngx-datatable-column\r\n                [width]=\"30\"\r\n                [sortable]=\"false\"\r\n                [canAutoResize]=\"false\"\r\n                [draggable]=\"true\"\r\n                [resizeable]=\"false\"\r\n                [headerCheckboxable]=\"true\"\r\n                [checkboxable]=\"true\">\r\n            </ngx-datatable-column>\r\n            <ngx-datatable-column name=\"Name\">\r\n              <ng-template ngx-datatable-cell-template let-rowIndex=\"rowIndex\" let-value=\"value\" let-row=\"row\">\r\n                <span\r\n                  title=\"Double click to edit\"\r\n                  (dblclick)=\"editing[rowIndex + '-name'] = true\"\r\n                  *ngIf=\"!editing[rowIndex + '-name']\">\r\n                  {{value}}\r\n                </span>\r\n                <input\r\n                  autofocus\r\n                  (blur)=\"updateValue($event, 'name', rowIndex)\"\r\n                  *ngIf=\"editing[rowIndex+ '-name']\"\r\n                  type=\"text\"\r\n                  [value]=\"value\"\r\n                />\r\n              </ng-template>\r\n            </ngx-datatable-column>\r\n            <ngx-datatable-column name=\"Gender\">\r\n              <ng-template ngx-datatable-cell-template let-rowIndex=\"rowIndex\" let-row=\"row\" let-value=\"value\">\r\n                <span\r\n                  title=\"Double click to edit\"\r\n                  (dblclick)=\"editing[rowIndex + '-gender'] = true\"\r\n                  *ngIf=\"!editing[rowIndex + '-gender']\">\r\n                  {{value}}\r\n                </span>\r\n                <select\r\n                  *ngIf=\"editing[rowIndex + '-gender']\"\r\n                  (change)=\"updateValue($event, 'gender', rowIndex)\"\r\n                  [value]=\"value\">\r\n                  <option value=\"male\">Male</option>\r\n                  <option value=\"female\">Female</option>\r\n                </select>\r\n              </ng-template>\r\n            </ngx-datatable-column>\r\n            <ngx-datatable-column name=\"Company\">\r\n              <ng-template ngx-datatable-cell-template let-value=\"value\">\r\n                {{value}}\r\n              </ng-template>\r\n            </ngx-datatable-column>\r\n        </ngx-datatable>\r\n    </div>\r\n</div>\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { AppSettings } from '../../../app.settings';\r\nimport { Settings } from '../../../app.settings.model';\r\nimport { TablesService, Element } from '../tables.service';\r\n\r\n@Component({\r\n  selector: 'app-paging',\r\n  templateUrl: './paging.component.html'\r\n})\r\nexport class PagingComponent {\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  public displayedColumns = ['position', 'name', 'weight', 'symbol'];\r\n  public dataSource: any;\r\n  public settings: Settings;\r\n  constructor(public appSettings:AppSettings, private tablesService:TablesService) {\r\n    this.settings = this.appSettings.settings; \r\n    this.dataSource = new MatTableDataSource<Element>(this.tablesService.getData());\r\n  }\r\n  \r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  \r\n}","<div fxLayout=\"column\">\r\n    <div class=\"flex-p\"> \r\n        <mat-table #table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">       \r\n            <ng-container matColumnDef=\"position\">\r\n                <mat-header-cell *matHeaderCellDef> No. </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\"> {{element.position}} </mat-cell>\r\n            </ng-container>         \r\n            <ng-container matColumnDef=\"name\">\r\n                <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\r\n            </ng-container>     \r\n            <ng-container matColumnDef=\"weight\">\r\n                <mat-header-cell *matHeaderCellDef> Weight </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\"> {{element.weight}} </mat-cell>\r\n            </ng-container>        \r\n            <ng-container matColumnDef=\"symbol\">\r\n                <mat-header-cell *matHeaderCellDef> Symbol </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\"> {{element.symbol}} </mat-cell>\r\n            </ng-container>\r\n            <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n            <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n        </mat-table>\r\n        <mat-paginator #paginator [pageSize]=\"10\" [pageSizeOptions]=\"[5, 10, 20]\"></mat-paginator>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { TablesService, Element } from '../tables.service';\r\n\r\n@Component({\r\n  selector: 'app-selecting',\r\n  templateUrl: './selecting.component.html'\r\n})\r\nexport class SelectingComponent implements OnInit {\r\n  public displayedColumns: string[] = ['select', 'position', 'name', 'weight', 'symbol'];\r\n  public dataSource:any;\r\n  public selection = new SelectionModel<Element>(true, []);\r\n  constructor(private tablesService:TablesService) { }\r\n\r\n  ngOnInit() {\r\n    this.dataSource = new MatTableDataSource<Element>(this.tablesService.getData());\r\n  }\r\n\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.data.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  masterToggle() {\r\n    this.isAllSelected() ?\r\n        this.selection.clear() :\r\n        this.dataSource.data.forEach(row => this.selection.select(row));\r\n  }\r\n\r\n}\r\n","<div fxLayout=\"column\">\r\n    <div class=\"flex-p\"> \r\n        <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8 w-100\">\r\n            <ng-container matColumnDef=\"select\">\r\n                <th mat-header-cell *matHeaderCellDef>\r\n                    <mat-checkbox (change)=\"$event ? masterToggle() : null\"\r\n                                  [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                                  [indeterminate]=\"selection.hasValue() && !isAllSelected()\">\r\n                    </mat-checkbox>\r\n                </th>\r\n                <td mat-cell *matCellDef=\"let row\">\r\n                    <mat-checkbox (click)=\"$event.stopPropagation()\"\r\n                                  (change)=\"$event ? selection.toggle(row) : null\"\r\n                                  [checked]=\"selection.isSelected(row)\">\r\n                    </mat-checkbox>\r\n                </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"position\">\r\n                <th mat-header-cell *matHeaderCellDef> No. </th>\r\n                <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"name\">\r\n                <th mat-header-cell *matHeaderCellDef> Name </th>\r\n                <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"weight\">\r\n                <th mat-header-cell *matHeaderCellDef> Weight </th>\r\n                <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"symbol\">\r\n                <th mat-header-cell *matHeaderCellDef> Symbol </th>\r\n                <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\r\n            </ng-container>\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"(click)=\"selection.toggle(row)\"></tr>\r\n        </table>\r\n    </div>\r\n</div>","import { Component, ViewChild } from '@angular/core';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { AppSettings } from '../../../app.settings';\r\nimport { Settings } from '../../../app.settings.model';\r\nimport { TablesService, Element } from '../tables.service';\r\n\r\n@Component({\r\n  selector: 'app-sorting',\r\n  templateUrl: './sorting.component.html'\r\n})\r\nexport class SortingComponent {\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  public displayedColumns = ['position', 'name', 'weight', 'symbol'];\r\n  public dataSource: any;\r\n  public settings: Settings;\r\n  constructor(public appSettings:AppSettings, private tablesService:TablesService) {\r\n    this.settings = this.appSettings.settings; \r\n    this.dataSource = new MatTableDataSource<Element>(this.tablesService.getData());\r\n  }\r\n  \r\n  ngAfterViewInit() {\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n}","<div fxLayout=\"column\">\r\n    <div class=\"flex-p\"> \r\n        <mat-table #table [dataSource]=\"dataSource\" matSort class=\"mat-elevation-z8\">       \r\n            <ng-container matColumnDef=\"position\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header> No. </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\"> {{element.position}} </mat-cell>\r\n            </ng-container>         \r\n            <ng-container matColumnDef=\"name\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Name </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\r\n            </ng-container>     \r\n            <ng-container matColumnDef=\"weight\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Weight </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\"> {{element.weight}} </mat-cell>\r\n            </ng-container>        \r\n            <ng-container matColumnDef=\"symbol\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Symbol </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\"> {{element.symbol}} </mat-cell>\r\n            </ng-container>\r\n            <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n            <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n        </mat-table>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { BasicComponent } from './basic/basic.component';\r\nimport { PagingComponent } from './paging/paging.component';\r\nimport { SortingComponent } from './sorting/sorting.component';\r\nimport { FilteringComponent } from './filtering/filtering.component';\r\nimport { SelectingComponent } from './selecting/selecting.component';\r\nimport { NgxTableComponent } from './ngx-table/ngx-table.component';\r\nimport { TablesService } from './tables.service';\r\n\r\nexport const routes: Routes = [\r\n  { path: '', redirectTo: 'basic', pathMatch: 'full'},\r\n  { path: 'basic', component: BasicComponent, data: { breadcrumb: 'Basic table' } },\r\n  { path: 'paging', component: PagingComponent, data: { breadcrumb: 'Paging table' } },\r\n  { path: 'sorting', component: SortingComponent, data: { breadcrumb: 'Sorting table' } },\r\n  { path: 'filtering', component: FilteringComponent, data: { breadcrumb: 'Filtering table' } },  \r\n  { path: 'selecting', component: SelectingComponent, data: { breadcrumb: 'Selecting table' } },\r\n  { path: 'ngx-table', component: NgxTableComponent, data: { breadcrumb: 'Ngx datatable' } },\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    NgxDatatableModule,\r\n    SharedModule\r\n  ],\r\n  declarations: [\r\n    BasicComponent, \r\n    PagingComponent, \r\n    SortingComponent, \r\n    FilteringComponent,\r\n    SelectingComponent, \r\n    NgxTableComponent\r\n  ],\r\n  providers: [\r\n    TablesService\r\n  ]\r\n})\r\nexport class TablesModule { }\r\n","import { Injectable } from '@angular/core';\r\n\r\nexport interface Element {\r\n  name: string;\r\n  position: number;\r\n  weight: number;\r\n  symbol: string;\r\n}\r\n\r\nconst data: Element[] = [\r\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\r\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\r\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\r\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\r\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\r\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\r\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\r\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\r\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\r\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\r\n  {position: 11, name: 'Sodium', weight: 22.9897, symbol: 'Na'},\r\n  {position: 12, name: 'Magnesium', weight: 24.305, symbol: 'Mg'},\r\n  {position: 13, name: 'Aluminum', weight: 26.9815, symbol: 'Al'},\r\n  {position: 14, name: 'Silicon', weight: 28.0855, symbol: 'Si'},\r\n  {position: 15, name: 'Phosphorus', weight: 30.9738, symbol: 'P'},\r\n  {position: 16, name: 'Sulfur', weight: 32.065, symbol: 'S'},\r\n  {position: 17, name: 'Chlorine', weight: 35.453, symbol: 'Cl'},\r\n  {position: 18, name: 'Argon', weight: 39.948, symbol: 'Ar'},\r\n  {position: 19, name: 'Potassium', weight: 39.0983, symbol: 'K'},\r\n  {position: 20, name: 'Calcium', weight: 40.078, symbol: 'Ca'},\r\n];\r\n\r\n\r\n@Injectable()\r\nexport class TablesService {\r\n\r\n  constructor() { }\r\n\r\n  getData(){\r\n    return data;\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}