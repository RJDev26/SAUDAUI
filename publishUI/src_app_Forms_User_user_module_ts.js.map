{"version":3,"file":"src_app_Forms_User_user_module_ts.js","mappings":"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","sources":["./src/app/Forms/User/user.component.ts","./src/app/Forms/User/user.component.html","./src/app/Forms/User/user.module.ts"],"sourcesContent":["import { Component } from \"@angular/core\";\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { InviteUserComponent } from \"./invite-user/invite-user.component\";\r\nimport { MasterService } from \"../Master/master.service\";\r\nimport { AppService } from \"src/app/service/app.service\";\r\nimport { AppSettings } from \"src/app/app.settings\";\r\nimport { Settings } from \"src/app/app.settings.model\";\r\nimport { changePasswordComponent } from \"./change-password/change-password.component\";\r\n\r\n@Component({\r\n    selector: 'app-user',\r\n    templateUrl: './user.component.html',\r\n    styleUrls: ['./user.component.scss']\r\n})\r\n\r\nexport class UserRoleComponent {\r\n    userList: any=[];\r\n    public settings: Settings;\r\n    constructor(public appSettings: AppSettings, private _appService: AppService, public dialog: MatDialog, private _masterService: MasterService) {\r\n        this.settings = this.appSettings.settings;    \r\n    }\r\n\r\n    agGridOptions: any = {\r\n        defaultColDef: {\r\n          filter: true,\r\n          flex: 1,\r\n          sortable: true,\r\n          wraptext: true,\r\n          resizable: true\r\n        }\r\n    }\r\n\r\n    public actionCellRenderer(params: any) {\r\n        let eGui = document.createElement(\"div\");\r\n        let editingCells = params.api.getEditingCells();\r\n        let isCurrentRowEditing = editingCells.some((cell: any) => {\r\n          return cell.rowIndex === params.node.rowIndex;\r\n        });\r\n        eGui.innerHTML = `<button class=\"material-icons action-button-edit\" data-action=\"edit\">edit </button>`;\r\n    \r\n        return eGui;\r\n    }\r\n\r\n    onGridClick(params: any) {\r\n        if (params.event.target.dataset.action == \"edit\") {\r\n          this.inviteUserDialog(params.data.id);\r\n    \r\n        }\r\n        if (params.column && params.column.getColDef().field === 'changePassword') {\r\n            this.dialog.open(changePasswordComponent, {\r\n                data: { id:params.data.id }\r\n              })\r\n        }\r\n    }\r\n\r\n    columnDefs = [\r\n        {\r\n            headerName: 'Action', field: 'fileIcon', cellRenderer: this.actionCellRenderer, minWidth: 80,\r\n            maxWidth: 110, resizable: true, filter: false\r\n        },\r\n        { headerName: 'First Name', field: 'firstName', filter: true, sorting: true, resizable: true },\r\n        { headerName: 'Last Name', field: 'lastName', filter: true, sorting: true, resizable: true },\r\n        { headerName: 'User Name', field: 'userName', filter: true, sorting: true, resizable: true },\r\n        { headerName: 'Email', field: 'email', filter: true, sorting: true, resizable: true },\r\n        { headerName: 'Status', field: 'isActive', filter: true, sorting: true, resizable: true, cellRenderer: (params) => {\r\n            return params.value ? 'Active' : 'Inactive';\r\n        } },\r\n        { \r\n            headerName: '', \r\n            cellRenderer: () => 'Change Password',  \r\n            field: 'changePassword', \r\n            filter: false, \r\n            sorting: false, \r\n            resizable: true,\r\n        },  \r\n    ];\r\n\r\n    getUserList() {\r\n        this._appService.getUserList().subscribe((results) => {\r\n            this.userList = results.data;         \r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.getUserList();\r\n    }\r\n\r\n    public inviteUserDialog(user) {\r\n        let dialogRef = this.dialog.open(InviteUserComponent, {\r\n          data: { id:user }\r\n        });\r\n        dialogRef.afterClosed().subscribe(user => {\r\n            this.getUserList();\r\n        });\r\n    }\r\n}","<div class=\"row\">\r\n    <div fxLayout=\"row\" class=\"mt-2 flex-end\">\r\n      <button mat-raised-button color=\"accent\" (click)=\"inviteUserDialog(null)\" class=\"icon-btn ml-15 create-user\">\r\n        <mat-icon>add</mat-icon> Create User\r\n      </button>\r\n    </div>\r\n</div>\r\n<mat-tab-group class=\"user-tab\">\r\n  <mat-tab label=\"Users\">\r\n    <div class=\"col-xl-12 mt-2\">\r\n      <ag-grid-angular style=\" height: 535px;\"\r\n                        class=\"ag-theme-material\"\r\n                        [rowHeight]=\"31\"\r\n                        [rowData]=\"userList\"\r\n                        [pagination]=\"true\"\r\n                        [columnDefs]=\"columnDefs\"\r\n                        [defaultColDef]=\"agGridOptions.defaultColDef\"\r\n                        (cellClicked)=\"onGridClick($event)\"\r\n                        headerHeight=\"34\">\r\n      </ag-grid-angular>\r\n    </div>\r\n  </mat-tab>\r\n  <mat-tab label=\"Roles\">\r\n    Roles\r\n  </mat-tab>\r\n</mat-tab-group>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { InMemoryWebApiModule } from 'angular-in-memory-web-api';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { PipesModule } from '../../theme/pipes/pipes.module';\r\nimport { UserRoleComponent } from './user.component';\r\nimport { AgGridModule } from 'ag-grid-angular';\r\n\r\nexport const routes: Routes = [\r\n  { path: '', component: UserRoleComponent, pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule,\r\n    RouterModule.forChild(routes),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgxPaginationModule,\r\n    SharedModule,\r\n    PipesModule,\r\n    AgGridModule  \r\n  ],\r\n  declarations: [\r\n    UserRoleComponent,\r\n  ] \r\n})\r\nexport class UserModule { }\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}